{"version":3,"sources":["webpack:///src/app/work-orders/create-work-order/create-work-order.component.ts","webpack:///src/app/work-orders/create-work-order/create-work-order.component.html","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js","webpack:///src/app/work-orders/work-orders.module.ts","webpack:///src/app/work-orders/view-workorder/checklist-task-item/checklist-task-item.component.ts","webpack:///src/app/work-orders/view-workorder/checklist-task-item/checklist-task-item.component.html","webpack:///src/app/work-orders/view-workorder/view-workorder.component.ts","webpack:///src/app/work-orders/view-workorder/view-workorder.component.html","webpack:///src/app/work-orders/pick-workorder-spares/pick-workorder-spares.component.ts","webpack:///src/app/work-orders/pick-workorder-spares/pick-workorder-spares.component.html","webpack:///src/app/work-orders/work-order.wizard.ts","webpack:///src/app/work-orders/work-orders.component.ts","webpack:///src/app/work-orders/work-orders.component.html","webpack:///src/app/work-orders/pick-workorder-spares/spares-skus/spares-skus.component.ts","webpack:///src/app/work-orders/pick-workorder-spares/spares-skus/spares-skus.component.html","webpack:///src/utils/stringUtils.ts","webpack:///src/app/work-orders/work-orders-routing.module.ts"],"names":["CreateWorkOrderComponent","formBuilder","workOrderService","toastService","router","workOrderWizard","isLoading","workOrderPriorities","showSaveButton","submitAttempted","addAssetsModalVisible","existingWorkOrderAssets","existingWorkOrderChecklists","minDueDate","Date","todayDate","pickCheckListsModalVisible","checklists","createForm","listCategory","bulidWorkOrderDetailForm","formCreateWorkOrder","group","title","compose","required","maxLength","description","category","reportedOn","dueDate","priority","assignedToUser","value","controls","setErrors","incorrect","length","valid","workOrderAssets","map","x","id","workOrderChecklists","priorityId","categoryId","createWorkOrder","subscribe","data","showToast","workOrderNumber","workOrder","number","status","createdTimestampUtc","lastUpdatedTimestampUtc","navigate","err","showErrorToast","userId","get","setValue","listWorkOrderCategory","workOrderCategories","inputDate","setDate","getDate","e","preventDefault","listAssets","asset","splice","indexOf","pickCheckLists","event","trim","push","input","_c0","MatChipSelectionChange","source","selected","isUserInput","MAT_CHIP_REMOVE","MAT_CHIP_AVATAR","MAT_CHIP_TRAILING_ICON","MatChipBase","_elementRef","_MatChipMixinBase","MatChipAvatar","ɵfac","MatChipAvatar_Factory","t","ɵdir","type","selectors","hostAttrs","features","provide","useExisting","ngDevMode","args","selector","host","providers","MatChipTrailingIcon","MatChipTrailingIcon_Factory","MatChip","_ngZone","platform","globalRippleOptions","_changeDetectorRef","_document","animationMode","tabIndex","_hasFocus","chipListSelectable","_chipListMultiple","_chipListDisabled","_selected","_selectable","_disabled","_removable","_onFocus","_onBlur","selectionChange","destroyed","removed","_addHostClassName","_chipRippleTarget","createElement","classList","add","nativeElement","appendChild","_chipRipple","setupTriggerEvents","rippleConfig","_animationsDisabled","parseInt","disabled","disableRipple","coercedValue","_dispatchSelectionChange","_value","undefined","textContent","selectable","toString","basicChipAttrName","element","hasAttribute","tagName","toLowerCase","emit","chip","_removeTriggerEvents","markForCheck","focus","next","removable","stopPropagation","keyCode","remove","toggleSelected","onStable","pipe","run","MatChip_Factory","contentQueries","MatChip_ContentQueries","rf","ctx","dirIndex","_t","avatar","first","trailingIcon","removeIcon","hostVars","hostBindings","MatChip_HostBindings","MatChip_click_HostBindingHandler","$event","_handleClick","MatChip_keydown_HostBindingHandler","_handleKeydown","MatChip_focus_HostBindingHandler","MatChip_blur_HostBindingHandler","_blur","ariaSelected","inputs","color","outputs","exportAs","ctorParameters","decorators","String","propDecorators","MatChipRemove","_parentChip","elementRef","nodeName","setAttribute","parentChip","MatChipRemove_Factory","MatChipRemove_HostBindings","MatChipRemove_click_HostBindingHandler","MAT_CHIPS_DEFAULT_OPTIONS","MatChipListBase","_defaultErrorStateMatcher","_parentForm","_parentFormGroup","ngControl","_MatChipListMixinBase","nextUniqueId","MatChipListChange","MatChipList","_dir","controlType","_lastDestroyedChipIndex","_destroyed","_uid","_tabIndex","_userTabIndex","_onTouched","_onChange","_multiple","_compareWith","o1","o2","_required","ariaOrientation","change","valueChange","valueAccessor","multiple","_selectionModel","empty","_syncChipsState","fn","_initializeSelection","writeValue","_chipInput","stateChanges","placeholder","_placeholder","focused","_hasFocusedChip","chips","forEach","_keyManager","withWrap","withVerticalOrientation","withHomeAndEnd","withHorizontalOrientation","dir","tabOut","_allowFocusEscape","changes","Promise","resolve","then","_resetChips","_updateTabIndex","_updateFocusForDestroyedChips","updateErrorState","complete","_dropSubscriptions","inputElement","ids","_ariaDescribedby","join","_setSelectionByValue","isDisabled","_originatesFromChip","options","setFirstItemActive","_focusInput","target","_isInputEmpty","setLastItemActive","contains","onKeydown","newChipIndex","Math","min","setActiveItem","index","_clearSelection","deselect","Array","isArray","currentValue","_selectValue","_sortValues","correspondingChip","find","selectViaInteraction","select","skip","clear","fallbackValue","valueToEmit","setTimeout","_markAsTouched","_listenToChipsFocus","_listenToChipsSelection","_listenToChipsRemoved","_chipFocusSubscription","unsubscribe","_chipBlurSubscription","_chipSelectionSubscription","_chipRemoveSubscription","chipSelectionChanges","isSelected","_propagateChanges","chipFocusChanges","chipIndex","toArray","_isValidIndex","updateActiveItem","chipBlurChanges","chipRemoveChanges","currentElement","parentElement","some","MatChipList_Factory","ɵcmp","MatChipList_ContentQueries","MatChipList_HostBindings","MatChipList_focus_HostBindingHandler","MatChipList_blur_HostBindingHandler","MatChipList_keydown_HostBindingHandler","_keydown","role","errorState","compareWith","errorStateMatcher","ngContentSelectors","decls","vars","consts","template","MatChipList_Template","styles","encapsulation","changeDetection","descendants","None","OnPush","nextUniqueId$1","MatChipInput","_defaultOptions","_addOnBlur","separatorKeyCodes","chipEnd","_inputElement","_chipList","registerInput","_emitChipEnd","addOnBlur","_isSeparatorKey","Set","has","MatChipInput_Factory","MatChipInput_HostBindings","MatChipInput_keydown_HostBindingHandler","MatChipInput_blur_HostBindingHandler","MatChipInput_focus_HostBindingHandler","_focus","MatChipInput_input_HostBindingHandler","_onInput","invalid","chipList","CHIP_DECLARATIONS","ɵ0","MatChipsModule","MatChipsModule_Factory","ɵmod","ɵinj","useValue","imports","ngJitMode","declarations","exports","PickDateAdapter","date","displayFormat","locale","WorkOrdersModule","useClass","ChecklistTaskItemComponent","taskSelected","taskItem","isCompleted","currentTarget","checked","ViewWorkorderComponent","workOrdersService","fileUploadService","authenticationService","attachedFileCollection","standardFormattedDate","WorkOrderStatus","workOrderStatusValues","standardFormattedDateTime","detailsModalVisible","textMaxLength","fileCount","fileSrcCollection","isEditable","isUpdatingWorkOrder","isNewFilesAdded","filesLimit","filePathCollection","fileTypes","isAssetAvailable","enableServiceTextarea","isShowEditIcon","expanded","workOrderStatus","checkUserEditRights","viewWorkOrderForId","viewWorkOrderServiceDetailForId","validPattern","extendedWorkOrder","form","pattern","serviceDetails","valueChanges","updateFormChanges","fileUploadForm","files","isOnInit","workOrderAttachements$","attachedFiles","assetAttachments","fileList","filePath","fileNameWithExt","replace","fileName","substring","getFile","fileData","name","workOrderServiceDetails","workOrderServiceDetail","selectedWorkOrderServiceDetails","isGettingUserRights","userRole$","currentUserProfile$","userProfile","currentUserHasPermission","WorkOrders","CanEditWorkOrder","hasPermission","userRole","groupName","Technician","Number","Closed","Complete","reset","fileUploadInput","click","filter","markAsDirty","isDelete","markAsPristine","dirty","paramWorkOrderAssets","isNew","referenceId","updateWorkOrderForId","uploadFiles","WorkOrder","savedFileSrcCollection","attachments","errorResponse","errorMessage","assetIndex","noExistingFile","inputFiles","file","i","clearFileFormErrors","patchValue","hasError","fileIndex","resetSaveButtonDisplay","deleteFile","markAsUntouched","updateValueAndValidity","workOrderAsset","acceptableFileType","acceptableFileSize","userDetails","includes","split","isSubmitDisabled","serviceDetail","updateWorkOrderService","checkList","PickWorkOrderSparesComponent","skuService","allSpareGroupOption","sparesGroupOptions","sparesGroups","isUpdatingSpares","isSparesSelected","searchResultsVisible","searchResults","isSearching","isQtyFormInvalid","wordOrderNumber","getSpares","getSearchGroupOptions","searchSparesSubscription","closed","textValue","searchForm","getSkuStockForSpares","skus","getSparesGroups","sparesGroup","label","groupId","subGroupId","isSkuDeleted","skuIndex","workOrderSpares","spareSkus","wordOrderId","getWorkOrderSpares","sparesSku","inStock","sku","quantities","qty","quantity","siteId","skuQty","spareSku","updateWorkOrderSpares","key","resultButtons","searchResultElements","clearSearchForm","searchText","result","spares","searchValue","activeElement","document","sparesNameIsInSearchResults","dataset","sparesname","firstResultButton","searchInputElement","previousSibling","nextSibling","spare","text","searchSpares","WorkOrderWizard","WorkOrdersComponent","workorderService","searchFilterService","offset","take","shouldGetNextWorkorders","workorders","standardFormattedDateNoYear","WorkorderStatus","setPermissionBooleans","searchWOTextValue","initiateFreshSearchSettings","formChangeEvent","loadNextWorkorders","submitSearch","isLoadingWorkorders","listWorkorders","workorderList","searchWOTextValueCache","CanCreateWorkOrder","canCreateWorkOrder","initiateWOSearchFilter","getWorkorderCSV","MIME_TYPE","blob","Blob","now","curDate","toLocaleString","year","month","day","a","window","href","URL","createObjectURL","download","body","removeChild","getWorkOrderCSV","SparesSkusComponent","handlesQtyChange","isQtyInValid","qtyForm","max","qtyStringExceedsMaxLength","isNaN","currentQty","handlesDecreaseQty","handleQtyClipboard","disableRightClick","handleQtyInputKeyDown","handleQtyInputKeyUp","handlesIncreaseQty","handleDeleteItem","stringCamelize","str","toLocaleLowerCase","word","toUpperCase","routes","path","component","WorkOrdersRoutingModule","forChild"],"mappings":"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O;;AAAW;;AACpB;;AACA;;AACE;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAsB;;AAAW;;AACjC;;AACE;;AACE;;AACE;;AAMA;;AAKA;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAsB;;AAAM;;AAC5B;;AACE;;AACE;;AACE;;AAMA;;AAKA;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAsB;;AAAW;;AACjC;;AACE;;AACA;;AAAwF;AAAA;;AAAA;;AAAA;AAAA;;AAA0C;;AACpI;;AACF;;AACF;;AACE;;AAAsB;;AAAM;;AAC5B;;AACE;;AACE;;AAKF;;AACF;;AACF;;AACA;;AACA;;AACA;;AACF;;AACA;;AACE;;AACE;;AAAsB;;AAAQ;;AAC9B;;AACE;;AACE;;AAKF;;AACF;;AACF;;AACA;;AACE;;AAAsB;;AAAQ;;AAC9B;;AACE;;AACI;;AAOJ;;AACF;;AACF;;AACA;;AACE;;AAAqC;;AACnC;;AACE;;AAAA;;AACE;;AACA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACA;;AAuDF;;AACA;;AAGA;;AACA;;AACA;;AACA;;AACF;;AACA;;AAqCA;;AA+BA;;AAAA;;AACE;;AAAqE;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAAS;;AAC7G;;AACF;;AACE;;AACE;;AACE;;AAAO;;AAAe;;AACxB;;AACA;;AACE;;AACF;;AACF;;AACJ;;AACA;;AACE;;AACE;;AACE;;AACE;;AAWF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAiD;;AAAa;;AAChE;;AACF;;AACA;;AACA;;AAGE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAK;;AAAO;;AACZ;;AAAK;;AAAI;;AACT;;AAAK;;AAAO;;AACd;;AACF;;AACA;;AACE;;AAQF;;AACF;;AACF;;AACF;;AACF;;AACA;;AA8CA;;AACA;;AAWA;;AACE;;AAQF;;AACF;;;;;;;;;;AAhaQ;;AAAA;;AAEA;;AAAA;;AAQwC;;AAAA;;AAqBpB;;AAAA;;AAY2C;;AAAA;;AAYnD;;AAAA;;AAMA;;A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","file":"work-orders-work-orders-module-es5.js","sourcesContent":["import { formatDate } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  IWorkOrderCategory,\r\n  Toast,\r\n  ToastService,\r\n  WorkOrderPriority,\r\n  WorkordersService,\r\n  IAssets,\r\n  ICheckList\r\n} from 'src/app/services';\r\nimport { enumString, enumValues } from 'src/utils/enumUtils';\r\nimport { WorkOrderWizard } from '../work-order.wizard';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\n\r\n@Component({\r\n  selector: 'app-create-work-order',\r\n  templateUrl: './create-work-order.component.html',\r\n  styleUrls: ['./create-work-order.component.scss']\r\n})\r\nexport class CreateWorkOrderComponent implements OnInit {\r\n  public isLoading = false;\r\n  public formCreateWorkOrder: FormGroup;\r\n  public workOrderPriorities = enumValues(WorkOrderPriority);\r\n  public showSaveButton = false;\r\n  public workOrderCategories: IWorkOrderCategory[];\r\n  public submitAttempted = false;\r\n  public addAssetsModalVisible = false;\r\n  public existingWorkOrderAssets: IAssets[] = [];\r\n  public existingWorkOrderChecklists: ICheckList[] = [];\r\n  public minDueDate = new Date();\r\n  public todayDate = new Date();\r\n  public pickCheckListsModalVisible = false;\r\n  public checklists = [];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private workOrderService: WorkordersService,\r\n    private toastService: ToastService,\r\n    public router: Router,\r\n    private workOrderWizard: WorkOrderWizard\r\n  ) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.createForm();\r\n    this.listCategory();\r\n  }\r\n\r\n  public createForm() {\r\n    const bulidWorkOrderDetailForm = () => {\r\n      this.formCreateWorkOrder = this.formBuilder.group({\r\n        title: [\r\n          '',\r\n          Validators.compose([Validators.required, Validators.maxLength(50)])\r\n        ],\r\n        description: [\r\n          '',\r\n          Validators.compose([Validators.required, Validators.maxLength(4000)])\r\n        ],\r\n        category: ['', Validators.required],\r\n        reportedOn: [this.todayDate, Validators.required],\r\n        dueDate: [null, Validators.required],\r\n        priority: ['', Validators.required],\r\n        assignedToUser: ['', Validators.compose([Validators.maxLength(50)])]\r\n      });\r\n    };\r\n    bulidWorkOrderDetailForm();\r\n  }\r\n\r\n  public createWorkOrder() {\r\n    this.submitAttempted = true;\r\n    this.showSaveButton = false;\r\n    this.isLoading = true;\r\n    if (\r\n      formatDate(\r\n        this.formCreateWorkOrder.value.dueDate,\r\n        'yyyy-MM-dd',\r\n        'en-US'\r\n      ) <\r\n      formatDate(\r\n        this.formCreateWorkOrder.value.reportedOn,\r\n        'yyyy-MM-dd',\r\n        'en-US'\r\n      )\r\n    ) {\r\n      this.formCreateWorkOrder.controls['dueDate'].setErrors({\r\n        incorrect: true\r\n      });\r\n    }\r\n    if (this.existingWorkOrderAssets.length === 0) {\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n    if (!this.formCreateWorkOrder.valid) {\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n    const workOrderAssets = this.existingWorkOrderAssets.map(x => x.id);\r\n    const workOrderChecklists = this.existingWorkOrderChecklists.map(x => x.id);\r\n    const assignedToUser = this.formCreateWorkOrder.value.assignedToUser;\r\n    const title = this.formCreateWorkOrder.value.title;\r\n    const description = this.formCreateWorkOrder.value.description;\r\n    const priorityId = this.formCreateWorkOrder.value.priority;\r\n    const categoryId = this.formCreateWorkOrder.value.category;\r\n    const reportedOn = formatDate(\r\n      this.formCreateWorkOrder.value.reportedOn,\r\n      'yyyy-MM-ddThh:mm:ss',\r\n      'en-US'\r\n    );\r\n    const dueDate = formatDate(\r\n      this.formCreateWorkOrder.value.dueDate,\r\n      'yyyy-MM-ddThh:mm:ss',\r\n      'en-US'\r\n    );\r\n    this.workOrderService\r\n      .createWorkOrder({\r\n        assignedToUser,\r\n        title,\r\n        description,\r\n        priorityId,\r\n        categoryId,\r\n        reportedOn,\r\n        dueDate,\r\n        workOrderAssets,\r\n        workOrderChecklists\r\n      })\r\n      .subscribe(\r\n        data => {\r\n          this.toastService.showToast(\r\n            new Toast(\r\n              'Work order (' + data.workOrderNumber + ') created successfully'\r\n            )\r\n          );\r\n          this.isLoading = false;\r\n          this.workOrderWizard.workOrder = {\r\n            id: data.id,\r\n            number: data.number,\r\n            status: data.status,\r\n            assignedToUser: data.assignedToUser,\r\n            dueDate: data.dueDate,\r\n            createdTimestampUtc: data.createdTimestampUtc,\r\n            lastUpdatedTimestampUtc: data.lastUpdatedTimestampUtc,\r\n            title: data.title\r\n          };\r\n          this.router.navigate(['work-orders', data.number]);\r\n        },\r\n        err => {\r\n          this.toastService.showErrorToast(`Work Order not saved`);\r\n          this.isLoading = false;\r\n        }\r\n      );\r\n\r\n    this.isLoading = false;\r\n  }\r\n\r\n  public selectedUserId(userId: string) {\r\n    this.formCreateWorkOrder.get('assignedToUser').setValue(userId);\r\n    this.showSaveButton = true;\r\n  }\r\n\r\n  public listCategory() {\r\n    this.workOrderService\r\n      .listWorkOrderCategory()\r\n      .subscribe((data: IWorkOrderCategory[]) => {\r\n        this.workOrderCategories = data;\r\n      });\r\n  }\r\n\r\n  public onDateChange(inputDate) {\r\n    this.minDueDate = new Date(inputDate.value);\r\n    this.minDueDate.setDate(this.minDueDate.getDate());\r\n    this.formCreateWorkOrder.get('dueDate').setValue(null);\r\n  }\r\n\r\n  public handlePickAssets() {\r\n    this.addAssetsModalVisible = true;\r\n  }\r\n\r\n  public handleDetailsModalClose() {\r\n    this.addAssetsModalVisible = false;\r\n  }\r\n\r\n  public disableRightClick(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  public handleAddedWorkOrderAssets(listAssets: IAssets[]) {\r\n    this.addAssetsModalVisible = false;\r\n    this.existingWorkOrderAssets = listAssets;\r\n    this.showSaveButton = true;\r\n  }\r\n\r\n  public handleDeleteAsset(asset: IAssets) {\r\n    this.existingWorkOrderAssets.splice(\r\n      this.existingWorkOrderAssets.indexOf(asset),\r\n      1\r\n    );\r\n    this.showSaveButton = true;\r\n  }\r\n\r\n  public priorityString(priority: WorkOrderPriority) {\r\n    return enumString(WorkOrderPriority, priority);\r\n  }\r\n\r\n  public handlePickWorkOrderCheckLists(pickCheckLists: ICheckList[]) {\r\n    this.pickCheckListsModalVisible = false;\r\n    this.existingWorkOrderChecklists = pickCheckLists;\r\n    this.checklists = pickCheckLists;\r\n    this.showSaveButton = true;\r\n  }\r\n\r\n  public handlePickCheckLists() {\r\n    this.pickCheckListsModalVisible = true;\r\n  }\r\n\r\n  public handlePickCheckListsModalClose() {\r\n    this.pickCheckListsModalVisible = false;\r\n  }\r\n\r\n  public addCheckList(event: MatChipInputEvent) {\r\n    const value = (event.value || '').trim();\r\n    if (value) {\r\n      this.checklists.push(value);\r\n    }\r\n    if (event.input) {\r\n      event.input.value = '';\r\n    }\r\n  }\r\n}\r\n","<app-section-header [customCurrentPageTitle]=\"'Create Work Order'\"></app-section-header>\r\n\r\n<div *ngIf=\"isLoading\">\r\n  <div class=\"spinner\"></div>\r\n</div>\r\n\r\n<article *ngIf=\"!isLoading \">\r\n  <header>\r\n    <h1>Create Work Order</h1>\r\n  </header>\r\n  <form [formGroup] = \"formCreateWorkOrder\">\r\n    <div class=\"core-info mt-4\">\r\n      <div class=\"d-flex\"  *ngIf=\"submitAttempted && formCreateWorkOrder.controls.title.errors\">\r\n        <div class=\"col-4 col-sm-2 \">\r\n        </div>\r\n        <div class=\"col-8 col-sm-10 alert alert-danger arrow-alert\">\r\n          You must specify title\r\n        </div>\r\n      </div>\r\n      <div class=\"d-flex align-items-center mb-sm-4 mb-2\">\r\n        <div class=\"col-4 col-sm-2 \">\r\n          <label>Title</label>\r\n        </div>\r\n        <div class=\"col-8 col-sm-10\">\r\n          <input\r\n            type=\"text\"\r\n            maxlength=\"50\"\r\n            formControlName=\"title\"\r\n            class=\"form-control\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"d-flex\"  *ngIf=\"submitAttempted && formCreateWorkOrder.controls.description.errors\">\r\n        <div class=\"col-4 col-sm-2 \">\r\n        </div>\r\n        <div class=\"col-8 col-sm-10 alert alert-danger arrow-alert\">\r\n          You must specify description\r\n        </div>\r\n     </div>\r\n      <div class=\"d-flex mb-sm-4 mb-2\">\r\n        <div class=\"col-sm-2 col-4 mt-2\">\r\n          <label>Description</label>\r\n        </div>\r\n        <div class=\"col-sm-10 col-8\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"description\"\r\n            rows=\"8\"\r\n            maxlength=\"4000\"\r\n          >\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n      <div class=\"row d-flex\">\r\n        <div class=\"col-sm-6\">\r\n          <div class=\"d-flex\"  *ngIf=\"submitAttempted && formCreateWorkOrder.controls.reportedOn.errors\">\r\n            <div class=\"col-4\"></div>\r\n            <div class=\"col-8 alert alert-danger arrow-alert\">\r\n              You must specify reported on date\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex  mb-2 mb-sm-3 align-items-center\">\r\n            <label class=\"col-4\">Reported On</label>\r\n            <div class=\"col-8\">\r\n              <div class=\"form-group\">\r\n                <div class=\"taro-material-datepicker\">\r\n                  <input\r\n                    matInput\r\n                    [matDatepicker]=\"datePicker\"\r\n                    class=\"form-control mat-input-date\"\r\n                    formControlName=\"reportedOn\"\r\n                    (dateChange)=\"onDateChange($event)\"\r\n                  />\r\n                  <mat-datepicker-toggle\r\n                    matSuffix\r\n                    [for]=\"datePicker\"\r\n                  >\r\n                  </mat-datepicker-toggle>\r\n                  <mat-datepicker #datePicker disabled=\"false\"></mat-datepicker>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex\"  *ngIf=\"submitAttempted && formCreateWorkOrder.controls.dueDate.errors\">\r\n            <div class=\"col-4\"></div>\r\n            <div class=\"col-8 alert alert-danger arrow-alert\">\r\n              You must specify due on date\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex  mb-2 mb-sm-3 align-items-center\">\r\n            <label class=\"col-4 \">Due On</label>\r\n            <div class=\"col-8\">\r\n              <div class=\"form-group\">\r\n                <div class=\"taro-material-datepicker\">\r\n                  <input\r\n                    matInput\r\n                    [matDatepicker]=\"datePickerDueDate\"\r\n                    [min]=\"minDueDate\"\r\n                    class=\"form-control mat-input-date\"\r\n                    formControlName=\"dueDate\"\r\n                  />\r\n                  <mat-datepicker-toggle\r\n                    matSuffix\r\n                    [for]=\"datePickerDueDate\"\r\n                  >\r\n                  </mat-datepicker-toggle>\r\n                  <mat-datepicker #datePickerDueDate disabled=\"false\"></mat-datepicker>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex  mb-2 mb-sm-3 align-items-center\">\r\n            <label class=\"col-4 \">Assign To</label>\r\n            <div class=\"col-8\">\r\n              <input type=\"hidden\" formControlName=\"assignedToUser\" class=\"form-control\"/>\r\n              <app-list-users (selectedUserId)=\"selectedUserId($event)\"></app-list-users>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n          <div class=\"d-flex\"  *ngIf=\"submitAttempted && formCreateWorkOrder.controls.category.errors\">\r\n            <div class=\"col-4\"></div>\r\n            <div class=\"col-8 alert alert-danger arrow-alert\">\r\n              You must specify category\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex  mb-2 mb-sm-3 align-items-center\">\r\n            <label class=\"col-4 \">Category</label>\r\n            <div class=\"col-8\">\r\n              <select formControlName=\"category\" class=\"custom-select form-control\">\r\n                <option *ngFor=\"let category of workOrderCategories; let i = index\"\r\n                        [value]=\"category.id\"\r\n                        class=\"form-control\"\r\n                >{{category.name}}\r\n               </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex\"  *ngIf=\"submitAttempted && formCreateWorkOrder.controls.priority.errors\">\r\n            <div class=\"col-4\"></div>\r\n            <div class=\"col-8 alert alert-danger arrow-alert\">\r\n              You must specify priority\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex  mb-2 mb-sm-3 align-items-center\">\r\n            <label class=\"col-4 \">Priority</label>\r\n            <div class=\"col-8\">\r\n              <select formControlName=\"priority\" class=\"custom-select form-control\">\r\n                <option *ngFor=\"let workOrderPriority of workOrderPriorities\"\r\n                        [value]=\"workOrderPriority\"\r\n                        class=\"form-control\"\r\n                >\r\n                  {{priorityString(workOrderPriority)}}\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"submitAttempted && existingWorkOrderAssets.length === 0\">\r\n        <div class=\"col-sm-6\" >\r\n          <div class=\"d-flex align-items-center\">\r\n            <label class=\"col-4 \"></label>\r\n            <div class=\"col-8 asset-input-alret alert alert-danger arrow-alert\">\r\n              You must specify an asset\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n        </div>\r\n     </div>\r\n      <div class=\"row\" *ngIf=\"existingWorkOrderAssets.length === 0\">\r\n        <div class=\"col-sm-6 mb-2 mb-sm-3\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <label class=\"col-4 \">Asset</label>\r\n            <div class=\"col-8 asset-input-size\">\r\n              <input type=\"text\" readonly  [value]=\"\" class=\"readonly form-control\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-6 mb-2 mb-sm-3\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <label class=\"col-4\">Location</label>\r\n            <div class=\"col-8  d-flex align-items-center\">\r\n              <input type=\"text\" class=\"form-control readonly\"  [value]=\"\" readonly/>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15.002\" height=\"19.003\" viewBox=\"0 0 14.002 18.003\" class=\"del-icon opacity-50\" >\r\n                <g id=\"wrench\" transform=\"translate(0.001 0)\">\r\n                  <path id=\"Path_1563\" data-name=\"Path 1563\" d=\"M12.333,3.933,1.267,3.8c-.133.133-.4.133-.533.267A.8.8,0,0,0,.6,4.6L1.8,16.2c0,.4.267.533.667.533h8.267A.61.61,0,0,0,11.4,16.2L12.867,4.6a.8.8,0,0,0-.133-.533,1.343,1.343,0,0,0-.4-.134Zm-2,11.6h-7.2L2.067,5.267h9.467Z\" transform=\"translate(0.2 1.267)\"/>\r\n                  <path id=\"Path_1564\" data-name=\"Path 1564\" d=\"M13.333,3.2H10.667A3.739,3.739,0,0,0,6.933,0a3.607,3.607,0,0,0-3.6,3.2H.667A.63.63,0,0,0,0,3.867a.63.63,0,0,0,.667.667H13.333A.63.63,0,0,0,14,3.867a.63.63,0,0,0-.667-.667Zm-6.4-1.867A2.442,2.442,0,0,1,9.333,3.2H4.667A2.407,2.407,0,0,1,6.933,1.333Z\"/>\r\n                  <path id=\"Path_1565\" data-name=\"Path 1565\" d=\"M5.367,13.467a.63.63,0,0,0,.667-.667V6.667A.63.63,0,0,0,5.367,6a.63.63,0,0,0-.667.667v6.267C4.7,13.2,5.1,13.467,5.367,13.467Z\" transform=\"translate(1.567 2)\"/>\r\n                  <path id=\"Path_1566\" data-name=\"Path 1566\" d=\"M3.9,13.5a.714.714,0,0,0,.667-.667L4.033,6.567A.714.714,0,0,0,3.367,5.9a.845.845,0,0,0-.667.8l.533,6.267A.886.886,0,0,0,3.9,13.5Z\" transform=\"translate(0.9 1.967)\"/>\r\n                  <path id=\"Path_1567\" data-name=\"Path 1567\" d=\"M6.942,13.475a.63.63,0,0,0,.667-.667l.533-6.267c.133-.267-.133-.533-.533-.533-.4-.133-.667.133-.667.533l-.533,6.267c-.134.4.133.667.533.667Z\" transform=\"translate(2.125 1.991)\"/>\r\n                </g>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\"  *ngFor=\"let workOrderAsset of existingWorkOrderAssets\">\r\n        <div class=\"col-sm-6 mb-2 mb-sm-3\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <label class=\"col-4 \">Asset</label>\r\n            <div class=\"col-8 asset-input-size\">\r\n              <input type=\"text\" readonly  [value]=\"workOrderAsset.assetId + ' - ' + workOrderAsset.name\" class=\"readonly form-control\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-6 mb-2 mb-sm-3\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <label class=\"col-4\">Location</label>\r\n            <div class=\"col-8  d-flex align-items-center\">\r\n              <input type=\"text\" class=\"form-control readonly\"  [value]=\"workOrderAsset.location\" readonly/>\r\n              <button (click)=\"handleDeleteAsset(workOrderAsset)\"  class=\"del-icon-button\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15.002\" height=\"19.003\" viewBox=\"0 0 14.002 18.003\" class=\"del-icon \">\r\n                <g id=\"wrench\" transform=\"translate(0.001 0)\">\r\n                  <path id=\"Path_1563\" data-name=\"Path 1563\" d=\"M12.333,3.933,1.267,3.8c-.133.133-.4.133-.533.267A.8.8,0,0,0,.6,4.6L1.8,16.2c0,.4.267.533.667.533h8.267A.61.61,0,0,0,11.4,16.2L12.867,4.6a.8.8,0,0,0-.133-.533,1.343,1.343,0,0,0-.4-.134Zm-2,11.6h-7.2L2.067,5.267h9.467Z\" transform=\"translate(0.2 1.267)\"/>\r\n                  <path id=\"Path_1564\" data-name=\"Path 1564\" d=\"M13.333,3.2H10.667A3.739,3.739,0,0,0,6.933,0a3.607,3.607,0,0,0-3.6,3.2H.667A.63.63,0,0,0,0,3.867a.63.63,0,0,0,.667.667H13.333A.63.63,0,0,0,14,3.867a.63.63,0,0,0-.667-.667Zm-6.4-1.867A2.442,2.442,0,0,1,9.333,3.2H4.667A2.407,2.407,0,0,1,6.933,1.333Z\"/>\r\n                  <path id=\"Path_1565\" data-name=\"Path 1565\" d=\"M5.367,13.467a.63.63,0,0,0,.667-.667V6.667A.63.63,0,0,0,5.367,6a.63.63,0,0,0-.667.667v6.267C4.7,13.2,5.1,13.467,5.367,13.467Z\" transform=\"translate(1.567 2)\"/>\r\n                  <path id=\"Path_1566\" data-name=\"Path 1566\" d=\"M3.9,13.5a.714.714,0,0,0,.667-.667L4.033,6.567A.714.714,0,0,0,3.367,5.9a.845.845,0,0,0-.667.8l.533,6.267A.886.886,0,0,0,3.9,13.5Z\" transform=\"translate(0.9 1.967)\"/>\r\n                  <path id=\"Path_1567\" data-name=\"Path 1567\" d=\"M6.942,13.475a.63.63,0,0,0,.667-.667l.533-6.267c.133-.267-.133-.533-.533-.533-.4-.133-.667.133-.667.533l-.533,6.267c-.134.4.133.667.533.667Z\" transform=\"translate(2.125 1.991)\"/>\r\n                </g>\r\n              </svg>\r\n            </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"pb-4\">\r\n        <button class=\"btn btn-link p-0 add-asset\" (click)=\"handlePickAssets()\">Add asset</button>\r\n      </div>\r\n\r\n      <div class=\"d-flex mb-sm-4 mb-2\">\r\n        <div class=\"col-4 col-sm-2 pt-4\">\r\n          <label class=\"pt-2\">Checklists</label>\r\n        </div>\r\n        <div class=\"col-8 col-sm-10\">\r\n          <mat-form-field>\r\n            <mat-chip-list #chipList>\r\n              <mat-chip *ngFor=\"let checklist of checklists\">{{ checklist.name }}</mat-chip>\r\n              <input\r\n                readonly\r\n                [matChipInputFor]=\"chipList\"\r\n                [matChipInputAddOnBlur]=\"true\"\r\n                (matChipInputTokenEnd)=\"addCheckList($event)\" />\r\n            </mat-chip-list>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"pb-4\">\r\n        <button class=\"btn btn-link p-0 add-asset\" (click)=\"handlePickCheckLists()\">Add Checklist</button>\r\n      </div>\r\n\r\n    </div>\r\n    <footer>\r\n      <div class=\"form-actions\" [class.visible]=\"formCreateWorkOrder.dirty || showSaveButton\">\r\n        <button\r\n          class=\"btn btn-primary btn-block col-12\"\r\n          (click)=\"createWorkOrder()\"\r\n        >\r\n        Save all changes\r\n        </button>\r\n      </div>\r\n    </footer>\r\n  </form>\r\n  <app-modal\r\n    *ngIf=\"addAssetsModalVisible\"\r\n    (modalShouldClose)=\"handleDetailsModalClose()\"\r\n    (contextmenu)=\"disableRightClick($event)\"\r\n    >\r\n    <app-pick-assets\r\n      (addedAssets)=\"handleAddedWorkOrderAssets($event)\"\r\n      [existingAssets]=\"existingWorkOrderAssets\"\r\n      >\r\n    </app-pick-assets>\r\n  </app-modal>\r\n\r\n  <app-modal\r\n    *ngIf=\"pickCheckListsModalVisible\"\r\n    (modalShouldClose)=\"handlePickCheckListsModalClose()\"\r\n    (contextmenu)=\"disableRightClick($event)\"\r\n  >\r\n      <app-pick-check-lists\r\n     [existingChecklists]=\"existingWorkOrderChecklists\"\r\n     (addedCheckLists)=\"handlePickWorkOrderCheckLists($event)\"\r\n\r\n    >\r\n    </app-pick-check-lists>\r\n  </app-modal>\r\n\r\n</article>\r\n","import { SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport { InjectionToken, Directive, EventEmitter, ElementRef, NgZone, Optional, Inject, ChangeDetectorRef, Attribute, ContentChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, ErrorStateMatcher, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event object emitted by MatChip when selected or deselected. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/material/core';\n\nconst _c0 = [\"*\"];\nclass MatChipSelectionChange {\n    constructor(\n    /** Reference to the chip that emitted the event. */\n    source, \n    /** Whether the chip that emitted the event is selected. */\n    selected, \n    /** Whether the selection change was a result of a user interaction. */\n    isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n// Boilerplate for applying mixins to MatChip.\n/** @docs-private */\nclass MatChipBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(MatChipBase), 'primary'), -1);\n/**\n * Dummy directive to add CSS class to chip avatar.\n * @docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) { return new (t || MatChipAvatar)(); };\nMatChipAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipAvatar, selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], hostAttrs: [1, \"mat-chip-avatar\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipAvatar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-avatar, [matChipAvatar]',\n                host: { 'class': 'mat-chip-avatar' },\n                providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }]\n            }]\n    }], null, null); })();\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * @docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.ɵfac = function MatChipTrailingIcon_Factory(t) { return new (t || MatChipTrailingIcon)(); };\nMatChipTrailingIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipTrailingIcon, selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]], hostAttrs: [1, \"mat-chip-trailing-icon\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                host: { 'class': 'mat-chip-trailing-icon' },\n                providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }]\n            }]\n    }], null, null); })();\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    constructor(_elementRef, _ngZone, platform, globalRippleOptions, _changeDetectorRef, _document, animationMode, tabIndex) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Whether the chip has focus. */\n        this._hasFocus = false;\n        /** Whether the chip list is selectable */\n        this.chipListSelectable = true;\n        /** Whether the chip list is in multi-selection mode. */\n        this._chipListMultiple = false;\n        /** Whether the chip list as a whole is disabled. */\n        this._chipListDisabled = false;\n        this._selected = false;\n        this._selectable = true;\n        this._disabled = false;\n        this._removable = true;\n        /** Emits when the chip is focused. */\n        this._onFocus = new Subject();\n        /** Emits when the chip is blured. */\n        this._onBlur = new Subject();\n        /** Emitted when the chip is selected or deselected. */\n        this.selectionChange = new EventEmitter();\n        /** Emitted when the chip is destroyed. */\n        this.destroyed = new EventEmitter();\n        /** Emitted when a chip is to be removed. */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        // Dynamically create the ripple target, append it within the chip, and use it as the\n        // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n        // the proper styles.\n        this._chipRippleTarget = _document.createElement('div');\n        this._chipRippleTarget.classList.add('mat-chip-ripple');\n        this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n        this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n        this._chipRipple.setupTriggerEvents(_elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._animationsDisabled ||\n            !!this.rippleConfig.disabled;\n    }\n    /** Whether the chip is selected. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /** The value of the chip. Defaults to the content inside `<mat-chip>` tags. */\n    get value() {\n        return this._value !== undefined\n            ? this._value\n            : this._elementRef.nativeElement.textContent;\n    }\n    set value(value) { this._value = value; }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     */\n    get selectable() { return this._selectable && this.chipListSelectable; }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /** Whether the chip is disabled. */\n    get disabled() { return this._chipListDisabled || this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     */\n    get removable() { return this._removable; }\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /** The ARIA selected applied to the chip. */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected) ?\n            this.selected.toString() : null;\n    }\n    _addHostClassName() {\n        const basicChipAttrName = 'mat-basic-chip';\n        const element = this._elementRef.nativeElement;\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /** Selects the chip. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Deselects the chip. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Select this chip and emit selected event */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Toggles the current selected state of this chip. */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._changeDetectorRef.markForCheck();\n        return this.selected;\n    }\n    /** Allows for programmatic focusing of the chip. */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /** Handles click events on the chip. */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /** Handle custom key presses. */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .pipe(take(1))\n            .subscribe(() => {\n            this._ngZone.run(() => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            });\n        });\n    }\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n}\nMatChip.ɵfac = function MatChip_Factory(t) { return new (t || MatChip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatChip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChip, selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]], contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-chip\", \"mat-focus-indicator\"], hostVars: 14, hostBindings: function MatChip_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChip_click_HostBindingHandler($event) { return ctx._handleClick($event); })(\"keydown\", function MatChip_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatChip_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChip_blur_HostBindingHandler() { return ctx._blur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-selected\", ctx.ariaSelected);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-selected\", ctx.selected)(\"mat-chip-with-avatar\", ctx.avatar)(\"mat-chip-with-trailing-icon\", ctx.trailingIcon || ctx.removeIcon)(\"mat-chip-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selected: \"selected\", value: \"value\", selectable: \"selectable\", disabled: \"disabled\", removable: \"removable\" }, outputs: { selectionChange: \"selectionChange\", destroyed: \"destroyed\", removed: \"removed\" }, exportAs: [\"matChip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatChip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatChip.propDecorators = {\n    avatar: [{ type: ContentChild, args: [MAT_CHIP_AVATAR,] }],\n    trailingIcon: [{ type: ContentChild, args: [MAT_CHIP_TRAILING_ICON,] }],\n    removeIcon: [{ type: ContentChild, args: [MAT_CHIP_REMOVE,] }],\n    selected: [{ type: Input }],\n    value: [{ type: Input }],\n    selectable: [{ type: Input }],\n    disabled: [{ type: Input }],\n    removable: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    removed: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChip, [{\n        type: Directive,\n        args: [{\n                selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                inputs: ['color', 'disableRipple', 'tabIndex'],\n                exportAs: 'matChip',\n                host: {\n                    'class': 'mat-chip mat-focus-indicator',\n                    '[attr.tabindex]': 'disabled ? null : tabIndex',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[class.mat-chip-with-avatar]': 'avatar',\n                    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                    '[class.mat-chip-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationsDisabled',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-selected]': 'ariaSelected',\n                    '(click)': '_handleClick($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], removed: [{\n            type: Output\n        }], selected: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], removable: [{\n            type: Input\n        }], avatar: [{\n            type: ContentChild,\n            args: [MAT_CHIP_AVATAR]\n        }], trailingIcon: [{\n            type: ContentChild,\n            args: [MAT_CHIP_TRAILING_ICON]\n        }], removeIcon: [{\n            type: ContentChild,\n            args: [MAT_CHIP_REMOVE]\n        }] }); })();\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    constructor(_parentChip, elementRef) {\n        this._parentChip = _parentChip;\n        if (elementRef.nativeElement.nodeName === 'BUTTON') {\n            elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /** Calls the parent chip's public `remove()` method if applicable. */\n    _handleClick(event) {\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.ɵfac = function MatChipRemove_Factory(t) { return new (t || MatChipRemove)(ɵngcc0.ɵɵdirectiveInject(MatChip), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatChipRemove.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipRemove, selectors: [[\"\", \"matChipRemove\", \"\"]], hostAttrs: [1, \"mat-chip-remove\", \"mat-chip-trailing-icon\"], hostBindings: function MatChipRemove_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChipRemove_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }])] });\nMatChipRemove.ctorParameters = () => [\n    { type: MatChip },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipRemove, [{\n        type: Directive,\n        args: [{\n                selector: '[matChipRemove]',\n                host: {\n                    'class': 'mat-chip-remove mat-chip-trailing-icon',\n                    '(click)': '_handleClick($event)'\n                },\n                providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }]\n            }]\n    }], function () { return [{ type: MatChip }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for the chips module. */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatChipList.\n/** @docs-private */\nclass MatChipListBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatChipListMixinBase = mixinErrorState(MatChipListBase);\n// Increasing integer for generating unique ids for chip-list components.\nlet nextUniqueId = 0;\n/** Change event object that is emitted when the chip list value has changed. */\nclass MatChipListChange {\n    constructor(\n    /** Chip list that emitted the event. */\n    source, \n    /** Value of the chip list when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListMixinBase {\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, \n    /** @docs-private */\n    ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Uid of the chip list */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /** Tab index for the chip list. */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /** Function when touched */\n        this._onTouched = () => { };\n        /** Function when changed */\n        this._onChange = () => { };\n        this._multiple = false;\n        this._compareWith = (o1, o2) => o1 === o2;\n        this._required = false;\n        this._disabled = false;\n        /** Orientation of the chip list. */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /** Event emitted when the selected chip list value has been changed by the user. */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /** The array of selected chips inside chip list. */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /** The ARIA role applied to the chip list. */\n    get role() { return this.empty ? null : 'listbox'; }\n    /** Whether the user should be allowed to select multiple chips. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._value; }\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether any chips or the matChipInput inside of this chip-list has focus. */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && (!this.chips || this.chips.length === 0);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() { return !this.empty || this.focused; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     */\n    get selectable() { return this._selectable; }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach(chip => chip.chipListSelectable = this._selectable);\n        }\n    }\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /** Combined stream of all of the child chips' selection change events. */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map(chip => chip.selectionChange));\n    }\n    /** Combined stream of all of the child chips' focus change events. */\n    get chipFocusChanges() {\n        return merge(...this.chips.map(chip => chip._onFocus));\n    }\n    /** Combined stream of all of the child chips' blur change events. */\n    get chipBlurChanges() {\n        return merge(...this.chips.map(chip => chip._onBlur));\n    }\n    /** Combined stream of all of the child chips' remove change events. */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map(chip => chip.destroyed));\n    }\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHomeAndEnd()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(dir => this._keyManager.withHorizontalOrientation(dir));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then(() => {\n                    this._syncChipsState();\n                });\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        });\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n            if (this.ngControl.disabled !== this._disabled) {\n                this.disabled = !!this.ngControl.disabled;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /** Associates an HTML input element with this chip list. */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n        // We use this attribute to match the chip list to its input in test harnesses.\n        // Set the attribute directly here to avoid \"changed after checked\" errors.\n        this._elementRef.nativeElement.setAttribute('data-mat-chip-input', inputElement.id);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) { this._ariaDescribedby = ids.join(' '); }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /** Attempt to focus an input if we have one. */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     */\n    _keydown(event) {\n        const target = event.target;\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n        }\n        else if (target && target.classList.contains('mat-chip')) {\n            this._keyManager.onKeydown(event);\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    _isInputEmpty(element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            let input = element;\n            return !input.value;\n        }\n        return false;\n    }\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach(chip => chip.deselect());\n        if (Array.isArray(value)) {\n            value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n            this._sortValues();\n        }\n        else {\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @returns Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        const correspondingChip = this.chips.find(chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        });\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        });\n    }\n    /**\n     * Deselects every chip in the list.\n     * @param skip Chip that should not be deselected.\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach(chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        });\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach(chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map(chip => chip.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** When blurred, mark the field as touched when focus moved outside the chip list. */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout(() => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                });\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /** Mark the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout(() => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /** Listens to user-generated selection events on each chip. */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe(event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach(chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                });\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        });\n    }\n    /** Listens to user-generated selection events on each chip. */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe(event => {\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        });\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe(() => {\n            this._blur();\n            this.stateChanges.next();\n        });\n    }\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(event => {\n            const chip = event.chip;\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        });\n    }\n    /** Checks whether an event comes from inside a chip element. */\n    _originatesFromChip(event) {\n        let currentElement = event.target;\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /** Checks whether any of the chips is focused. */\n    _hasFocusedChip() {\n        return this.chips && this.chips.some(chip => chip._hasFocus);\n    }\n    /** Syncs the list's state with the individual chips. */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach(chip => {\n                chip._chipListDisabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            });\n        }\n    }\n}\nMatChipList.ɵfac = function MatChipList_Factory(t) { return new (t || MatChipList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgControl, 10)); };\nMatChipList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatChipList, selectors: [[\"mat-chip-list\"]], contentQueries: function MatChipList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChip, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);\n    } }, hostAttrs: [1, \"mat-chip-list\"], hostVars: 15, hostBindings: function MatChipList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatChipList_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChipList_blur_HostBindingHandler() { return ctx._blur(); })(\"keydown\", function MatChipList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._uid);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx._tabIndex)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-multiselectable\", ctx.multiple)(\"role\", ctx.role)(\"aria-orientation\", ctx.ariaOrientation);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-list-disabled\", ctx.disabled)(\"mat-chip-list-invalid\", ctx.errorState)(\"mat-chip-list-required\", ctx.required);\n    } }, inputs: { ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", required: \"required\", placeholder: \"placeholder\", disabled: \"disabled\", selectable: \"selectable\", tabIndex: \"tabIndex\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, exportAs: [\"matChipList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatChipList }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-chip-list-wrapper\"]], template: function MatChipList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatChipList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nMatChipList.propDecorators = {\n    errorStateMatcher: [{ type: Input }],\n    multiple: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    required: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    ariaOrientation: [{ type: Input, args: ['aria-orientation',] }],\n    selectable: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    change: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    chips: [{ type: ContentChildren, args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-chip-list',\n                template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n                exportAs: 'matChipList',\n                host: {\n                    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-required]': 'role ? required : null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.role]': 'role',\n                    '[class.mat-chip-list-disabled]': 'disabled',\n                    '[class.mat-chip-list-invalid]': 'errorState',\n                    '[class.mat-chip-list-required]': 'required',\n                    '[attr.aria-orientation]': 'ariaOrientation',\n                    'class': 'mat-chip-list',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                    '(keydown)': '_keydown($event)',\n                    '[id]': '_uid'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.ErrorStateMatcher }, { type: ɵngcc3.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }]; }, { ariaOrientation: [{\n            type: Input,\n            args: ['aria-orientation']\n        }], change: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], chips: [{\n            type: ContentChildren,\n            args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids.\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /** Whether the control is focused. */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /** Emitted when a chip is to be added. */\n        this.chipEnd = new EventEmitter();\n        /** The input's placeholder text. */\n        this.placeholder = '';\n        /** Unique id for the input. */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this._inputElement = this._elementRef.nativeElement;\n    }\n    /** Register input for chip list */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     */\n    get addOnBlur() { return this._addOnBlur; }\n    set addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n    /** Whether the input is disabled. */\n    get disabled() { return this._disabled || (this._chipList && this._chipList.disabled); }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /** Whether the input is empty. */\n    get empty() { return !this._inputElement.value; }\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    /** Utility method to make host definition/tests more clear. */\n    _keydown(event) {\n        // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n        // want to do this when going backwards, because focus should go back to the first chip.\n        if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n            this._chipList._allowFocusEscape();\n        }\n        this._emitChipEnd(event);\n    }\n    /** Checks to see if the blur should emit the (chipEnd) event. */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    _focus() {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    }\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\n    _emitChipEnd(event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._inputElement.focus(options);\n    }\n    /** Checks whether a keycode is one of the configured separators. */\n    _isSeparatorKey(event) {\n        return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n    }\n}\nMatChipInput.ɵfac = function MatChipInput_Factory(t) { return new (t || MatChipInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS)); };\nMatChipInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipInput, selectors: [[\"input\", \"matChipInputFor\", \"\"]], hostAttrs: [1, \"mat-chip-input\", \"mat-input-element\"], hostVars: 5, hostBindings: function MatChipInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) { return ctx._keydown($event); })(\"blur\", function MatChipInput_blur_HostBindingHandler() { return ctx._blur(); })(\"focus\", function MatChipInput_focus_HostBindingHandler() { return ctx._focus(); })(\"input\", function MatChipInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipList && ctx._chipList.ngControl ? ctx._chipList.ngControl.invalid : null)(\"aria-required\", ctx._chipList && ctx._chipList.required || null);\n    } }, inputs: { separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", chipList: [\"matChipInputFor\", \"chipList\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatChipInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_CHIPS_DEFAULT_OPTIONS,] }] }\n];\nMatChipInput.propDecorators = {\n    chipList: [{ type: Input, args: ['matChipInputFor',] }],\n    addOnBlur: [{ type: Input, args: ['matChipInputAddOnBlur',] }],\n    separatorKeyCodes: [{ type: Input, args: ['matChipInputSeparatorKeyCodes',] }],\n    chipEnd: [{ type: Output, args: ['matChipInputTokenEnd',] }],\n    placeholder: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matChipInputFor]',\n                exportAs: 'matChipInput, matChipInputFor',\n                host: {\n                    'class': 'mat-chip-input mat-input-element',\n                    '(keydown)': '_keydown($event)',\n                    '(blur)': '_blur()',\n                    '(focus)': '_focus()',\n                    '(input)': '_onInput()',\n                    '[id]': 'id',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.placeholder]': 'placeholder || null',\n                    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                    '[attr.aria-required]': '_chipList && _chipList.required || null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_CHIPS_DEFAULT_OPTIONS]\n            }] }]; }, { separatorKeyCodes: [{\n            type: Input,\n            args: ['matChipInputSeparatorKeyCodes']\n        }], chipEnd: [{\n            type: Output,\n            args: ['matChipInputTokenEnd']\n        }], placeholder: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], chipList: [{\n            type: Input,\n            args: ['matChipInputFor']\n        }], addOnBlur: [{\n            type: Input,\n            args: ['matChipInputAddOnBlur']\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nconst ɵ0 = {\n    separatorKeyCodes: [ENTER]\n};\nclass MatChipsModule {\n}\nMatChipsModule.ɵfac = function MatChipsModule_Factory(t) { return new (t || MatChipsModule)(); };\nMatChipsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatChipsModule });\nMatChipsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: ɵ0\n        }\n    ], imports: [[MatCommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatChipsModule, { declarations: function () { return [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: CHIP_DECLARATIONS,\n                declarations: CHIP_DECLARATIONS,\n                providers: [\n                    ErrorStateMatcher,\n                    {\n                        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                        useValue: ɵ0\n                    }\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule, ɵ0 };\n\n//# sourceMappingURL=chips.js.map","import { CommonModule, formatDate } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../shared-module/shared-module.module';\r\nimport { WorkOrdersRoutingModule } from './work-orders-routing.module';\r\nimport { WorkOrdersComponent } from './work-orders.component';\r\nimport { ViewWorkorderComponent } from './view-workorder/view-workorder.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport {\r\n  MatNativeDateModule,\r\n  NativeDateAdapter,\r\n  DateAdapter,\r\n  MAT_DATE_FORMATS\r\n} from '@angular/material/core';\r\nimport { dateFormatWithMonthName } from 'src/utils/dateUtils';\r\nimport { PickWorkOrderSparesComponent } from './pick-workorder-spares/pick-workorder-spares.component';\r\nimport { SparesSkusComponent } from './pick-workorder-spares/spares-skus/spares-skus.component';\r\nimport { CreateWorkOrderComponent } from './create-work-order/create-work-order.component';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ChecklistTaskItemComponent } from './view-workorder/checklist-task-item/checklist-task-item.component';\r\n\r\nclass PickDateAdapter extends NativeDateAdapter {\r\n  format(date: Date, displayFormat: Object): string {\r\n    if (displayFormat === 'input') {\r\n      return formatDate(date, 'dd MMM yyyy', this.locale);\r\n    } else {\r\n      return formatDate(date, 'dd MMM yyyy', this.locale);\r\n    }\r\n  }\r\n}\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    WorkOrdersRoutingModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatChipsModule,\r\n    MatFormFieldModule\r\n  ],\r\n  declarations: [\r\n    WorkOrdersComponent,\r\n    ViewWorkorderComponent,\r\n    PickWorkOrderSparesComponent,\r\n    SparesSkusComponent,\r\n    CreateWorkOrderComponent,\r\n    ChecklistTaskItemComponent\r\n  ],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: PickDateAdapter },\r\n    { provide: MAT_DATE_FORMATS, useValue: dateFormatWithMonthName }\r\n  ]\r\n})\r\nexport class WorkOrdersModule {}\r\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { IExtendedTask } from 'src/app/services';\r\n\r\n@Component({\r\n  selector: 'app-checklist-task-item',\r\n  templateUrl: './checklist-task-item.component.html',\r\n  styleUrls: ['./checklist-task-item.component.scss']\r\n})\r\nexport class ChecklistTaskItemComponent implements OnInit {\r\n  @Input() public taskItem: IExtendedTask;\r\n  @Input() public firstItem: boolean;\r\n  @Input() public isTaskEditable: boolean;\r\n  @Output() public taskSelected = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public handleSelectChecklistTask(event, taskItem) {\r\n    taskItem.isCompleted = !taskItem.isCompleted;\r\n    event.currentTarget.checked = taskItem.isCompleted;\r\n    this.taskSelected.emit();\r\n  }\r\n}\r\n","<div [ngClass]=\"{ 'addtask-wrapper': firstItem }\"></div>\r\n<table width=\"100%\" *ngIf=\"taskItem\">\r\n  <tbody>\r\n    <tr>\r\n      <td class=\"task-id-cell\">\r\n        <span>{{ taskItem.sequenceNumber }}</span>\r\n      </td>\r\n      <td class=\"task-description-cell\">\r\n        <span>{{ taskItem.description }}</span>\r\n      </td>\r\n      <td class=\"task-iscompleted-cell\">\r\n        <div class=\"form-group\">\r\n          <div class=\"radio custom\">\r\n          <label class=\"custom-control-label label-align\" for=\"includeObsolete\">\r\n            <input type=\"checkbox\" [disabled]=\"isTaskEditable\" (change) = \"handleSelectChecklistTask($event, taskItem)\" [checked]=\"taskItem.isCompleted\" class=\"custom-control-input\" />\r\n          </label>\r\n        </div>\r\n      </div>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  IExtendedWorkOrder,\r\n  WorkOrderPriority,\r\n  WorkorderStatus,\r\n  WorkordersService,\r\n  IWorkOrderServiceDetail,\r\n  IWorkOrderCategory,\r\n  FilehandlerService,\r\n  IFileCollection,\r\n  AuthenticationService,\r\n  PermissionGroup,\r\n  WorkOrdersPermissions,\r\n  ToastService,\r\n  Toast,\r\n  Modules,\r\n  Role,\r\n  UserProfile,\r\n  IAssets\r\n} from '../../services';\r\nimport {\r\n  standardFormattedDate,\r\n  standardFormattedDateTime\r\n} from 'src/utils/dateUtils';\r\nimport { enumString, enumValues } from 'src/utils/enumUtils';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport {\r\n  fileListFileSizesValidator,\r\n  fileListFileTypeValidator,\r\n  fileListNumberOfFilesValidator\r\n} from 'src/utils/formValidators';\r\nimport { WorkOrderWizard } from '../work-order.wizard';\r\n\r\n@Component({\r\n  selector: 'app-view-workorder',\r\n  templateUrl: './view-workorder.component.html',\r\n  styleUrls: ['./view-workorder.component.scss']\r\n})\r\nexport class ViewWorkorderComponent implements OnInit {\r\n  public isLoading = true;\r\n  public attachedFileCollection = new BehaviorSubject<IFileCollection[]>([]);\r\n  public extendedWorkOrder: IExtendedWorkOrder;\r\n  public form: FormGroup;\r\n  public standardFormattedDate = standardFormattedDate;\r\n  public workOrderPriorities = enumValues(WorkOrderPriority);\r\n  public WorkOrderStatus = WorkorderStatus;\r\n  public workOrderStatusValues: number[] = enumValues(WorkorderStatus);\r\n  public standardFormattedDateTime = standardFormattedDateTime;\r\n  public workOrderServiceDetails: IWorkOrderServiceDetail[];\r\n  public workOrderNumber: string;\r\n  public detailsModalVisible = false;\r\n  public selectedServiceUserId: string;\r\n  public selectedServiceDateTime: string;\r\n  public selectedServiceDetails: string;\r\n  public textMaxLength = 90;\r\n  public fileUploadForm: FormGroup;\r\n  public workOrderCategories: IWorkOrderCategory[];\r\n  public fileCount: number = 0;\r\n  public fileSrcCollection: IFileCollection[] = [];\r\n  public isEditable = false;\r\n  public isUpdatingWorkOrder = false;\r\n  public errorMessage: string;\r\n  public isNewFilesAdded: boolean = false;\r\n  public showSaveButton = false;\r\n  public filesLimit = 3;\r\n  @ViewChild('fileUploadInput')\r\n  public fileUploadInput: ElementRef;\r\n  public filePathCollection: string[] = [];\r\n  public savedFileSrcCollection: any;\r\n  public isGettingUserRights: boolean;\r\n  public fileTypes = [\r\n    'image/jpeg',\r\n    'image/png',\r\n    'application/msword',\r\n    'jpeg',\r\n    'jpg',\r\n    'png',\r\n    'doc',\r\n    'docx',\r\n    'xls',\r\n    'csv',\r\n    'application/ms-excel',\r\n    'xlsx',\r\n    'pdf',\r\n    'bmp'\r\n  ];\r\n  public workOrderStatus: string;\r\n  public addAssetsModalVisible = false;\r\n  public isAssetAvailable = true;\r\n  public enableServiceTextarea = false;\r\n  public isShowEditIcon = true;\r\n  public selectedWorkOrderServiceDetails: IWorkOrderServiceDetail;\r\n  public isSubmitDisabled: boolean;\r\n  public submitAttempted = false;\r\n  public expanded: boolean = false;\r\n\r\n  constructor(\r\n    private workOrdersService: WorkordersService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private fileUploadService: FilehandlerService,\r\n    private authenticationService: AuthenticationService,\r\n    private toastService: ToastService,\r\n    private workOrderWizard: WorkOrderWizard\r\n  ) {\r\n    if (this.workOrderWizard.workOrder) {\r\n      this.workOrderStatus = this.workOrderWizard.workOrder.status.toString();\r\n      this.workOrderNumber = this.workOrderWizard.workOrder.number.toString();\r\n      this.checkUserEditRights();\r\n    } else {\r\n      this.router.navigate(['work-orders']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.viewWorkOrderForId();\r\n    this.viewWorkOrderServiceDetailForId();\r\n    this.listCategory();\r\n  }\r\n\r\n  public createForm() {\r\n    const validPattern = '^[a-zA-Z0-9 ]*';\r\n    const bulidWorkOrderDetailForm = (\r\n      extendedWorkOrder: IExtendedWorkOrder\r\n    ) => {\r\n      this.form = this.formBuilder.group({\r\n        title: new FormControl(\r\n          {\r\n            value: extendedWorkOrder.title,\r\n            disabled: !this.isEditable\r\n          },\r\n          Validators.compose([\r\n            Validators.maxLength(50),\r\n            Validators.required,\r\n            Validators.pattern(validPattern)\r\n          ])\r\n        ),\r\n        description: new FormControl(\r\n          {\r\n            value: extendedWorkOrder.description,\r\n            disabled: !this.isEditable\r\n          },\r\n          Validators.compose([Validators.maxLength(4000), Validators.required])\r\n        ),\r\n        category: new FormControl({\r\n          value: extendedWorkOrder.category.id,\r\n          disabled: !this.isEditable\r\n        }),\r\n        reportedOn: new FormControl(\r\n          {\r\n            value: extendedWorkOrder.reportedOn,\r\n            disabled: true\r\n          },\r\n          Validators.compose([Validators.required])\r\n        ),\r\n        dueDate: new FormControl(\r\n          {\r\n            value: extendedWorkOrder.dueDate,\r\n            disabled: true\r\n          },\r\n          Validators.compose([Validators.required])\r\n        ),\r\n        priority: new FormControl({\r\n          value: extendedWorkOrder.priority,\r\n          disabled: !this.isEditable\r\n        }),\r\n        assignedToUser: new FormControl(\r\n          {\r\n            value: extendedWorkOrder.assignedToUser,\r\n            disabled: !this.isEditable\r\n          },\r\n          Validators.compose([Validators.maxLength(50)])\r\n        ),\r\n        status: new FormControl(\r\n          {\r\n            value: extendedWorkOrder.status,\r\n            disabled: !this.isEditable\r\n          },\r\n          Validators.compose([Validators.required])\r\n        ),\r\n        serviceDetails: new FormControl(\r\n          {\r\n            value: '',\r\n            disabled: !this.isEditable\r\n          },\r\n          Validators.compose([Validators.maxLength(4000)])\r\n        )\r\n      });\r\n    };\r\n    bulidWorkOrderDetailForm(this.extendedWorkOrder);\r\n\r\n    this.form.valueChanges.subscribe(() => {\r\n      setTimeout(() => {\r\n        this.updateFormChanges();\r\n      }, 100);\r\n    });\r\n\r\n    this.fileUploadForm = this.formBuilder.group({\r\n      files: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n          fileListFileTypeValidator(this.fileTypes),\r\n          fileListFileSizesValidator(2000000)\r\n        ],\r\n        fileListNumberOfFilesValidator(this.filesLimit)\r\n      ]\r\n    });\r\n  }\r\n\r\n  public viewWorkOrderForId(isOnInit: boolean = true) {\r\n    this.isLoading = true;\r\n    const workOrderAttachements$: Observable<string[]> = this.workOrdersService\r\n      .viewWorkOrderForId(this.workOrderNumber.toString())\r\n      .pipe(\r\n        map(extendedWorkOrder => {\r\n          this.extendedWorkOrder = extendedWorkOrder;\r\n          if (isOnInit) {\r\n            this.createForm();\r\n          }\r\n          return extendedWorkOrder.attachedFiles;\r\n        })\r\n      );\r\n    workOrderAttachements$.subscribe(assetAttachments => {\r\n      this.fileCount = assetAttachments ? assetAttachments.length : 0;\r\n      let fileList: any[] = [];\r\n      this.fileSrcCollection = [];\r\n      this.filePathCollection = [];\r\n      if (assetAttachments) {\r\n        assetAttachments.forEach(filePath => {\r\n          const fileNameWithExt = filePath.replace(/^.*[\\\\\\/]/, '');\r\n          const fileName = fileNameWithExt.substring(0, fileNameWithExt.length);\r\n          if (fileName === 'blob') {\r\n            return;\r\n          }\r\n          this.filePathCollection.push(filePath);\r\n          this.fileUploadService.getFile(filePath).subscribe(fileData => {\r\n            fileData.name = fileName;\r\n            this.fileSrcCollection.push(fileData);\r\n            this.fileCount = this.fileSrcCollection\r\n              ? this.fileSrcCollection.length\r\n              : 0;\r\n            fileList.push(fileData);\r\n          });\r\n        });\r\n        this.fileUploadForm.setValue({\r\n          files: this.fileSrcCollection\r\n        });\r\n        this.attachedFileCollection.next(this.fileSrcCollection);\r\n      }\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  public viewWorkOrderServiceDetailForId(): void {\r\n    this.workOrdersService\r\n      .viewWorkOrderServiceDetailForId(\r\n        this.workOrderWizard.workOrder.number.toString()\r\n      )\r\n      .subscribe(workOrderServiceDetails => {\r\n        this.workOrderServiceDetails = workOrderServiceDetails;\r\n      });\r\n  }\r\n\r\n  public listCategory() {\r\n    this.workOrdersService\r\n      .listWorkOrderCategory()\r\n      .subscribe((data: IWorkOrderCategory[]) => {\r\n        this.workOrderCategories = data;\r\n      });\r\n  }\r\n\r\n  public handleViewMoreClick(workOrderServiceDetail: IWorkOrderServiceDetail) {\r\n    this.detailsModalVisible = true;\r\n    this.isShowEditIcon = this.isEditable;\r\n    this.selectedWorkOrderServiceDetails = workOrderServiceDetail;\r\n  }\r\n\r\n  public handleDetailsModalClose() {\r\n    this.detailsModalVisible = false;\r\n    this.enableServiceTextarea = false;\r\n    this.addAssetsModalVisible = false;\r\n  }\r\n\r\n  public disableRightClick(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  public handlesPickSpares(workOrderNumber: string) {\r\n    this.router.navigate([\r\n      'work-orders',\r\n      '#WO' + workOrderNumber,\r\n      'PickSpares'\r\n    ]);\r\n  }\r\n\r\n  private checkUserEditRights() {\r\n    this.isGettingUserRights = true;\r\n    const userRole$: Observable<UserProfile> = this.authenticationService.currentUserProfile$.pipe(\r\n      map(userProfile => userProfile)\r\n    );\r\n\r\n    userRole$.subscribe(userProfile => {\r\n      this.authenticationService\r\n        .currentUserHasPermission({\r\n          [PermissionGroup.WorkOrders]: [WorkOrdersPermissions.CanEditWorkOrder]\r\n        })\r\n        .subscribe(hasPermission => {\r\n          if (userProfile.userRole.groupName !== Role.Technician) {\r\n            this.isEditable =\r\n              hasPermission &&\r\n              Number(this.workOrderStatus) !== WorkorderStatus.Closed;\r\n          } else {\r\n            this.isEditable =\r\n              hasPermission &&\r\n              Number(this.workOrderStatus) !== WorkorderStatus.Closed &&\r\n              Number(this.workOrderStatus) !== WorkorderStatus.Complete;\r\n          }\r\n          this.isGettingUserRights = false;\r\n        });\r\n    });\r\n  }\r\n\r\n  public launchFileInput(): void {\r\n    this.fileUploadForm.reset({});\r\n    this.fileUploadInput.nativeElement.value = '';\r\n    this.fileUploadInput.nativeElement.click();\r\n  }\r\n\r\n  public updateFormChanges() {\r\n    debugger\r\n    this.extendedWorkOrder.status = this.form.get('status').value;\r\n    this.extendedWorkOrder.assignedToUser = this.form.get('assignedToUser')\r\n      .value\r\n      ? this.form.get('assignedToUser').value.toString()\r\n      : '';\r\n    this.extendedWorkOrder.title = this.form.get('title').value.toString();\r\n    this.extendedWorkOrder.description = this.form\r\n      .get('description')\r\n      .value.toString();\r\n    this.extendedWorkOrder.priority = this.form.get('priority').value;\r\n    this.extendedWorkOrder.dueDate = this.form.get('dueDate').value;\r\n    this.extendedWorkOrder.reportedOn = this.form.get('reportedOn').value;\r\n    const categoryId = this.form.get('category').value;\r\n    this.extendedWorkOrder.category = this.workOrderCategories.filter(\r\n      category => category.id === Number(categoryId)\r\n    )[0];\r\n    this.extendedWorkOrder.serviceDetails = this.form\r\n      .get('serviceDetails')\r\n      .value.toString();\r\n    this.showSaveButton = true;\r\n    this.form.markAsDirty();\r\n  }\r\n\r\n  public selectedUserId(userId: string) {\r\n    this.form.get('assignedToUser').setValue(userId);\r\n    this.showSaveButton = true;\r\n  }\r\n\r\n  public updateWorkOrder() {\r\n    debugger\r\n    this.submitAttempted = true;\r\n    if (!this.isUpdatingWorkOrder) {\r\n      this.isUpdatingWorkOrder = true;\r\n      this.isAssetAvailable =\r\n        this.extendedWorkOrder.workOrderAssets.filter(\r\n          asset => asset.isDelete !== true\r\n        ).length > 0;\r\n\r\n      if (!this.form.valid || !this.isAssetAvailable) {\r\n        this.isNewFilesAdded = false;\r\n        this.showSaveButton = false;\r\n        this.isUpdatingWorkOrder = false;\r\n       //  this.submitAttempted = false;\r\n        this.form.markAsPristine();\r\n        return;\r\n      }\r\n      this.showSaveButton = false;\r\n      this.form.get('serviceDetails').setValue('');\r\n      if (this.form.valid && this.form.dirty) {\r\n        let paramWorkOrderAssets: IAssets[] = [];\r\n        this.extendedWorkOrder.workOrderAssets.forEach(workOrderAssets => {\r\n          if (workOrderAssets.isDelete === true || workOrderAssets.isNew) {\r\n            workOrderAssets.referenceId = this.extendedWorkOrder.id;\r\n            paramWorkOrderAssets.push(workOrderAssets);\r\n          }\r\n        });\r\n        this.extendedWorkOrder.workOrderAssets = [];\r\n        this.extendedWorkOrder.workOrderAssets = paramWorkOrderAssets;\r\n        this.form.markAsPristine();\r\n        this.workOrdersService\r\n          .updateWorkOrderForId(\r\n            this.extendedWorkOrder.id,\r\n            this.extendedWorkOrder\r\n          )\r\n          .subscribe(\r\n            data => {\r\n              this.toastService.showToast(\r\n                new Toast(\r\n                  'Work Order (' + data.workOrderNumber + ') saved successfully'\r\n                )\r\n              );\r\n\r\n              if (this.fileUploadForm.valid && this.isNewFilesAdded) {\r\n                this.fileUploadService\r\n                  .uploadFiles(\r\n                    Number(this.extendedWorkOrder.number),\r\n                    Modules.WorkOrder,\r\n                    this.fileSrcCollection\r\n                  )\r\n                  .subscribe(\r\n                    data => {\r\n                      this.savedFileSrcCollection = data;\r\n                      this.filePathCollection = data.attachments;\r\n                      this.viewWorkOrderForId(false);\r\n                      this.viewWorkOrderServiceDetailForId();\r\n                    },\r\n                    (errorResponse: HttpErrorResponse) => {\r\n                      this.isUpdatingWorkOrder = false;\r\n                      this.toastService.showErrorToast(\r\n                        'Unable to save workorder files.'\r\n                      );\r\n                      return;\r\n                    }\r\n                  );\r\n              } else {\r\n                this.viewWorkOrderForId(false);\r\n                this.viewWorkOrderServiceDetailForId();\r\n                this.isUpdatingWorkOrder = false;\r\n              }\r\n              this.isNewFilesAdded = false;\r\n              this.showSaveButton = false;\r\n              this.extendedWorkOrder = data;\r\n            },\r\n            (errorResponse: HttpErrorResponse) => {\r\n              this.isNewFilesAdded = false;\r\n              this.showSaveButton = false;\r\n              this.isUpdatingWorkOrder = false;\r\n              const errorMessage = errorResponse[0];\r\n              this.toastService.showErrorToast(errorMessage);\r\n              return;\r\n            },\r\n            () => {\r\n              this.errorMessage =\r\n                'Sorry something went wrong... please try again later';\r\n              this.isUpdatingWorkOrder = false;\r\n              this.isNewFilesAdded = false;\r\n              this.showSaveButton = false;\r\n            }\r\n          );\r\n        return;\r\n      }\r\n\r\n      if (\r\n        this.fileUploadForm.valid &&\r\n        this.isNewFilesAdded &&\r\n        !this.form.dirty\r\n      ) {\r\n        this.fileUploadService\r\n          .uploadFiles(\r\n            Number(this.extendedWorkOrder.number),\r\n            Modules.WorkOrder,\r\n            this.fileSrcCollection\r\n          )\r\n          .subscribe(data => {\r\n            this.savedFileSrcCollection = data;\r\n            if (this.savedFileSrcCollection.attachments) {\r\n              this.filePathCollection = data.attachments;\r\n              this.viewWorkOrderForId(false);\r\n              this.viewWorkOrderServiceDetailForId();\r\n              this.toastService.showToast(\r\n                new Toast('Workorder files saved successfully')\r\n              );\r\n            } else {\r\n              this.toastService.showErrorToast(`Files not saved`);\r\n            }\r\n            this.isUpdatingWorkOrder = false;\r\n            this.isNewFilesAdded = false;\r\n            this.showSaveButton = false;\r\n          });\r\n      }\r\n      if (\r\n        !this.fileUploadForm.valid &&\r\n        this.isNewFilesAdded &&\r\n        !this.form.dirty\r\n      ) {\r\n        this.toastService.showErrorToast(`Files not saved`);\r\n      }\r\n\r\n      this.isUpdatingWorkOrder = false;\r\n      this.showSaveButton = false;\r\n    }\r\n  }\r\n\r\n  public handleDeleteItem(assetIndex: number) {\r\n    if (this.extendedWorkOrder && this.extendedWorkOrder.workOrderAssets) {\r\n      this.extendedWorkOrder.workOrderAssets[assetIndex].isDelete = true;\r\n      this.isAssetAvailable =\r\n        this.extendedWorkOrder.workOrderAssets.filter(\r\n          asset => asset.isDelete !== true\r\n        ).length > 0;\r\n      this.form.markAsDirty();\r\n      this.showSaveButton = true;\r\n    }\r\n  }\r\n\r\n  public handleFileInputChange(): void {\r\n    this.showSaveButton = true;\r\n    this.isNewFilesAdded = true;\r\n\r\n    let noExistingFile = this.fileSrcCollection.length === 0;\r\n\r\n    const inputFiles: any[] = this.fileUploadInput.nativeElement.files;\r\n    for (let i = 0; i < inputFiles.length; i++) {\r\n      if (\r\n        this.fileSrcCollection.filter(file => file.name === inputFiles[i].name)\r\n          .length === 0\r\n      ) {\r\n        this.fileSrcCollection.push(inputFiles[i]);\r\n\r\n        this.filePathCollection.push('NewFile');\r\n      } else {\r\n        this.toastService.showErrorToast('Cannot upload duplicate file.');\r\n      }\r\n    }\r\n\r\n    this.clearFileFormErrors();\r\n    if (noExistingFile) {\r\n      this.fileUploadForm.setValue({\r\n        files: this.fileSrcCollection\r\n      });\r\n    } else {\r\n      this.fileUploadForm.patchValue({\r\n        files: this.fileSrcCollection\r\n      });\r\n    }\r\n\r\n    if (\r\n      this.fileUploadForm.controls['files'].hasError('acceptableFileType') ||\r\n      this.fileUploadForm.controls['files'].hasError(\r\n        'acceptableNumberOfFiles'\r\n      ) ||\r\n      this.fileUploadForm.controls['files'].hasError('acceptableFileSize')\r\n    ) {\r\n      this.showSaveButton = false;\r\n    }\r\n    this.fileCount = this.fileSrcCollection.length;\r\n    this.attachedFileCollection.next(this.fileSrcCollection);\r\n  }\r\n\r\n  public handleDeleteFileAttached(fileIndex: number) {\r\n    const filePath = this.filePathCollection[fileIndex];\r\n    this.isUpdatingWorkOrder = true;\r\n    if (filePath === 'NewFile') {\r\n      this.fileSrcCollection.splice(fileIndex, 1);\r\n      this.filePathCollection.splice(fileIndex, 1);\r\n      this.fileCount = this.fileSrcCollection.length;\r\n      this.attachedFileCollection.next([]);\r\n      this.attachedFileCollection.next(this.fileSrcCollection);\r\n      this.fileUploadForm.patchValue({\r\n        files: this.fileSrcCollection\r\n      });\r\n      this.toastService.showToast(new Toast('File has been deleted.'));\r\n      this.isUpdatingWorkOrder = false;\r\n      this.resetSaveButtonDisplay();\r\n    } else {\r\n      this.fileUploadService.deleteFile(filePath, false).subscribe(\r\n        () => {\r\n          this.fileSrcCollection.splice(fileIndex, 1);\r\n          this.filePathCollection.splice(fileIndex, 1);\r\n          this.fileCount = this.fileSrcCollection.length;\r\n          this.attachedFileCollection.next([]);\r\n          this.attachedFileCollection.next(this.fileSrcCollection);\r\n          this.toastService.showToast(new Toast('File has been deleted.'));\r\n          this.isUpdatingWorkOrder = false;\r\n          this.resetSaveButtonDisplay();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.toastService.showErrorToast('Unable to delete the file.');\r\n          return;\r\n        }\r\n      );\r\n      this.fileUploadForm.patchValue({\r\n        files: this.fileSrcCollection\r\n      });\r\n    }\r\n\r\n    this.fileUploadForm.markAsPristine();\r\n    this.fileUploadForm.markAsUntouched();\r\n    this.fileUploadForm.updateValueAndValidity();\r\n  }\r\n\r\n  public resetSaveButtonDisplay() {\r\n    if (this.fileSrcCollection.length === 0) {\r\n      this.showSaveButton = false;\r\n    }\r\n    if (this.fileSrcCollection.length === 3) {\r\n      this.showSaveButton = true;\r\n    }\r\n  }\r\n\r\n  public priorityString(priority: WorkOrderPriority) {\r\n    return enumString(WorkOrderPriority, priority);\r\n  }\r\n\r\n  public handlePickAssets() {\r\n    this.addAssetsModalVisible = true;\r\n  }\r\n\r\n  public handleAddedWorkOrderAssets(workOrderAsset: IAssets[]) {\r\n    this.addAssetsModalVisible = false;\r\n    this.extendedWorkOrder.workOrderAssets = workOrderAsset;\r\n    this.isAssetAvailable =\r\n      this.extendedWorkOrder.workOrderAssets.filter(\r\n        asset => asset.isDelete !== true\r\n      ).length > 0;\r\n    this.form.markAsDirty();\r\n    this.showSaveButton = true;\r\n  }\r\n\r\n  public handleClipboard(event: ClipboardEvent) {\r\n    event.preventDefault();\r\n    return;\r\n  }\r\n\r\n  public clearFileFormErrors() {\r\n    this.fileUploadForm.controls['files'].setErrors({\r\n      acceptableFileType: false,\r\n      acceptableFileSize: false\r\n    });\r\n  }\r\n\r\n  public getUserName(userDetails: string) {\r\n    if (userDetails && userDetails.includes('-')) {\r\n      return userDetails.split('-')[1];\r\n    } else {\r\n      return userDetails;\r\n    }\r\n  }\r\n  public handleTextAreaInput() {\r\n    this.isSubmitDisabled =\r\n      this.selectedWorkOrderServiceDetails.serviceDetail.trim() === '';\r\n  }\r\n  public handleServiceSaveButton() {\r\n    this.enableServiceTextarea = false;\r\n    this.isLoading = true;\r\n    this.workOrdersService\r\n      .updateWorkOrderService(this.selectedWorkOrderServiceDetails)\r\n      .subscribe(\r\n        () => {\r\n          this.viewWorkOrderServiceDetailForId();\r\n          this.toastService.showToast(\r\n            new Toast('Workorder service history saved successfully')\r\n          );\r\n          this.isLoading = false;\r\n          this.detailsModalVisible = false;\r\n        },\r\n        (errorResponse: HttpErrorResponse) => {\r\n          this.viewWorkOrderServiceDetailForId();\r\n\r\n          this.toastService.showErrorToast(\r\n            'Unable to save workorder service history'\r\n          );\r\n          this.isLoading = false;\r\n          return;\r\n        }\r\n      );\r\n  }\r\n\r\n  public handleShowCheckListContent(checkList) {\r\n    if (this.expanded === checkList) {\r\n      this.expanded = null;\r\n    } else {\r\n      this.expanded = checkList;\r\n    }\r\n  }\r\n\r\n  public handleSelectedChecklistTask() {\r\n    this.showSaveButton = true;\r\n    this.form.markAsDirty();\r\n  }\r\n}\r\n","<app-section-header [customPreviousPageTitle]=\"'Work Orders'\" [customCurrentPageTitle]=\"'#WO'+workOrderNumber\"></app-section-header>\r\n\r\n<div *ngIf=\"isLoading || isGettingUserRights\">\r\n  <div class=\"spinner\"></div>\r\n</div>\r\n<app-loading-modal\r\n  *ngIf=\"isUpdatingWorkOrder\"\r\n></app-loading-modal>\r\n<article *ngIf=\"!isLoading && !isGettingUserRights && !isUpdatingWorkOrder\">\r\n  <header>\r\n    <h1>{{ '#WO'+workOrderNumber }}</h1>\r\n  </header>\r\n  <form [formGroup] = \"form\">\r\n    <div class=\"core-info mt-4\">\r\n      <div class=\"col-12 spares-button mobile-btn\">\r\n          <div class=\"btn-pick-spares\">\r\n            <button (click)=\"handlesPickSpares(workOrderNumber)\" class=\"btn btn-primary\">Pick Spares</button>\r\n          </div>\r\n        <div class=\"col-2 col-sm-3\"></div>\r\n      </div>\r\n      <div class=\"d-flex  align-items-center\"  *ngIf=\"submitAttempted && form.controls.title.errors\">\r\n        <div class=\"col-4 col-sm-2 width-17\">\r\n        </div>\r\n        <div class=\" col-md-6 col-sm-10 col-8 width-49 alert alert-danger arrow-alert\">\r\n          You must specify title\r\n        </div>\r\n      </div>\r\n      <div class=\"row align-items-center mb-sm-4 mb-2\">\r\n        <div class=\"col-sm-2 col-4\">\r\n          <label>Title</label>\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-10 col-8\">\r\n          <input type=\"text\" pattern=\"^[a-zA-Z0-9 ]*\" (paste)=\"handleClipboard($event)\" formControlName=\"title\" class=\"form-control\" maxlength=\"50\" />\r\n        </div>\r\n        <div class=\"gap\"></div>\r\n        <div class=\"col-sm-4 spares-button tab-view\">\r\n          <div class=\"btn-pick-spares\">\r\n            <button (click)=\"handlesPickSpares(this.workOrderNumber, workOrderStatus)\" class=\"btn btn-primary px-md-5\">Pick Spares</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"d-flex\"  *ngIf=\"submitAttempted && form.controls.description.errors\">\r\n        <div class=\"col-4 col-sm-2 width-17\">\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-10 col-8 width-83 alert alert-danger arrow-alert\">\r\n          You must specify description\r\n        </div>\r\n      </div>\r\n      <div class=\"row mb-sm-4 mb-2\">\r\n        <div class=\"col-sm-2 col-4\">\r\n          <label>Description</label>\r\n        </div>\r\n        <div class=\"col-sm-10 col-8\">\r\n          <textarea class=\"form-control\" formControlName=\"description\" [readOnly]=\"!isEditable\" rows=\"8\" maxlength=\"4000\" ></textarea>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-6\">\r\n          <div class=\"row  align-items-center d-flex  mb-2 mb-sm-3\">\r\n            <label class=\"col-4 \">Reported On</label>\r\n            <div class=\"col-8\">\r\n              <div class=\"form-group\">\r\n                <div class=\"taro-material-datepicker\">\r\n                  <input\r\n                    matInput\r\n                    [matDatepicker]=\"datePicker\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"reportedOn\"\r\n                  />\r\n                  <mat-datepicker-toggle\r\n                    matSuffix\r\n                    [for]=\"datePicker\"\r\n                  >\r\n                  </mat-datepicker-toggle>\r\n                  <mat-datepicker #datePicker></mat-datepicker>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row align-items-center  d-flex  mb-2 mb-sm-3\">\r\n            <label class=\"col-4 \">Due On</label>\r\n            <div class=\"col-8\">\r\n              <div class=\"form-group\">\r\n                <div class=\"taro-material-datepicker\">\r\n                  <input\r\n                    matInput\r\n                    [matDatepicker]=\"datePickerDueDate\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"dueDate\"\r\n                  />\r\n                  <mat-datepicker-toggle\r\n                    matSuffix\r\n                    [for]=\"datePickerDueDate\"\r\n                  >\r\n                  </mat-datepicker-toggle>\r\n                  <mat-datepicker #datePickerDueDate></mat-datepicker>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row  align-items-center d-flex  mb-2 mb-sm-3\">\r\n            <label class=\"col-4 \">Assigned To</label>\r\n            <div class=\"col-8\">\r\n              <input type=\"hidden\" formControlName=\"assignedToUser\" [readOnly]=\"!isEditable\" class=\"form-control\" maxlength=\"50\"/>\r\n              <app-list-users [isEditable]=\"isEditable\" [userName]=\"extendedWorkOrder.assignedToUser\" (selectedUserId)=\"selectedUserId($event)\"></app-list-users>\r\n            </div>\r\n          </div>\r\n        <div class=\"row  align-items-center d-flex  mb-2 mb-sm-3\">\r\n          <label class=\"col-4 \">Status</label>\r\n          <div class=\"col-8\">\r\n            <select formControlName=\"status\" class=\"custom-select form-control\">\r\n              <option *ngFor=\"let status of workOrderStatusValues; let i = index\" [value]=\"workOrderStatusValues[i]\"\r\n                      [selected]=\"workOrderStatusValues[i] === extendedWorkOrder.status\"\r\n                      class=\"form-control\" >\r\n                  {{WorkOrderStatus[status]}}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"fileSrcCollection && fileSrcCollection.length > 1\" class=\"row d-flex mb-sm-3 mobile-view\"></div>\r\n        <div *ngIf=\"fileSrcCollection && fileSrcCollection.length > 1\" class=\"row d-flex mb-sm-3 mobile-view\"></div>\r\n        <div *ngIf=\"fileSrcCollection && fileSrcCollection.length > 1\" class=\"row d-flex mb-sm-3 mobile-view\"></div>\r\n      </div>\r\n      <div class=\"col-sm-6\">\r\n        <div class=\"row align-items-center d-flex  mb-2 mb-sm-3\">\r\n          <label class=\"col-4 \">Category</label>\r\n          <div class=\"col-8\">\r\n            <select formControlName=\"category\" class=\"custom-select form-control\">\r\n              <option *ngFor=\"let category of workOrderCategories; let i = index\"\r\n                        [value]=\"category.id\"\r\n                        class=\"form-control\"\r\n                >{{category.name}}\r\n               </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"row align-items-center d-flex mb-2 mb-sm-3\">\r\n          <label class=\"col-4 \">Priority</label>\r\n          <div class=\"col-8\">\r\n            <select formControlName=\"priority\" class=\"custom-select form-control\">\r\n                <option *ngFor=\"let workOrderPriority of workOrderPriorities\"\r\n                  [value]=\"workOrderPriority\"\r\n                  [selected]=\"workOrderPriority === extendedWorkOrder.priority\"\r\n                  class=\"form-control\"\r\n                >\r\n                  {{priorityString(workOrderPriority)}}\r\n                </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"row  d-flex  align-items-center mb-2 mb-sm-3  file-attach\">\r\n          <label class=\"col-4 attachment-icon\">Attachments\r\n            <span tooltip-danger=\"Allowed file types are doc, docx, xls, xlsx, csv, pdf, jpeg, png, bmp. Max file size allowed 2 MB.\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 19.199 19.2\"   width=\"14\" height=\"14\">\r\n                <path d=\"M0 9.6a9.6 9.6 0 0 0 18.5 3.6 8.571 8.571 0 0 0 .7-3.6A9.6 9.6 0 1 0 0 9.6z\" fill=\"#fff\" stroke=\"#ff422e\"/>\r\n                <g>\r\n                  <path d=\"M9.6 4a1.184 1.184 0 0 1 1.2 1.3 1.2 1.2 0 1 1-2.4 0A1.24 1.24 0 0 1 9.6 4zm-1 3.3h2.1v7.9H8.6z\" fill=\"#ff422e\"/>\r\n                </g>\r\n              </svg>\r\n            </span>\r\n          </label>\r\n          <form *ngIf=\"fileUploadForm\" [formGroup]=\"fileUploadForm\" class=\"col-8\">\r\n            <div class=\"form-group\">\r\n              <div #alertElementRef class=\"alert-msgs\">\r\n                <div\r\n                  class=\"alert alert-danger arrow-alert\"\r\n                  *ngIf=\"\r\n                    fileUploadForm.controls['files'].hasError(\r\n                      'acceptableFileType'\r\n                    ) ||\r\n                    fileUploadForm.controls['files'].hasError(\r\n                      'acceptableFileSize'\r\n                    )\r\n                  \"\r\n                >\r\n                Allowed file types are doc, docx, xls, xlsx, csv, pdf, jpeg, png, bmp. Max file size allowed 2 MB.\r\n                </div>\r\n                <div\r\n                  class=\"alert alert-danger arrow-alert\"\r\n                  *ngIf=\"\r\n                    fileUploadForm.controls['files'].hasError(\r\n                      'acceptableNumberOfFiles'\r\n                    ) && fileCount > 3\r\n                  \"\r\n                >\r\n                  Too many files selected. Total number of files cannot exceed\r\n                  {{ filesLimit }}.\r\n                </div>\r\n              </div>\r\n              <div class=\"file-input\">\r\n                <div class=\"col-7\">\r\n                  <label>\r\n                    <span *ngIf=\"fileCount === 0\">No file selected</span>\r\n                    <span *ngIf=\"fileCount === 1\">{{fileCount}} file added</span>\r\n                    <span *ngIf=\"fileCount > 1\">{{fileCount}} files added</span>\r\n                  </label>\r\n                </div>\r\n                <div class=\"col-5\"><button\r\n                  (click)=\"launchFileInput()\"\r\n                  class=\"btn-file-upload\"\r\n                  [disabled]=\"fileCount > 2 || !isEditable ||\r\n                  fileUploadForm.controls['files'].hasError('acceptableFileType') ||\r\n                  fileUploadForm.controls['files'].hasError( 'acceptableFileSize')\r\n                 \"\r\n                >Choose file</button></div>\r\n                <input\r\n                  hidden\r\n                  multiple\r\n                  (change)=\"handleFileInputChange()\"\r\n                  type=\"file\"\r\n                  #fileUploadInput\r\n                  [readonly]=\"!isEditable\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div *ngIf=\"fileSrcCollection && fileSrcCollection.length > 0\" class=\"row  d-flex  file-row\">\r\n          <app-view-attached-files [attachedFileCollection]=\"attachedFileCollection\" [isEditable]=\"isEditable\" (deletedFileIndex)=\"handleDeleteFileAttached($event)\"></app-view-attached-files>\r\n        </div>\r\n        <div *ngIf=\"fileSrcCollection && fileSrcCollection.length > 1\" class=\"row  d-flex mb-sm-3\"></div>\r\n        <div *ngIf=\"fileSrcCollection && fileSrcCollection.length > 1\" class=\"row  d-flex mb-sm-3\"></div>\r\n        <div *ngIf=\"fileSrcCollection && fileSrcCollection.length > 1\" class=\"row  d-flex mb-sm-3\"></div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"!extendedWorkOrder.workOrderAssets || extendedWorkOrder.workOrderAssets.length === 0 || !isAssetAvailable\">\r\n        <div class=\"col-sm-6 mb-2 mb-sm-3\">\r\n          <div class=\"row d-flex align-items-center\">\r\n            <label class=\"col-4\">Asset</label>\r\n            <div class=\"col-8\">\r\n              <div class=\"form-group\">\r\n                <div class=\"asset-alert-msgs\">\r\n                  <div\r\n                    class=\"alert alert-danger arrow-alert\"\r\n                    *ngIf=\"!isAssetAvailable\"\r\n                  >\r\n                  You must specify an asset\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n              <input type=\"text\" readonly  [value]=\"\" class=\"readonly form-control\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-6 mb-2 mb-sm-3\">\r\n          <div class=\"row d-flex align-items-center\">\r\n            <label class=\"col-4\">Location</label>\r\n            <div class=\"col-8  d-flex align-items-center\">\r\n              <input type=\"text\" class=\"form-control readonly\"  [value]=\"\" readonly/>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15.002\" height=\"19.003\" viewBox=\"0 0 14.002 18.003\" class=\"del-icon opacity-50\">\r\n                  <g id=\"wrench\" transform=\"translate(0.001 0)\">\r\n                    <path id=\"Path_1563\" data-name=\"Path 1563\" d=\"M12.333,3.933,1.267,3.8c-.133.133-.4.133-.533.267A.8.8,0,0,0,.6,4.6L1.8,16.2c0,.4.267.533.667.533h8.267A.61.61,0,0,0,11.4,16.2L12.867,4.6a.8.8,0,0,0-.133-.533,1.343,1.343,0,0,0-.4-.134Zm-2,11.6h-7.2L2.067,5.267h9.467Z\" transform=\"translate(0.2 1.267)\"/>\r\n                    <path id=\"Path_1564\" data-name=\"Path 1564\" d=\"M13.333,3.2H10.667A3.739,3.739,0,0,0,6.933,0a3.607,3.607,0,0,0-3.6,3.2H.667A.63.63,0,0,0,0,3.867a.63.63,0,0,0,.667.667H13.333A.63.63,0,0,0,14,3.867a.63.63,0,0,0-.667-.667Zm-6.4-1.867A2.442,2.442,0,0,1,9.333,3.2H4.667A2.407,2.407,0,0,1,6.933,1.333Z\"/>\r\n                    <path id=\"Path_1565\" data-name=\"Path 1565\" d=\"M5.367,13.467a.63.63,0,0,0,.667-.667V6.667A.63.63,0,0,0,5.367,6a.63.63,0,0,0-.667.667v6.267C4.7,13.2,5.1,13.467,5.367,13.467Z\" transform=\"translate(1.567 2)\"/>\r\n                    <path id=\"Path_1566\" data-name=\"Path 1566\" d=\"M3.9,13.5a.714.714,0,0,0,.667-.667L4.033,6.567A.714.714,0,0,0,3.367,5.9a.845.845,0,0,0-.667.8l.533,6.267A.886.886,0,0,0,3.9,13.5Z\" transform=\"translate(0.9 1.967)\"/>\r\n                    <path id=\"Path_1567\" data-name=\"Path 1567\" d=\"M6.942,13.475a.63.63,0,0,0,.667-.667l.533-6.267c.133-.267-.133-.533-.533-.533-.4-.133-.667.133-.667.533l-.533,6.267c-.134.4.133.667.533.667Z\" transform=\"translate(2.125 1.991)\"/>\r\n                  </g>\r\n                </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let workOrderAsset of extendedWorkOrder.workOrderAssets,let i = index\">\r\n        <div *ngIf=\"!workOrderAsset.isDelete\" class=\"row\" >\r\n        <div class=\"col-sm-6 mb-2 mb-sm-3\">\r\n          <div class=\"row  d-flex align-items-center\">\r\n            <label class=\"col-4\">Asset</label>\r\n            <div class=\"col-8\">\r\n              <input type=\"text\" readonly  [value]=\"workOrderAsset.assetId + ' - ' + workOrderAsset.name\" class=\"readonly form-control\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-6 mb-2 mb-sm-3\">\r\n          <div class=\"row d-flex align-items-center\">\r\n            <label class=\"col-4\">Location</label>\r\n            <div class=\"col-8  d-flex align-items-center\">\r\n              <input type=\"text\" class=\"form-control readonly location-input\"  [value]=\"workOrderAsset.location\" readonly/>\r\n              <button class=\"delete-btn\" (click)=\"handleDeleteItem(i)\"  [disabled]=\"!isEditable\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15.002\" height=\"19.003\" viewBox=\"0 0 14.002 18.003\" class=\"del-icon\">\r\n                    <g id=\"wrench\" transform=\"translate(0.001 0)\">\r\n                      <path id=\"Path_1563\" data-name=\"Path 1563\" d=\"M12.333,3.933,1.267,3.8c-.133.133-.4.133-.533.267A.8.8,0,0,0,.6,4.6L1.8,16.2c0,.4.267.533.667.533h8.267A.61.61,0,0,0,11.4,16.2L12.867,4.6a.8.8,0,0,0-.133-.533,1.343,1.343,0,0,0-.4-.134Zm-2,11.6h-7.2L2.067,5.267h9.467Z\" transform=\"translate(0.2 1.267)\"/>\r\n                      <path id=\"Path_1564\" data-name=\"Path 1564\" d=\"M13.333,3.2H10.667A3.739,3.739,0,0,0,6.933,0a3.607,3.607,0,0,0-3.6,3.2H.667A.63.63,0,0,0,0,3.867a.63.63,0,0,0,.667.667H13.333A.63.63,0,0,0,14,3.867a.63.63,0,0,0-.667-.667Zm-6.4-1.867A2.442,2.442,0,0,1,9.333,3.2H4.667A2.407,2.407,0,0,1,6.933,1.333Z\"/>\r\n                      <path id=\"Path_1565\" data-name=\"Path 1565\" d=\"M5.367,13.467a.63.63,0,0,0,.667-.667V6.667A.63.63,0,0,0,5.367,6a.63.63,0,0,0-.667.667v6.267C4.7,13.2,5.1,13.467,5.367,13.467Z\" transform=\"translate(1.567 2)\"/>\r\n                      <path id=\"Path_1566\" data-name=\"Path 1566\" d=\"M3.9,13.5a.714.714,0,0,0,.667-.667L4.033,6.567A.714.714,0,0,0,3.367,5.9a.845.845,0,0,0-.667.8l.533,6.267A.886.886,0,0,0,3.9,13.5Z\" transform=\"translate(0.9 1.967)\"/>\r\n                      <path id=\"Path_1567\" data-name=\"Path 1567\" d=\"M6.942,13.475a.63.63,0,0,0,.667-.667l.533-6.267c.133-.267-.133-.533-.533-.533-.4-.133-.667.133-.667.533l-.533,6.267c-.134.4.133.667.533.667Z\" transform=\"translate(2.125 1.991)\"/>\r\n                    </g>\r\n                  </svg>\r\n                </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-2 mb-sm-3\">\r\n        <button class=\"btn btn-link  p-0 add-asset\" [disabled]=\"!isEditable\" (click)=\"handlePickAssets()\">Add Asset</button>\r\n      </div>\r\n    </div>\r\n      <div class=\"row mb-sm-4 mb-2 service-details-text\">\r\n        <div class=\"col-sm-2 col-4\">\r\n          <label>Service Details</label>\r\n        </div>\r\n        <div class=\"col-sm-10 col-8\">\r\n          <textarea [readOnly]=\"!isEditable\" class=\"form-control\" formControlName=\"serviceDetails\" rows=\"8\" maxlength=\"4000\"></textarea>\r\n        </div>\r\n      </div>\r\n  </form>\r\n  <div class=\"core-info mt-4\">\r\n    <table >\r\n      <tbody>\r\n        <tr>\r\n          <div  *ngFor=\"let workOrderChecklist of extendedWorkOrder.workOrderChecklists\" >\r\n            <app-accordion\r\n              [titleDetails]=\"'Checklist  ' + workOrderChecklist .numberWithPrefix + ' - ' + workOrderChecklist .name\"\r\n            >\r\n            <div  *ngFor=\"let task of workOrderChecklist.task; let first = first, let last = last\">\r\n              <app-checklist-task-item [taskItem]=\"task\"  [firstItem]=\"first\"  class=\"addtask-expanded\" [isTaskEditable]=\"!isEditable\"\r\n              (taskSelected) = \"handleSelectedChecklistTask($event)\" [ngClass]=\"{'last-item': last}\">\r\n              </app-checklist-task-item>\r\n            </div>\r\n            </app-accordion>\r\n          </div>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div class=\"core-info mt-4\">\r\n    <div class=\"mb-2 mb-sm-3\">\r\n      <button class=\"btn btn-link  p-0 add-checklist\" >Add Checklist</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"core-info mt-4\">\r\n  <app-accordion\r\n      [titleDetails]=\"'Order Service History'\"\r\n    >\r\n    <div class=\"row pl-10\">\r\n      <div class=\"col-sm-12 service-history\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <td >User ID</td>\r\n              <td >Date</td>\r\n              <td >Details</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let workOrderServiceDetail of workOrderServiceDetails\">\r\n              <td >{{getUserName(workOrderServiceDetail.userId)}}</td>\r\n              <td >{{standardFormattedDate(workOrderServiceDetail.createdTimestampUtc, true)}}</td>\r\n              <td>\r\n                <span *ngIf=\"workOrderServiceDetail.serviceDetail.length > textMaxLength\">{{workOrderServiceDetail.serviceDetail.substring(0,textMaxLength-10)}}... <a (click) = \"handleViewMoreClick(workOrderServiceDetail)\" class=\"clickView\">View More</a></span>\r\n                <span *ngIf=\"workOrderServiceDetail.serviceDetail.length <= textMaxLength\">{{workOrderServiceDetail.serviceDetail}}</span>\r\n             </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </app-accordion>\r\n  <app-modal\r\n    *ngIf=\"detailsModalVisible\"\r\n    (modalShouldClose)=\"handleDetailsModalClose()\"\r\n    (contextmenu)=\"disableRightClick($event)\"\r\n    >\r\n      <header class=\"row\">\r\n        <div class=\"col-8\">\r\n         <strong>Service Details{{' (#'+ extendedWorkOrder.number  +')'}}</strong>\r\n        </div>\r\n        <div class=\"col-4 text-end\">\r\n         {{getUserName(selectedWorkOrderServiceDetails.userId)}}\r\n        </div>\r\n      </header>\r\n      <div class=\"col-12 modal-details mb-2\">\r\n        <div class=\"row\">\r\n          <div class=\"col float-start\">\r\n           {{standardFormattedDate(selectedWorkOrderServiceDetails.createdTimestampUtc, true)}}\r\n          </div>\r\n          <div class=\"col text-end\">\r\n            <span *ngIf=\"isShowEditIcon\" (click)=\"enableServiceTextarea = !enableServiceTextarea; isShowEditIcon = false\">\r\n          <svg id=\"edit-button-svgrepo-com\"  xmlns=\"http://www.w3.org/2000/svg\" width=\"15.583\" height=\"14.969\" viewBox=\"0 0 15.583 14.969\">\r\n            <g id=\"Group_3267\" data-name=\"Group 3267\">\r\n              <path id=\"Path_1568\" data-name=\"Path 1568\" d=\"M12.274,86.27a.384.384,0,0,0-.384.384v7.02a1.347,1.347,0,0,1-1.346,1.345H2.114A1.347,1.347,0,0,1,.769,93.674v-8.43A1.347,1.347,0,0,1,2.114,83.9h8.43a.384.384,0,1,0,0-.769H2.114A2.117,2.117,0,0,0,0,85.244v8.43a2.117,2.117,0,0,0,2.114,2.114h8.43a2.117,2.117,0,0,0,2.114-2.114v-7.02A.384.384,0,0,0,12.274,86.27Z\" transform=\"translate(0 -80.82)\" fill=\"#424244\"/>\r\n              <path id=\"Path_1569\" data-name=\"Path 1569\" d=\"M196.426,10.1a1.19,1.19,0,0,0-1.681,0l-6.585,6.585a.892.892,0,0,0-.134.17l-.912,2.049a.384.384,0,0,0,.508.508l2.049-.912a.9.9,0,0,0,.17-.134l6.585-6.585a1.188,1.188,0,0,0,0-1.681Zm-.544,1.137L189.3,17.823l0,0-1.07.476.476-1.07,0,0,6.585-6.585a.429.429,0,0,1,.593,0,.419.419,0,0,1,0,.593Z\" transform=\"translate(-181.191 -9.753)\" fill=\"#424244\"/>\r\n            </g>\r\n          </svg>\r\n        </span>\r\n          </div>\r\n        </div>\r\n        <textarea class=\"modal-details-textarea\" [class.modal-details-textarea-focus] = \"enableServiceTextarea\" [(ngModel)]=\"selectedWorkOrderServiceDetails.serviceDetail\" [readOnly]=\"!enableServiceTextarea\"  row=\"8\"\r\n        (input)=\"handleTextAreaInput()\" maxlength=\"4000\" >\r\n        </textarea>\r\n      </div>\r\n      <div class=\"modal-details-footer\">\r\n        <ng-container  *ngIf=\"enableServiceTextarea\">\r\n        <button [disabled]=\"isSubmitDisabled\"\r\n        class=\"btn btn-primary mt-4 handlesServicesSaveBtn\"\r\n        (click)=\"handleServiceSaveButton()\"\r\n      >\r\n      <span>Save</span>\r\n      </button>\r\n    </ng-container>\r\n      </div>\r\n\r\n\r\n  </app-modal>\r\n  </div>\r\n  <app-modal\r\n    *ngIf=\"addAssetsModalVisible\"\r\n    (modalShouldClose)=\"handleDetailsModalClose()\"\r\n    (contextmenu)=\"disableRightClick($event)\"\r\n    >\r\n      <app-pick-assets\r\n        (addedAssets)=\"handleAddedWorkOrderAssets($event)\"\r\n        [existingAssets]=\"this.extendedWorkOrder.workOrderAssets\"\r\n        >\r\n      </app-pick-assets>\r\n  </app-modal>\r\n  <footer>\r\n    <div *ngIf=\"form\" class=\"form-actions\" [class.visible]=\"!isUpdatingWorkOrder && showSaveButton\">\r\n      <button\r\n        class=\"btn btn-primary btn-block col-12\"\r\n        (click)=\"updateWorkOrder()\"\r\n      >\r\n      <span>Save all changes</span>\r\n      </button>\r\n    </div>\r\n  </footer>\r\n</article>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { debounceTime, filter, map } from 'rxjs/operators';\r\nimport {\r\n  AuthenticationService,\r\n  IExtendedWorkOrder,\r\n  ISkuStock,\r\n  ISpares,\r\n  IWorkOrderSpares,\r\n  PermissionGroup,\r\n  Role,\r\n  SkuService,\r\n  SparesGroup,\r\n  Toast,\r\n  ToastService,\r\n  UserProfile,\r\n  WorkOrdersPermissions,\r\n  WorkordersService,\r\n  WorkorderStatus\r\n} from 'src/app/services';\r\nimport { stringCamelize } from 'src/utils/stringUtils';\r\nimport { WorkOrderWizard } from '../work-order.wizard';\r\n\r\n@Component({\r\n  selector: 'app-pick-workorder-spares',\r\n  templateUrl: './pick-workorder-spares.component.html',\r\n  styleUrls: ['./pick-workorder-spares.component.scss']\r\n})\r\nexport class PickWorkOrderSparesComponent implements OnInit {\r\n  public wordOrderNumber: string;\r\n  public searchForm: FormGroup;\r\n  public searchSparesSubscription: Subscription;\r\n  public allSpareGroupOption = '';\r\n  public sparesGroupOptions: Array<any> = [];\r\n  public sparesGroups: Array<SparesGroup> = [];\r\n  public WorkOrderStatus = WorkorderStatus;\r\n  public isLoading: Boolean = true;\r\n  public workOrderSpares: IWorkOrderSpares;\r\n  public showSaveButton = false;\r\n  public isUpdatingSpares = false;\r\n  @ViewChild('searchInput')\r\n  public searchInputElement: ElementRef;\r\n  public isSparesSelected = false;\r\n  @ViewChildren('searchResult')\r\n  public searchResultElements: QueryList<ElementRef>;\r\n  public searchResultsVisible = false;\r\n  public searchResults: ISkuStock[] = [];\r\n  public isSearching = false;\r\n  public isEditable: boolean;\r\n  public extendedWorkOrder: IExtendedWorkOrder;\r\n  public isGettingUserRights = true;\r\n  public isQtyFormInvalid = false;\r\n  public workOrderStatus: string;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private skuService: SkuService,\r\n    private workOrderService: WorkordersService,\r\n    private toastService: ToastService,\r\n    private authenticationService: AuthenticationService,\r\n    private workOrderWizard: WorkOrderWizard\r\n  ) {\r\n    this.workOrderStatus = this.workOrderWizard.workOrder.status.toString();\r\n    this.wordOrderNumber = this.workOrderWizard.workOrder.number.toString();\r\n    this.viewWorkOrderForId();\r\n    this.getSpares(this.wordOrderNumber);\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.getSearchGroupOptions();\r\n  }\r\n\r\n  public viewWorkOrderForId() {\r\n    const workOrderNumber = this.workOrderWizard.workOrder.number.toString();\r\n    this.workOrderService\r\n      .viewWorkOrderForId(workOrderNumber)\r\n      .subscribe(extendedWorkOrder => {\r\n        this.extendedWorkOrder = extendedWorkOrder;\r\n        this.checkUserEditRights();\r\n      });\r\n  }\r\n  public searchSpares() {\r\n    this.searchSparesSubscription &&\r\n      !this.searchSparesSubscription.closed &&\r\n      this.searchSparesSubscription.unsubscribe();\r\n    const textValue = this.searchForm.get('text').value;\r\n    if (this.isSparesSelected === false) {\r\n      this.isSearching = true;\r\n      this.searchResultsVisible = true;\r\n      this.searchSparesSubscription = this.skuService\r\n        .getSkuStockForSpares(\r\n          this.searchForm.get('sparesGroup').value,\r\n          textValue\r\n        )\r\n        .subscribe((skus: ISkuStock[]) => {\r\n          this.searchResults = skus;\r\n          this.isSearching = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  public getSearchGroupOptions() {\r\n    this.skuService.getSparesGroups().subscribe((data: Array<SparesGroup>) => {\r\n      this.sparesGroups = data;\r\n      this.sparesGroups.map((sparesGroup: SparesGroup) => {\r\n        this.sparesGroupOptions.push({\r\n          label: stringCamelize(sparesGroup.name),\r\n          value: sparesGroup.groupId + '~' + sparesGroup.subGroupId\r\n        });\r\n      });\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  public handleDeleteSparesSku(isSkuDeleted: boolean, skuIndex: number) {\r\n    this.showSaveButton = true;\r\n    if (isSkuDeleted) {\r\n      this.workOrderSpares.spareSkus.splice(skuIndex, 1);\r\n    }\r\n  }\r\n\r\n  public getSpares(wordOrderId: string) {\r\n    this.workOrderService\r\n      .getWorkOrderSpares(wordOrderId)\r\n      .subscribe(workOrderSpares => {\r\n        const spareSkus: ISpares[] = [];\r\n        workOrderSpares.spareSkus.forEach(sparesSku => {\r\n          if (sparesSku) {\r\n            const inStock = sparesSku.sku.quantities.inStock;\r\n            const qty = sparesSku.quantity;\r\n\r\n            sparesSku.sku.quantities.inStock = inStock + qty;\r\n            spareSkus.push(sparesSku);\r\n          }\r\n        });\r\n\r\n        this.workOrderSpares = {\r\n          siteId: workOrderSpares.siteId,\r\n          workOrderNumber: workOrderSpares.workOrderNumber,\r\n          spareSkus: spareSkus\r\n        };\r\n      });\r\n  }\r\n\r\n  public handleSkuQtyChange(skuQty: number, skuIndex: number) {\r\n    this.workOrderSpares.spareSkus[skuIndex].quantity = skuQty;\r\n    this.workOrderSpares.spareSkus.forEach(spareSku => {\r\n      if (spareSku.quantity > spareSku.sku.quantities.inStock) {\r\n        this.showSaveButton = false;\r\n        return;\r\n      } else {\r\n        this.showSaveButton = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  public handleUpdateSpares() {\r\n    this.isUpdatingSpares = true;\r\n    this.workOrderService.updateWorkOrderSpares(this.workOrderSpares).subscribe(\r\n      workOrderSpares => {\r\n        this.workOrderSpares = workOrderSpares;\r\n        this.isUpdatingSpares = false;\r\n        this.showSaveButton = false;\r\n        this.toastService.showToast(\r\n          new Toast('Updated spares for this work order.')\r\n        );\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        this.toastService.showErrorToast('Unable to update spares.');\r\n        this.isUpdatingSpares = false;\r\n        this.showSaveButton = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  public clearSearchForm() {\r\n    this.searchForm.get('text').setValue('');\r\n    this.searchForm.get('spares').setValue(null);\r\n    this.searchResultsVisible = false;\r\n  }\r\n\r\n  public handleSearchKeyUp(event) {\r\n    this.isSparesSelected = false;\r\n    switch (event.key) {\r\n      case 'ArrowDown':\r\n        const resultButtons = this.searchResultElements.toArray();\r\n        resultButtons.length > 0 && resultButtons[0].nativeElement.focus();\r\n        break;\r\n      case 'Escape':\r\n        this.clearSearchForm();\r\n        break;\r\n    }\r\n  }\r\n\r\n  public sparesNameIsInSearchResults(searchText: string) {\r\n    let result = false;\r\n    for (const spares of this.searchResults) {\r\n      if (spares.id + ' - ' + spares.description === searchText) {\r\n        result = true;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public handleSearchBlur() {\r\n    setTimeout(() => {\r\n      const searchValue = this.searchForm.get('text').value;\r\n      const activeElement: HTMLElement = document.activeElement as HTMLElement;\r\n      if (\r\n        this.sparesNameIsInSearchResults(searchValue) ||\r\n        activeElement.dataset.sparesname\r\n      ) {\r\n        return;\r\n      }\r\n      this.clearSearchForm();\r\n    }, 0);\r\n  }\r\n\r\n  public handleSearchResultKeyUp(event) {\r\n    switch (event.key) {\r\n      case 'ArrowUp':\r\n        const firstResultButton = this.searchResultElements.toArray()[0]\r\n          .nativeElement;\r\n        if (event.target === firstResultButton) {\r\n          this.searchInputElement.nativeElement.focus();\r\n        } else {\r\n          event.target.previousSibling.focus();\r\n        }\r\n        break;\r\n      case 'ArrowDown':\r\n        event.target.nextSibling && event.target.nextSibling.focus();\r\n        break;\r\n      case 'Escape':\r\n        this.clearSearchForm();\r\n        break;\r\n    }\r\n  }\r\n\r\n  public handleSearchResultClick(spares: ISkuStock) {\r\n    if (\r\n      this.workOrderSpares.spareSkus.filter(spare => spare.sku.id === spares.id)\r\n        .length !== 0\r\n    ) {\r\n      this.toastService.showErrorToast(\r\n        `Item ${spares.id} Spare already selected`\r\n      );\r\n      this.clearSearchForm();\r\n      this.searchResultsVisible = false;\r\n      this.isSparesSelected = true;\r\n      return;\r\n    }\r\n\r\n    if (spares.quantities.inStock === 0) {\r\n      this.toastService.showErrorToast(`Item ${spares.id} does not have stock`);\r\n      this.clearSearchForm();\r\n      this.searchResultsVisible = false;\r\n      this.isSparesSelected = true;\r\n      return;\r\n    }\r\n\r\n    this.workOrderSpares.spareSkus.push({\r\n      sku: spares,\r\n      quantity: spares.quantities.inStock > 0 ? 1 : 0\r\n    });\r\n    this.clearSearchForm();\r\n    this.searchResultsVisible = false;\r\n    this.isSparesSelected = true;\r\n    this.showSaveButton = true;\r\n  }\r\n\r\n  private checkUserEditRights() {\r\n    this.isGettingUserRights = true;\r\n    const userRole$: Observable<UserProfile> = this.authenticationService.currentUserProfile$.pipe(\r\n      map(userProfile => userProfile)\r\n    );\r\n\r\n    userRole$.subscribe(userProfile => {\r\n      this.authenticationService\r\n        .currentUserHasPermission({\r\n          [PermissionGroup.WorkOrders]: [WorkOrdersPermissions.CanEditWorkOrder]\r\n        })\r\n        .subscribe(hasPermission => {\r\n          if (userProfile.userRole.groupName !== Role.Technician) {\r\n            this.isEditable =\r\n              hasPermission &&\r\n              Number(this.workOrderStatus) !== WorkorderStatus.Closed;\r\n          } else {\r\n            this.isEditable =\r\n              hasPermission &&\r\n              Number(this.workOrderStatus) !== WorkorderStatus.Closed &&\r\n              Number(this.workOrderStatus) !== WorkorderStatus.Complete;\r\n          }\r\n          this.isGettingUserRights = false;\r\n        });\r\n    });\r\n\r\n    this.searchForm = this.formBuilder.group({\r\n      text: new FormControl({ value: '', disabled: !this.isEditable }),\r\n      spares: null,\r\n      sparesGroup: new FormControl({\r\n        value: this.allSpareGroupOption,\r\n        disabled: !this.isEditable\r\n      })\r\n    });\r\n    this.searchForm\r\n      .get('text')\r\n      .valueChanges.pipe(\r\n        debounceTime(700),\r\n        filter(textValue => textValue.length >= 3),\r\n        filter(textValue => !this.sparesNameIsInSearchResults(textValue))\r\n      )\r\n      .subscribe(() => this.searchSpares());\r\n  }\r\n\r\n  public handleInValidQty(isQtyFormInvalid: boolean) {\r\n    this.isQtyFormInvalid = isQtyFormInvalid;\r\n  }\r\n}\r\n","<app-section-header\r\n  [customCurrentPageTitle]=\"'Pick Spares'\"\r\n></app-section-header>\r\n<h1>\r\n  Picking spares for WO{{ this.wordOrderNumber }}\r\n  <span\r\n    *ngIf=\"\r\n      workOrderSpares &&\r\n      workOrderSpares.spareSkus &&\r\n      workOrderSpares.spareSkus.length > 0\r\n    \"\r\n    >({{ workOrderSpares.spareSkus.length }} item<span\r\n      *ngIf=\"workOrderSpares.spareSkus.length > 1\"\r\n      >s</span\r\n    >)</span\r\n  >\r\n</h1>\r\n<div class=\"spinner\" *ngIf=\"isLoading || isGettingUserRights\"></div>\r\n<div *ngIf=\"!isLoading && !isGettingUserRights\">\r\n  <form [formGroup]=\"searchForm\" class=\"search-form\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n          <div class=\"find-as-you-type input-with-search-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"text\"\r\n              class=\"form-control form-control--search-prefix\"\r\n              placeholder=\"Search spares by id or name\"\r\n              (blur)=\"handleSearchBlur()\"\r\n              (keyup)=\"handleSearchKeyUp($event)\"\r\n            />\r\n            <input formControlName=\"spares\" type=\"hidden\" />\r\n            <div *ngIf=\"searchResultsVisible\">\r\n              <div *ngIf=\"!isSearching\" class=\"find-as-you-type__results\">\r\n                <button\r\n                  class=\"select-spares-btn\"\r\n                  #searchResult\r\n                  *ngFor=\"let spares of searchResults\"\r\n                  (keyup)=\"handleSearchResultKeyUp($event)\"\r\n                  (click)=\"handleSearchResultClick(spares)\"\r\n                  [attr.data-sparesname]=\"spares.sparesGroupName\"\r\n                >\r\n                  {{ spares.id }} - {{ spares.description }}\r\n                </button>\r\n              </div>\r\n\r\n              <div\r\n                *ngIf=\"searchResults.length === 0 && !isSearching\"\r\n                class=\"find-as-you-type__no-results mt-2\"\r\n              >\r\n                No spares found\r\n              </div>\r\n              <div\r\n                *ngIf=\"isSearching\"\r\n                class=\"find-as-you-type__spinner-container\"\r\n              >\r\n                <div class=\"spinner\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <select class=\"custom-select\" formControlName=\"sparesGroup\">\r\n          <option [value]=\"allSpareGroupOption\" default>All Spare Group</option>\r\n          <option\r\n            *ngFor=\"let sparesGroupOption of sparesGroupOptions\"\r\n            [value]=\"sparesGroupOption.value\"\r\n          >\r\n            {{ sparesGroupOption.label }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      *ngIf=\"\r\n        !workOrderSpares ||\r\n        !workOrderSpares.spareSkus ||\r\n        workOrderSpares.spareSkus.length === 0\r\n      \"\r\n      class=\"text-center mt-5\"\r\n    >\r\n      No spares added to this work order.\r\n    </div>\r\n    <div\r\n      *ngIf=\"\r\n        workOrderSpares &&\r\n        workOrderSpares.spareSkus &&\r\n        workOrderSpares.spareSkus.length > 0\r\n      \"\r\n    >\r\n      <table>\r\n        <thead>\r\n          <th>Name</th>\r\n          <th>UOM</th>\r\n          <th>Quantity</th>\r\n          <th></th>\r\n        </thead>\r\n        <tbody>\r\n          <app-spares-skus\r\n            *ngFor=\"\r\n              let sparesSku of this.workOrderSpares.spareSkus;\r\n              let skuIndex = index\r\n            \"\r\n            [sparesSku]=\"sparesSku\"\r\n            (isSkuDeleted)=\"handleDeleteSparesSku($event, skuIndex)\"\r\n            (handlesQtyChange)=\"handleSkuQtyChange($event, skuIndex)\"\r\n            [isEditable]=\"isEditable\"\r\n            (isQtyInValid)=\"handleInValidQty($event)\"\r\n          ></app-spares-skus>\r\n          <tr class=\"non-sku-row\">\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </form>\r\n</div>\r\n<article>\r\n  <footer *ngIf=\"showSaveButton\">\r\n    <div class=\"form-actions\" [class.visible]=\"showSaveButton\">\r\n      <button\r\n        class=\"btn btn-primary btn-block col-12\"\r\n        (click)=\"handleUpdateSpares()\"\r\n        [disabled]=\"isQtyFormInvalid\"\r\n      >\r\n        <span *ngIf=\"!isUpdatingSpares\">Save picked list</span>\r\n        <div *ngIf=\"isUpdatingSpares\" class=\"spinner light\"></div>\r\n      </button>\r\n    </div>\r\n  </footer>\r\n</article>\r\n","import { Injectable } from '@angular/core';\r\nimport { Workorder } from '../services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WorkOrderWizard {\r\n  public workOrder: Workorder;\r\n\r\n  constructor() {}\r\n\r\n  public reset() {\r\n    this.workOrder = undefined;\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport {\r\n  standardFormattedDate,\r\n  standardFormattedDateNoYear\r\n} from 'src/utils/dateUtils';\r\nimport { WorkordersService } from '../services/workorder/workorder.service';\r\nimport {\r\n  Workorder,\r\n  WorkorderStatus\r\n} from '../services/workorder/workorder.types';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  AuthenticationService,\r\n  PermissionGroup,\r\n  ToastService,\r\n  WorkOrdersPermissions\r\n} from '../services';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { SearchFilterService } from '../services/search-filter/search-filter.service';\r\nimport { WorkOrderWizard } from './work-order.wizard';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-work-orders',\r\n  templateUrl: './work-orders.component.html',\r\n  styleUrls: ['./work-orders.component.scss']\r\n})\r\nexport class WorkOrdersComponent implements OnInit, OnDestroy {\r\n  public searchForm: FormGroup;\r\n  public isLoadingWorkorders: boolean;\r\n  public offset = 0;\r\n  public take = 10;\r\n  public shouldGetNextWorkorders = true;\r\n  public workorders: Workorder[] = [];\r\n  public standardFormattedDate = standardFormattedDate;\r\n  public standardFormattedDateNoYear = standardFormattedDateNoYear;\r\n  public WorkorderStatus = WorkorderStatus;\r\n  public canCreateWorkOrder: boolean;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private workorderService: WorkordersService,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService,\r\n    private searchFilterService: SearchFilterService,\r\n    private workOrderWizard: WorkOrderWizard,\r\n    private toastService: ToastService\r\n  ) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.setPermissionBooleans();\r\n    this.searchForm = this.formBuilder.group({\r\n      text: this.searchFilterService.searchWOTextValue\r\n    });\r\n    this.initiateFreshSearchSettings();\r\n    this.formChangeEvent();\r\n    this.loadNextWorkorders();\r\n  }\r\n\r\n  public formChangeEvent() {\r\n    this.searchForm\r\n      .get('text')\r\n      .valueChanges.pipe(\r\n        debounceTime(700),\r\n        filter(textValue => textValue.length >= 3 || textValue.length === 0)\r\n      )\r\n      .subscribe(() => {\r\n        this.submitSearch();\r\n      });\r\n  }\r\n\r\n  public initiateFreshSearchSettings(): void {\r\n    this.workorders = [];\r\n    this.workOrderWizard.reset();\r\n    this.offset = 0;\r\n    this.shouldGetNextWorkorders = true;\r\n  }\r\n\r\n  public loadNextWorkorders(): void {\r\n    this.isLoadingWorkorders = true;\r\n    this.workorderService\r\n      .listWorkorders({\r\n        offset: this.offset,\r\n        take: this.take,\r\n        text: this.searchForm.value.text\r\n      })\r\n      .subscribe((workorderList: Workorder[]) => {\r\n        this.searchFilterService.searchWOTextValueCache = this.searchForm.value.text;\r\n        this.workorders.push(...workorderList);\r\n        this.offset += this.take;\r\n        if (workorderList.length < this.take) {\r\n          this.shouldGetNextWorkorders = false;\r\n        }\r\n        this.isLoadingWorkorders = false;\r\n      });\r\n  }\r\n\r\n  public submitSearch() {\r\n    this.initiateFreshSearchSettings();\r\n    this.loadNextWorkorders();\r\n  }\r\n\r\n  public handleSelectedWorkorderClick(\r\n    workOrderNumber: string,\r\n    workOrder: Workorder\r\n  ) {\r\n    this.workOrderWizard.workOrder = workOrder;\r\n    if (this.workOrderWizard.workOrder) {\r\n      this.router.navigate(['work-orders', 'WO' + workOrderNumber]);\r\n    }\r\n  }\r\n\r\n  public createWorkOrder() {\r\n    this.router.navigate(['work-orders', 'create-work-order']);\r\n  }\r\n\r\n  private setPermissionBooleans() {\r\n    this.authenticationService\r\n      .currentUserHasPermission({\r\n        [PermissionGroup.WorkOrders]: [WorkOrdersPermissions.CanCreateWorkOrder]\r\n      })\r\n      .subscribe(hasPermission => (this.canCreateWorkOrder = hasPermission));\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.searchFilterService.initiateWOSearchFilter();\r\n  }\r\n\r\n  public getUserName(userDetails: string) {\r\n    if (userDetails && userDetails.includes('-')) {\r\n      return userDetails.split('-')[1];\r\n    } else {\r\n      return userDetails;\r\n    }\r\n  }\r\n\r\n  public getWorkOrderCSV() {\r\n    this.workorderService.getWorkorderCSV().subscribe(\r\n      workOrder => {\r\n        const MIME_TYPE = 'text/csv';\r\n        const blob = new Blob([workOrder], { type: MIME_TYPE });\r\n        const date = new Date(Date.now());\r\n        const curDate = date.toLocaleString('en-IN', {\r\n          year: 'numeric',\r\n          month: 'numeric',\r\n          day: 'numeric'\r\n        });\r\n        const a = window.document.createElement('a');\r\n        const fileName = 'workorder';\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.download = `${fileName}-${curDate}.csv`;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        this.toastService.showErrorToast(\r\n          'Unable to download the work orders CSV file.'\r\n        );\r\n        return;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<app-section-header [customCurrentPageTitle]=\"'Work Orders'\"></app-section-header>\r\n<h1>Work Orders</h1>\r\n  <form [formGroup]=\"searchForm\" class=\"search-filter-form \">\r\n        <div class=\"input-with-search-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"text\"\r\n            class=\"form-control form-control--search-prefix\"\r\n            placeholder=\"Search by work order id, title or asset name\"\r\n          />\r\n        </div>\r\n      <div class=\"workorder-source-filter\">\r\n        <button [disabled]=\"!canCreateWorkOrder\"  class=\"btn\" (click)=\"createWorkOrder()\" >\r\n          <span>Create Work Order</span>\r\n        </button>\r\n      </div>\r\n       <div>\r\n          <button class=\"btn-download-csv\"  type=\"button\" (click)=\"getWorkOrderCSV()\">\r\n            <svg viewBox=\"0 0 15.375 19.188\"><defs/><g id=\"Group_1558\" data-name=\"Group 1558\" transform=\"translate(-299.063 -288.813)\"><g id=\"Path_783\" class=\"cls-1\" data-name=\"Path 783\"><path d=\"M940.063 237.334v19.188h15.375v-14.313l-4.875-4.875h-10.5z\" class=\"cls-3\" transform=\"translate(-641 51.479)\"/><path d=\"M954.438 255.521v-12.898l-4.29-4.289h-9.085v17.187h13.375m1 1h-15.375v-19.187h10.5l4.875 4.875v14.312z\" class=\"cls-4\" transform=\"translate(-641 51.479)\"/></g><path id=\"Path_784\" d=\"M954.918 242.288h-5.043v-5.079\" class=\"cls-2\" data-name=\"Path 784\" transform=\"translate(-640.959 51.604)\"/><g id=\"Path_785\" class=\"cls-1\" data-name=\"Path 785\"><path d=\"M943.5 245.334h8.563v7.25H943.5z\" class=\"cls-3\" transform=\"translate(-641 51.479)\"/><path d=\"M951.063 251.584v-5.25H944.5v5.25h6.563m1 1H943.5v-7.25h8.563v7.25z\" class=\"cls-4\" transform=\"translate(-641 51.479)\"/></g><path id=\"Path_786\" d=\"M946.5 245.084v7.25\" class=\"cls-2\" data-name=\"Path 786\" transform=\"translate(-641.064 51.729)\"/><path id=\"Path_787\" d=\"M952.063 247.834H944\" class=\"cls-2\" data-name=\"Path 787\" transform=\"translate(-641 51.479)\"/><path id=\"Path_788\" d=\"M951.938 250.4h-8.562\" class=\"cls-2\" data-name=\"Path 788\" transform=\"translate(-640.875 51.479)\"/></g>\r\n            </svg>\r\n            <h2>CSV</h2>\r\n          </button>\r\n        </div>\r\n  </form>\r\n<ul class=\"workorder-list\">\r\n  <li>\r\n      <div>\r\n        <span>id</span>\r\n      </div>\r\n      <div>\r\n       <span>due</span>\r\n      </div>\r\n      <div>\r\n        <span>title</span>\r\n       </div>\r\n      <div>\r\n        <span>status</span>\r\n      </div>\r\n      <div>\r\n        <span>assigned to</span>\r\n      </div>\r\n\r\n  </li>\r\n  <li *ngFor=\"let workorder of workorders; let i = index\"   class=\"status-{{workorder.status ? WorkorderStatus[workorder.status] : 'Open'}}\"\r\n      (click) = \"handleSelectedWorkorderClick(workorder.number, workorder)\"\r\n  >\r\n    <div>\r\n      <span>{{workorder.number}}</span>\r\n    </div>\r\n    <div>\r\n      <span class=\"desktop-view\">{{standardFormattedDate(workorder.dueDate,true)}}</span>\r\n      <span class=\"mobile-view\">{{standardFormattedDateNoYear(workorder.dueDate,true)}}</span>\r\n    </div>\r\n    <div>\r\n      <span>{{workorder.title}}</span>\r\n    </div>\r\n    <div>\r\n      <span>{{WorkorderStatus[workorder.status]}}</span>\r\n    </div>\r\n    <div>\r\n      <span>{{getUserName(workorder.assignedToUser)}}</span>\r\n    </div>\r\n\r\n    <div class=\"row-toggle\">\r\n      <div>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 8.797 5.194\">\r\n          <path d=\"M8,0l.8.8-4.4,4.4Q2.2,3,0,.8L.8,0C.81-.014,4.394,3.625,4.394,3.625S8.006,0,8,0Z\" />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  </li>\r\n</ul>\r\n\r\n<div *ngIf=\"workorders.length === 0 && !isLoadingWorkorders\">\r\n  No workorders found\r\n</div>\r\n\r\n<div *ngIf=\"shouldGetNextWorkorders && !isLoadingWorkorders\" class=\"text-center\">\r\n  <button class=\"btn btn-link\" (click)=\"loadNextWorkorders()\">Load more</button>\r\n</div>\r\n\r\n<div *ngIf=\"isLoadingWorkorders\">\r\n  <div class=\"spinner\"></div>\r\n</div>\r\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { ISpares } from 'src/app/services';\r\n\r\n@Component({\r\n  selector: 'app-spares-skus',\r\n  templateUrl: './spares-skus.component.html',\r\n  styleUrls: ['./spares-skus.component.scss']\r\n})\r\nexport class SparesSkusComponent implements OnInit {\r\n  @Input() public sparesSku: ISpares;\r\n  @Input() public isEditable: boolean;\r\n  public qtyForm: FormGroup;\r\n  @Output() public isSkuDeleted = new EventEmitter<boolean>();\r\n  @Output() public handlesQtyChange = new EventEmitter<number>();\r\n  @Output() public isQtyInValid = new EventEmitter<boolean>();\r\n\r\n  constructor(private formBuilder: FormBuilder) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.qtyForm = this.formBuilder.group({\r\n      qty: [\r\n        this.sparesSku.quantity,\r\n        [\r\n          Validators.min(1),\r\n          Validators.max(this.sparesSku.sku.quantities.inStock),\r\n          Validators.required\r\n        ]\r\n      ]\r\n    });\r\n\r\n    this.qtyForm\r\n      .get('qty')\r\n      .valueChanges.pipe(\r\n        debounceTime(700),\r\n        filter(textValue => textValue <= this.sparesSku.sku.quantities.inStock)\r\n      )\r\n      .subscribe((skuQty: number) => {\r\n        this.handlesQtyChange.emit(skuQty);\r\n        this.isQtyInValid.emit(\r\n          this.qtyForm.value.qty > this.sparesSku.sku.quantities.inStock\r\n        );\r\n      });\r\n  }\r\n\r\n  public handleQtyClipboard(event: ClipboardEvent) {\r\n    event.preventDefault();\r\n    return;\r\n  }\r\n\r\n  public disableRightClick(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  public handleQtyInputKeyUp(event: KeyboardEvent) {\r\n    this.isQtyInValid.emit(\r\n      this.qtyForm.get('qty').value > this.sparesSku.sku.quantities.inStock\r\n    );\r\n    if (\r\n      event.key === 'Enter' &&\r\n      this.qtyForm.value.qty > 0 &&\r\n      this.qtyForm.value.qty.toString().length > 0 &&\r\n      this.qtyForm.get('qty').value > this.sparesSku.sku.quantities.inStock\r\n    ) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  public handleQtyInputKeyDown(event) {\r\n    const qtyStringExceedsMaxLength =\r\n      this.qtyForm.value.qty.toString().length >= 4;\r\n    if (\r\n      this.qtyForm.valid &&\r\n      this.qtyForm.get('qty').value > 0 &&\r\n      this.qtyForm.get('qty').value > this.sparesSku.sku.quantities.inStock &&\r\n      event.key === 'Enter'\r\n    ) {\r\n      return;\r\n    }\r\n    if (event.key === 'Backspace' || event.key === 'Delete') {\r\n      return;\r\n    }\r\n    if (qtyStringExceedsMaxLength || isNaN(event.key) || event.keyCode === 32) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    const currentQty: number = this.qtyForm.get('qty').value;\r\n    this.handlesQtyChange.emit(currentQty);\r\n\r\n    this.isQtyInValid.emit(\r\n      this.qtyForm.get('qty').value > this.sparesSku.sku.quantities.inStock\r\n    );\r\n  }\r\n\r\n  public handleDeleteItem() {\r\n    this.isSkuDeleted.emit(true);\r\n  }\r\n\r\n  public handlesDecreaseQty() {\r\n    let currentQty: number = this.qtyForm.get('qty').value;\r\n    currentQty -= 1;\r\n    if (currentQty <= 0) {\r\n      return;\r\n    }\r\n    this.qtyForm.setValue({ qty: currentQty });\r\n\r\n    this.handlesQtyChange.emit(currentQty);\r\n\r\n    this.isQtyInValid.emit(\r\n      this.qtyForm.get('qty').value > this.sparesSku.sku.quantities.inStock\r\n    );\r\n  }\r\n\r\n  public handlesIncreaseQty() {\r\n    let currentQty: number = Number(this.qtyForm.get('qty').value);\r\n    currentQty += 1;\r\n    if (currentQty > this.sparesSku.sku.quantities.inStock) {\r\n      return;\r\n    }\r\n    this.qtyForm.setValue({ qty: currentQty });\r\n\r\n    this.handlesQtyChange.emit(currentQty);\r\n\r\n    this.isQtyInValid.emit(\r\n      this.qtyForm.get('qty').value > this.sparesSku.sku.quantities.inStock\r\n    );\r\n  }\r\n}\r\n","  <td class=\"spare-name-cell\">\r\n    <span><strong>{{sparesSku.sku.sparesGroupName}}</strong><br/></span>\r\n    <span><strong>ID </strong>{{sparesSku.sku.id}}<br/>\r\n      {{sparesSku.sku.description}}\r\n      </span>\r\n  </td>\r\n  <td class=\"sku-uom-cell mobile-only\">\r\n    <span>{{sparesSku.sku.uom}}</span>\r\n  </td>\r\n\r\n  <td class=\"sku-qty-cell\">\r\n    <form class=\"spares-row\" [formGroup]=\"qtyForm\">\r\n      <button [disabled]=\"!this.isEditable \"\r\n            (click)=\"handlesDecreaseQty()\" class=\"btn-decrease\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"20\"><g data-name=\"Group 3136\" transform=\"translate(-556 -289.5)\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#777\" data-name=\"Ellipse 284\" transform=\"translate(556 292)\"/><text fill=\"#fff\" data-name=\"-\" font-family=\"Kohinoor-Book, Kohinoor\" font-size=\"15\" transform=\"translate(561.5 304.5)\"><tspan x=\"0\" y=\"0\">-</tspan></text></g></svg>\r\n      </button>\r\n\r\n      <input formControlName=\"qty\" type=\"text\" (paste)=\"handleQtyClipboard($event)\"\r\n      (contextmenu)=\"disableRightClick($event)\" (keydown)=\"handleQtyInputKeyDown($event)\" [readOnly]=\"!this.isEditable\"\r\n      (keyup)=\"handleQtyInputKeyUp($event)\" pattern=\"[0-9]*\" inputmode=\"numeric\" ng-pattern=\"[0-9]*\"\r\n      class=\"form-control qty-text-input\" maxlength=\"4\" />\r\n\r\n        <div class=\"alert alert-danger arrow-alert\" *ngIf=\"qtyForm.value.qty > sparesSku.sku.quantities.inStock && qtyForm.dirty && qtyForm.value !== ''\">\r\n          <span>Quantity is greater than instock quantity</span>\r\n        </div>\r\n\r\n      <button [disabled]=\"!this.isEditable\" class=\"btn-increase\"  (click)=\"handlesIncreaseQty()\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"20\"><g data-name=\"Group 3138\" transform=\"translate(-946 -724.2)\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#777\" data-name=\"Ellipse 285\" transform=\"translate(946 726)\"/><text fill=\"#fff\" data-name=\"+\" font-family=\"Kohinoor-Book, Kohinoor\" font-size=\"15\" transform=\"translate(950 739.2)\"><tspan x=\"0\" y=\"0\">+</tspan></text></g></svg>\r\n      </button>\r\n\r\n    </form>\r\n  </td>\r\n  <td class=\"delete-row-cell\" >\r\n    <button (click)=\"handleDeleteItem()\" class=\"delete-btn\" [disabled]=\"!this.isEditable\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14 18\">\r\n        <defs/>\r\n        <path d=\"M12.333 3.933L1.267 3.8c-.133.133-.4.133-.533.267A.8.8 0 0 0 .6 4.6l1.2 11.6c0 .4.267.533.667.533h8.267a.61.61 0 0 0 .666-.533l1.467-11.6a.8.8 0 0 0-.133-.533 1.343 1.343 0 0 0-.401-.134zm-2 11.6h-7.2L2.067 5.267h9.467z\"\r\n          class=\"cls-1\" transform=\"translate(.2 1.267)\" />\r\n        <path d=\"M13.333 3.2h-2.666A3.739 3.739 0 0 0 6.933 0a3.607 3.607 0 0 0-3.6 3.2H.667A.63.63 0 0 0 0 3.867a.63.63 0 0 0 .667.667h12.666A.63.63 0 0 0 14 3.867a.63.63 0 0 0-.667-.667zm-6.4-1.867a2.442 2.442 0 0 1 2.4 1.867H4.667a2.407 2.407 0 0 1 2.266-1.867z\"\r\n          class=\"cls-1\" />\r\n        <path d=\"M5.367 13.467a.63.63 0 0 0 .667-.667V6.667A.63.63 0 0 0 5.367 6a.63.63 0 0 0-.667.667v6.267c0 .266.4.533.667.533z\"\r\n          class=\"cls-1\" transform=\"translate(1.567 2)\" />\r\n        <path d=\"M3.9 13.5a.714.714 0 0 0 .667-.667l-.534-6.266a.714.714 0 0 0-.666-.667.845.845 0 0 0-.667.8l.533 6.267a.886.886 0 0 0 .667.533z\"\r\n          class=\"cls-1\" transform=\"translate(.9 1.967)\" />\r\n        <path d=\"M6.942 13.475a.63.63 0 0 0 .667-.667l.533-6.267c.133-.267-.133-.533-.533-.533-.4-.133-.667.133-.667.533l-.533 6.267c-.134.401.133.667.533.667z\"\r\n          class=\"cls-1\" transform=\"translate(2.125 1.991)\" />\r\n      </svg>\r\n    </button>\r\n  </td>\r\n","export function stringCamelize(str: string) {\r\n  str = str.toLocaleLowerCase();\r\n  return str\r\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word) {\r\n      return word.toUpperCase();\r\n    })\r\n    .replace(/\\s+/g, ' ');\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { WorkOrdersComponent } from './work-orders.component';\r\nimport { ViewWorkorderComponent } from './view-workorder/view-workorder.component';\r\nimport { PickWorkOrderSparesComponent } from './pick-workorder-spares/pick-workorder-spares.component';\r\nimport { CreateWorkOrderComponent } from './create-work-order/create-work-order.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: WorkOrdersComponent\r\n  },\r\n  {\r\n    path: 'create-work-order',\r\n    component: CreateWorkOrderComponent\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: ViewWorkorderComponent\r\n  },\r\n  {\r\n    path: ':id/PickSpares',\r\n    component: PickWorkOrderSparesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class WorkOrdersRoutingModule {}\r\n"]}