{"version":3,"sources":["webpack:///src/app/check-lists/check-lists-routing.module.ts","webpack:///src/app/check-lists/view-check-lists/view-check-list.component.ts","webpack:///src/app/check-lists/view-check-lists/view-check-list.component.html","webpack:///src/app/check-lists/create-check-list/create-check-list.component.ts","webpack:///src/app/check-lists/create-check-list/create-check-list.component.html","webpack:///src/utils/enumUtils.ts","webpack:///src/app/check-lists/check-lists.wizard.ts","webpack:///src/app/check-lists/check-lists.module.ts","webpack:///src/app/check-lists/check-lists.component.ts","webpack:///src/app/check-lists/check-lists.component.html"],"names":["routes","path","component","CheckListsRoutingModule","forChild","ViewCheckListsComponent","formBuilder","checkListsService","router","checkListsWizard","authenticationService","toastService","isLoading","isGettingUserRights","isEditable","checklistStatus","checkListStatusValues","isUpdatingCheckList","submitted","showSaveButton","checkLists","checkListNumber","number","navigate","viewCheckListForId","setPermissionBooleans","bulidCheckListDetailForm","checkList","formViewCheckList","group","name","value","disabled","compose","required","status","valueChanges","subscribe","setTimeout","updateFormChanges","get","toString","parseInt","markAsDirty","currentUserHasPermission","CheckList","CanEditCheckList","hasPermission","isOnInit","checkListDetail","createForm","markAsPristine","hasNoCheckListTask","task","filter","x","description","isDeleted","length","valid","updateCheckListDetailForId","data","showToast","numberWithPrefix","errorResponse","showErrorToast","every","event","target","addedTaskList","sequenceNumber","push","checkListIndex","checklistValue","filteredValue","replace","preventDefault","setValue","CreateCheckListComponent","submitAttempted","tasks","createCheckListForm","buildCreateCheckListForm","formCreateCheckList","maxLength","entries","index","forEach","newTask","createCheckList","canUserEditCheckList","find","itemTask","enumString","enumeration","enumProperty","enumName","console","warn","JSON","stringify","substr","slice","enumValues","arr","isNaN","Number","enumKeys","Object","keys","enumKeyValue","enumValue","CheckListsWizard","undefined","CheckListsModule","CheckListsComponent","searchFilterService","CheckListStatus","canCreateCheckList","shouldGetNextCheckList","offset","take","searchForm","text","searchCLTextValue","checkListFilterCache","searchCLFilterValue","searchCLFilterValueCache","pipe","textValue","initiateFreshSearchSettings","getCheckList","searchCLTextValueCache","controls","clearCLFilter","isSearching","getCheckListsList","searchText","includeObsolete","CanCreateCheckList","handleFilterClick"],"mappings":"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","file":"check-lists-check-lists-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CheckListsComponent } from './check-lists.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CreateCheckListComponent } from './create-check-list/create-check-list.component';\r\nimport { ViewCheckListsComponent } from './view-check-lists/view-check-list.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CheckListsComponent\r\n  },\r\n  {\r\n    path: 'create-check-list',\r\n    component: CreateCheckListComponent\r\n  },\r\n  {\r\n    path: 'view-check-list',\r\n    component: ViewCheckListsComponent\r\n  },\r\n  {\r\n    path: 'edit-check-list',\r\n    component: ViewCheckListsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CheckListsRoutingModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CheckListsWizard } from '../check-lists.wizard';\r\n\r\nimport {\r\n  AuthenticationService,\r\n  CheckListStatus,\r\n  CheckListPermissions,\r\n  PermissionGroup,\r\n  CheckListsService,\r\n  CheckList,\r\n  Toast,\r\n  ToastService,\r\n  ITask\r\n} from 'src/app/services';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators\r\n} from '@angular/forms';\r\nimport { enumValues } from 'src/utils/enumUtils';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-view-check-lists',\r\n  templateUrl: './view-check-list.component.html',\r\n  styleUrls: ['./view-check-list.component.scss']\r\n})\r\nexport class ViewCheckListsComponent implements OnInit {\r\n  public isLoading = true;\r\n  public isGettingUserRights = false;\r\n  public isEditable = false;\r\n  public checkListId: string;\r\n  public checkListNumber: number;\r\n  public checkList: CheckList;\r\n  public formViewCheckList: FormGroup;\r\n  public checklistStatus = CheckListStatus;\r\n  public checkListStatusValues: number[] = enumValues(this.checklistStatus);\r\n  public isUpdatingCheckList = false;\r\n  public submitted = false;\r\n  public showSaveButton = false;\r\n  public addedTaskList: ITask;\r\n  public hasNoCheckListTask: Boolean;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private checkListsService: CheckListsService,\r\n    private router: Router,\r\n    private checkListsWizard: CheckListsWizard,\r\n    private authenticationService: AuthenticationService,\r\n    private toastService: ToastService\r\n  ) {\r\n    if (this.checkListsWizard.checkLists) {\r\n      this.checkListNumber = this.checkListsWizard.checkLists.number;\r\n    } else {\r\n      this.router.navigate(['check-list']);\r\n    }\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.viewCheckListForId();\r\n    this.setPermissionBooleans();\r\n  }\r\n\r\n  public createForm() {\r\n    const bulidCheckListDetailForm = checkList => {\r\n      this.formViewCheckList = this.formBuilder.group({\r\n        name: new FormControl(\r\n          {\r\n            value: checkList.name,\r\n            disabled: !this.isEditable\r\n          },\r\n          Validators.compose([Validators.required])\r\n        ),\r\n        status: new FormControl(\r\n          {\r\n            value: checkList.status,\r\n            disabled: !this.isEditable\r\n          },\r\n          Validators.compose([Validators.required])\r\n        )\r\n      });\r\n    };\r\n    bulidCheckListDetailForm(this.checkList);\r\n    this.isLoading = false;\r\n    this.formViewCheckList.valueChanges.subscribe(() => {\r\n      setTimeout(() => {\r\n        this.updateFormChanges();\r\n      }, 1000);\r\n    });\r\n  }\r\n\r\n  public updateFormChanges() {\r\n    this.checkList.name = this.formViewCheckList.get('name').value.toString()\r\n      ? this.formViewCheckList.get('name').value.toString()\r\n      : '';\r\n    this.checkList.status = parseInt(\r\n      this.formViewCheckList.get('status').value\r\n    );\r\n    this.showSaveButton = true;\r\n    this.formViewCheckList.markAsDirty();\r\n  }\r\n\r\n  private setPermissionBooleans() {\r\n    this.isGettingUserRights = true;\r\n    this.authenticationService\r\n      .currentUserHasPermission({\r\n        [PermissionGroup.CheckList]: [CheckListPermissions.CanEditCheckList]\r\n      })\r\n      .subscribe(hasPermission => {\r\n        this.isEditable = hasPermission;\r\n        this.isGettingUserRights = false;\r\n      });\r\n  }\r\n\r\n  public viewCheckListForId(isOnInit: boolean = true) {\r\n    this.isLoading = true;\r\n    this.checkListsService\r\n      .viewCheckListForId(this.checkListNumber)\r\n      .subscribe((checkListDetail: CheckList) => {\r\n        this.checkList = checkListDetail;\r\n        if (isOnInit) {\r\n          this.createForm();\r\n        }\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  public updateCheckList() {\r\n    this.submitted = true;\r\n    this.formViewCheckList.markAsPristine();\r\n    this.hasNoCheckListTask =\r\n      this.checkList.task.filter(x => x.description !== '' && !x.isDeleted)\r\n        .length === 0;\r\n\r\n    if (!this.formViewCheckList.valid && this.hasNoCheckListTask) {\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n\r\n    if (!this.isUpdatingCheckList) {\r\n      if (!this.formViewCheckList.valid) {\r\n        this.submitted = true;\r\n        return;\r\n      }\r\n\r\n      if (this.formViewCheckList.valid && !this.hasNoCheckListTask) {\r\n        this.checkList.task = this.checkList.task.filter(\r\n          (task: ITask) => !task.isDeleted\r\n        );\r\n        this.checkListsService\r\n          .updateCheckListDetailForId(this.checkList)\r\n          .subscribe(\r\n            data => {\r\n              this.viewCheckListForId(false);\r\n              this.toastService.showToast(\r\n                new Toast(\r\n                  `Checklist ( ${data.numberWithPrefix} ) saved successfully`\r\n                )\r\n              );\r\n            },\r\n            (errorResponse: HttpErrorResponse) => {\r\n              this.toastService.showErrorToast('Unable to save checklist');\r\n              return;\r\n            }\r\n          );\r\n      }\r\n      this.showSaveButton = false;\r\n    }\r\n  }\r\n\r\n  public isTaskAdded(): boolean {\r\n    return this.checkList.task.every(task => task.isDeleted);\r\n  }\r\n\r\n  public handleTaskDescriptionChanges(event, task) {\r\n    task.description = event.target.value;\r\n    this.formViewCheckList.markAsDirty();\r\n    this.showSaveButton = true;\r\n    this.hasNoCheckListTask = false;\r\n  }\r\n\r\n  public handleAddCheckList() {\r\n    this.addedTaskList = {\r\n      sequenceNumber: this.checkList.task.length + 1,\r\n      description: '',\r\n      isDeleted: false\r\n    };\r\n    this.checkList.task.push(this.addedTaskList);\r\n    this.formViewCheckList.markAsDirty();\r\n    this.showSaveButton = true;\r\n  }\r\n\r\n  public handleDeleteItem(checkListIndex: number) {\r\n    if (this.checkList && this.checkList.task) {\r\n      this.checkList.task[checkListIndex].isDeleted = true;\r\n      this.formViewCheckList.markAsDirty();\r\n      this.showSaveButton = true;\r\n    }\r\n  }\r\n\r\n  public handleCheckListNameInput(event) {\r\n    const checklistValue = event.target.value;\r\n    const filteredValue = checklistValue.replace(/[^a-zA-Z0-9 _\\-(),.]/g, '');\r\n    if (filteredValue !== checklistValue) {\r\n      event.preventDefault();\r\n      event.target.value = filteredValue;\r\n      this.formViewCheckList.get('name').setValue(filteredValue);\r\n    }\r\n  }\r\n}\r\n","<app-section-header></app-section-header>\r\n<div *ngIf=\"isLoading || isGettingUserRights\">\r\n  <div class=\"spinner\"></div>\r\n</div>\r\n<article *ngIf=\"!isLoading && !isGettingUserRights\">\r\n  <header>\r\n    <h1>{{ isEditable ? 'Edit' : 'View' }} Check List</h1>\r\n  </header>\r\n  <form [formGroup]=\"formViewCheckList\">\r\n    <div class=\"core-info mt-4\">\r\n      <div class=\"row align-items-center mb-sm-4 mb-md-2 mb-2\">\r\n       <div class=\"col-2\"></div>\r\n        <div class=\"col-10\">\r\n          <div\r\n            class=\"form-group\"\r\n            *ngIf=\"submitted && formViewCheckList.controls.name.errors\"\r\n          >\r\n            <div class=\"asset-alert-msgs\">\r\n              <div class=\"alert alert-danger arrow-alert\">\r\n                You must specify name\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row align-items-center mb-sm-4 mb-md-2 mb-2\">\r\n        <div class=\"col-2\">\r\n          <label>Name</label>\r\n        </div>\r\n        <div class=\"col-10\">\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"name\"\r\n            class=\"form-control\"\r\n            maxlength=\"50\"\r\n            (input) =\"handleCheckListNameInput($event)\"\r\n            />\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12 mb-2 mb-sm-2\">\r\n          <div class=\"row  d-flex align-items-center\">\r\n            <div class=\"col-2\"></div>\r\n            <div class=\"col-10\">\r\n              <ng-container\r\n                *ngFor=\"let task of checkList.task; let first = first\"\r\n              >\r\n                <div class=\"form-group\" *ngIf=\"(isTaskAdded() || hasNoCheckListTask) && first\">\r\n                  <div class=\"asset-alert-msgs\">\r\n                    <div class=\"alert alert-danger arrow-alert\">\r\n                      You must specify at least one task\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </ng-container>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12 mb-2 mb-sm-2\">\r\n          <div\r\n            class=\"row  d-flex align-items-center\"\r\n            *ngFor=\"\r\n              let task of checkList.task;\r\n              let i = index;\r\n              let first = first\r\n            \"\r\n          >\r\n            <label class=\"col-2 mb-3\">{{ first ? 'Tasks' : '' }}</label>\r\n            <div class=\"col-10\">\r\n              <div class=\"input-group mb-3\">\r\n                <textarea\r\n                  type=\"text\"\r\n                  [disabled]=\"!isEditable || task.isDeleted\"\r\n                  [value]=\"task.description\"\r\n                  pattern=\"^[a-zA-Z0-9 ]*\"\r\n                  maxlength=\"500\"\r\n                  class=\"form-control task-description\"\r\n                  (input)=\"handleTaskDescriptionChanges($event, task)\"\r\n                ></textarea>\r\n                <button\r\n                  class=\"delete-btn\"\r\n                  type=\"button\"\r\n                  (click)=\"handleDeleteItem(i)\"\r\n                  [disabled]=\"!isEditable || task.isDeleted\"\r\n                >\r\n                  <svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    width=\"15.002\"\r\n                    height=\"19.003\"\r\n                    viewBox=\"0 0 14.002 18.003\"\r\n                    class=\"del-icon\"\r\n                  >\r\n                    <g id=\"wrench\" transform=\"translate(0.001 0)\">\r\n                      <path\r\n                        id=\"Path_1563\"\r\n                        data-name=\"Path 1563\"\r\n                        d=\"M12.333,3.933,1.267,3.8c-.133.133-.4.133-.533.267A.8.8,0,0,0,.6,4.6L1.8,16.2c0,.4.267.533.667.533h8.267A.61.61,0,0,0,11.4,16.2L12.867,4.6a.8.8,0,0,0-.133-.533,1.343,1.343,0,0,0-.4-.134Zm-2,11.6h-7.2L2.067,5.267h9.467Z\"\r\n                        transform=\"translate(0.2 1.267)\"\r\n                      />\r\n                      <path\r\n                        id=\"Path_1564\"\r\n                        data-name=\"Path 1564\"\r\n                        d=\"M13.333,3.2H10.667A3.739,3.739,0,0,0,6.933,0a3.607,3.607,0,0,0-3.6,3.2H.667A.63.63,0,0,0,0,3.867a.63.63,0,0,0,.667.667H13.333A.63.63,0,0,0,14,3.867a.63.63,0,0,0-.667-.667Zm-6.4-1.867A2.442,2.442,0,0,1,9.333,3.2H4.667A2.407,2.407,0,0,1,6.933,1.333Z\"\r\n                      />\r\n                      <path\r\n                        id=\"Path_1565\"\r\n                        data-name=\"Path 1565\"\r\n                        d=\"M5.367,13.467a.63.63,0,0,0,.667-.667V6.667A.63.63,0,0,0,5.367,6a.63.63,0,0,0-.667.667v6.267C4.7,13.2,5.1,13.467,5.367,13.467Z\"\r\n                        transform=\"translate(1.567 2)\"\r\n                      />\r\n                      <path\r\n                        id=\"Path_1566\"\r\n                        data-name=\"Path 1566\"\r\n                        d=\"M3.9,13.5a.714.714,0,0,0,.667-.667L4.033,6.567A.714.714,0,0,0,3.367,5.9a.845.845,0,0,0-.667.8l.533,6.267A.886.886,0,0,0,3.9,13.5Z\"\r\n                        transform=\"translate(0.9 1.967)\"\r\n                      />\r\n                      <path\r\n                        id=\"Path_1567\"\r\n                        data-name=\"Path 1567\"\r\n                        d=\"M6.942,13.475a.63.63,0,0,0,.667-.667l.533-6.267c.133-.267-.133-.533-.533-.533-.4-.133-.667.133-.667.533l-.533,6.267c-.134.4.133.667.533.667Z\"\r\n                        transform=\"translate(2.125 1.991)\"\r\n                      />\r\n                    </g>\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-2 mb-sm-3\" *ngIf=\"isEditable\">\r\n        <button\r\n          class=\"btn btn-link  p-0 add-list\"\r\n          (click)=\"handleAddCheckList()\"\r\n        >\r\n         Add Task\r\n        </button>\r\n      </div>\r\n      <div class=\"row align-items-center d-flex mb-2 mb-sm-3\">\r\n        <label class=\"col-2\">Status</label>\r\n        <div class=\"col-10 col-md-3\">\r\n          <select formControlName=\"status\" class=\"custom-select form-control\">\r\n            <option\r\n              *ngFor=\"let status of checkListStatusValues; let i = index\"\r\n              [value]=\"checkListStatusValues[i]\"\r\n              [selected]=\"checkListStatusValues[i] === checkList.status\"\r\n              class=\"form-control\"\r\n            >\r\n              {{ checklistStatus[status] }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div\r\n        [style.height.px]=\"\r\n          !isUpdatingPreventiveMaintenance && showSaveButton ? 100 : null\r\n        \"\r\n      ></div>\r\n    </div>\r\n  </form>\r\n  <footer>\r\n    <div\r\n      *ngIf=\"formViewCheckList\"\r\n      class=\"form-actions\"\r\n      [class.visible]=\"!isUpdatingCheckList && showSaveButton && !isTaskAdded()\"\r\n    >\r\n      <button\r\n        class=\"btn btn-primary btn-block col-12\"\r\n        (click)=\"updateCheckList()\"\r\n      >\r\n        <span>Save all changes</span>\r\n      </button>\r\n    </div>\r\n  </footer>\r\n</article>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  AuthenticationService,\r\n  CheckListPermissions,\r\n  PermissionGroup,\r\n  Toast,\r\n  ToastService\r\n} from 'src/app/services';\r\nimport { CheckListsService } from 'src/app/services/check-lists/check-lists.service';\r\nimport { ITask } from 'src/app/services/check-lists/check-lists.types';\r\nimport { CheckListsWizard } from '../check-lists.wizard';\r\n\r\n@Component({\r\n  selector: 'app-create-check-list',\r\n  templateUrl: './create-check-list.component.html',\r\n  styleUrls: ['./create-check-list.component.scss']\r\n})\r\nexport class CreateCheckListComponent implements OnInit {\r\n  public isLoading = false;\r\n  public formCreateCheckList: FormGroup;\r\n  public submitAttempted = false;\r\n  public tasks: ITask[] = [];\r\n  public hasNoCheckListTask: Boolean;\r\n  public canUserEditCheckList: boolean;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private checkListsService: CheckListsService,\r\n    private toastService: ToastService,\r\n    private authenticationService: AuthenticationService,\r\n    private checkListsWizard: CheckListsWizard,\r\n    private router: Router\r\n  ) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.setPermissionBooleans();\r\n    this.createCheckListForm();\r\n  }\r\n\r\n  public createCheckListForm() {\r\n    const buildCreateCheckListForm = () => {\r\n      this.formCreateCheckList = this.formBuilder.group({\r\n        name: [\r\n          '',\r\n          Validators.compose([Validators.required, Validators.maxLength(50)])\r\n        ]\r\n      });\r\n    };\r\n    buildCreateCheckListForm();\r\n    this.tasks = [{ sequenceNumber: 1, description: '', isDeleted: false }];\r\n  }\r\n\r\n  public createCheckList() {\r\n    this.submitAttempted = true;\r\n    this.isLoading = true;\r\n    this.formCreateCheckList.markAsPristine();\r\n    this.hasNoCheckListTask =\r\n      this.tasks.filter(x => x.description !== '' && !x.isDeleted).length === 0;\r\n\r\n    if (!this.formCreateCheckList.valid || this.hasNoCheckListTask) {\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n\r\n    if (this.formCreateCheckList.valid && !this.hasNoCheckListTask) {\r\n      this.tasks = this.tasks.filter(x => x.description !== '' && !x.isDeleted);\r\n      for (const [index, value] of this.tasks.entries()) {\r\n        value.sequenceNumber = index + 1;\r\n      }\r\n\r\n      const name = this.formCreateCheckList.value.name;\r\n      const task: ITask[] = [];\r\n\r\n      this.tasks.forEach(x => {\r\n        const newTask: ITask = {\r\n          sequenceNumber: x.sequenceNumber,\r\n          description: x.description\r\n        };\r\n        task.push(newTask);\r\n      });\r\n\r\n      this.checkListsService\r\n        .createCheckList({\r\n          name,\r\n          task\r\n        })\r\n        .subscribe(data => {\r\n          this.checkListsWizard.checkLists = data;\r\n          this.toastService.showToast(\r\n            new Toast(\r\n              'Checklist (' + data.numberWithPrefix + ') saved successfully'\r\n            )\r\n          );\r\n\r\n          if (this.canUserEditCheckList) {\r\n            this.router.navigate(['check-list/edit-check-list']);\r\n          } else {\r\n            this.router.navigate(['check-list/view-check-list']);\r\n          }\r\n        });\r\n    }\r\n    this.isLoading = false;\r\n  }\r\n\r\n  public handleDeleteTask(task: ITask) {\r\n    this.tasks.find(\r\n      itemTask =>\r\n        task.description === itemTask.description &&\r\n        task.sequenceNumber === itemTask.sequenceNumber\r\n    ).isDeleted = true;\r\n    this.formCreateCheckList.markAsDirty();\r\n  }\r\n\r\n  public handleAddRow() {\r\n    this.tasks = [\r\n      ...this.tasks,\r\n      { sequenceNumber: this.tasks.length + 1, description: '' }\r\n    ];\r\n    this.formCreateCheckList.markAsDirty();\r\n  }\r\n\r\n  public handleTaskInputKeyDown(event) {\r\n    this.hasNoCheckListTask = false;\r\n    this.formCreateCheckList.markAsDirty();\r\n  }\r\n\r\n  private setPermissionBooleans() {\r\n    this.authenticationService\r\n      .currentUserHasPermission({\r\n        [PermissionGroup.CheckList]: [CheckListPermissions.CanEditCheckList]\r\n      })\r\n      .subscribe(hasPermission => {\r\n        this.canUserEditCheckList = hasPermission;\r\n      });\r\n  }\r\n\r\n  public handleChecklistNameInput(event) {\r\n    const checklistValue = event.target.value;\r\n    const filteredValue = checklistValue.replace(/[^a-zA-Z0-9 _\\-(),.]/g, '');\r\n    if (filteredValue !== checklistValue) {\r\n      event.preventDefault();\r\n      event.target.value = filteredValue;\r\n      this.formCreateCheckList.get('name').setValue(filteredValue);\r\n    }\r\n  }\r\n}\r\n","<app-section-header [customCurrentPageTitle]=\"'Create Check List'\"></app-section-header>\r\n<div *ngIf=\"isLoading\">\r\n  <div class=\"spinner\"></div>\r\n</div>\r\n<article *ngIf=\"!isLoading \">\r\n  <header>\r\n    <h1>Create Check List</h1>\r\n  </header>\r\n  <form [formGroup] = \"formCreateCheckList\">\r\n    <div class=\"mt-4\">\r\n      <div class=\"d-flex align-items-center\">\r\n        <div class=\"col-4 col-sm-2 \">\r\n          <label></label>\r\n        </div>\r\n        <div class=\"col-8 col-sm-10\">\r\n              <div\r\n                class=\"alert alert-danger arrow-alert\"\r\n                *ngIf=\"submitAttempted && formCreateCheckList.controls.name.errors\"\r\n              >\r\n              You must specify a name\r\n          </div>\r\n          </div>\r\n      </div>\r\n      <div class=\"d-flex align-items-center mb-3\">\r\n        <div class=\"col-4 col-sm-2 \">\r\n          <label>Name</label>\r\n        </div>\r\n        <div class=\"col-8 col-sm-10\">\r\n          <input\r\n            type=\"text\"\r\n            maxlength=\"50\"\r\n            formControlName=\"name\"\r\n            class=\"form-control\"\r\n            (input) =\"handleChecklistNameInput($event)\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"d-flex\"  *ngIf=\"submitAttempted && hasNoCheckListTask\">\r\n        <div class=\"col-4 col-sm-2\">\r\n        </div>\r\n        <div class=\"col-8 col-sm-10\">\r\n          <div\r\n            class=\"alert alert-danger arrow-alert\"\r\n            *ngIf=\"submitAttempted && hasNoCheckListTask\"\r\n          >\r\n            You must specify at least one task\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"d-flex mb-sm-4 mb-2\">\r\n        <div class=\"col-4 col-sm-2 mt-2\">\r\n            <label>Tasks</label>\r\n        </div>\r\n        <div class=\"col-8 col-sm-10\">\r\n          <div class=\"row\" *ngFor=\"let task of tasks\">\r\n            <div class=\"d-flex align-items-center mb-3\">\r\n              <textarea\r\n                type=\"text\"\r\n                class=\"form-control task-description\"\r\n                [disabled]=\"task.isDeleted\"\r\n                maxlength=\"500\"\r\n                [(ngModel)]=\"task.description\"\r\n                [ngModelOptions]=\"{standalone: true}\"\r\n                (keydown)=\"handleTaskInputKeyDown($event)\"\r\n              ></textarea>\r\n              <button (click)=\"handleDeleteTask(task)\"  class=\"del-icon-button\" [disabled]=\"task.isDeleted\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15.002\" height=\"19.003\" viewBox=\"0 0 14.002 18.003\" class=\"del-icon \">\r\n                  <g id=\"wrench\" transform=\"translate(0.001 0)\">\r\n                    <path id=\"Path_1563\" data-name=\"Path 1563\" d=\"M12.333,3.933,1.267,3.8c-.133.133-.4.133-.533.267A.8.8,0,0,0,.6,4.6L1.8,16.2c0,.4.267.533.667.533h8.267A.61.61,0,0,0,11.4,16.2L12.867,4.6a.8.8,0,0,0-.133-.533,1.343,1.343,0,0,0-.4-.134Zm-2,11.6h-7.2L2.067,5.267h9.467Z\" transform=\"translate(0.2 1.267)\"/>\r\n                    <path id=\"Path_1564\" data-name=\"Path 1564\" d=\"M13.333,3.2H10.667A3.739,3.739,0,0,0,6.933,0a3.607,3.607,0,0,0-3.6,3.2H.667A.63.63,0,0,0,0,3.867a.63.63,0,0,0,.667.667H13.333A.63.63,0,0,0,14,3.867a.63.63,0,0,0-.667-.667Zm-6.4-1.867A2.442,2.442,0,0,1,9.333,3.2H4.667A2.407,2.407,0,0,1,6.933,1.333Z\"/>\r\n                    <path id=\"Path_1565\" data-name=\"Path 1565\" d=\"M5.367,13.467a.63.63,0,0,0,.667-.667V6.667A.63.63,0,0,0,5.367,6a.63.63,0,0,0-.667.667v6.267C4.7,13.2,5.1,13.467,5.367,13.467Z\" transform=\"translate(1.567 2)\"/>\r\n                    <path id=\"Path_1566\" data-name=\"Path 1566\" d=\"M3.9,13.5a.714.714,0,0,0,.667-.667L4.033,6.567A.714.714,0,0,0,3.367,5.9a.845.845,0,0,0-.667.8l.533,6.267A.886.886,0,0,0,3.9,13.5Z\" transform=\"translate(0.9 1.967)\"/>\r\n                    <path id=\"Path_1567\" data-name=\"Path 1567\" d=\"M6.942,13.475a.63.63,0,0,0,.667-.667l.533-6.267c.133-.267-.133-.533-.533-.533-.4-.133-.667.133-.667.533l-.533,6.267c-.134.4.133.667.533.667Z\" transform=\"translate(2.125 1.991)\"/>\r\n                  </g>\r\n                </svg>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"pb-4\">\r\n       <button class=\"btn btn-link p-0 add-row\" (click)=\"handleAddRow()\">Add Task</button>  \r\n      </div>\r\n    </div>\r\n    <footer>\r\n      <div class=\"form-actions\" [class.visible]=\"formCreateCheckList.dirty\">\r\n        <button\r\n          class=\"btn btn-primary btn-block col-12\"\r\n          (click)=\"createCheckList()\"\r\n        >\r\n        Save all changes\r\n        </button>\r\n      </div>\r\n    </footer>\r\n  </form>\r\n</article>\r\n","\r\nexport function enumString(enumeration, enumProperty) {\r\n  const enumName = enumeration[enumProperty];\r\n  if (!enumName) {\r\n    console.warn(\r\n      `${enumProperty} is not a valid value for provided enumeration`,\r\n      JSON.stringify(enumeration).substr(0, 100)\r\n    );\r\n    return '';\r\n  }\r\n  return enumName.replace(/([A-Z])/g, ' $1').slice(1);\r\n}\r\n\r\nexport function enumValues(enumeration) {\r\n  const arr = [];\r\n  for (const value in enumeration) {\r\n    if (isNaN(Number(value))) {\r\n      arr.push(enumeration[value]);\r\n    }\r\n  }\r\n  return arr;\r\n}\r\n\r\nexport function enumKeys(enumeration) {\r\n  return Object.keys(enumeration);\r\n}\r\n\r\nexport function enumKeyValue(enumeration, enumValue) {\r\n  let keys = Object.keys(enumeration).filter(x => enumeration[x] == enumValue);\r\n  return keys.length > 0 ? keys[0] : null;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CheckList } from '../services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CheckListsWizard {\r\n  public checkLists: CheckList;\r\n\r\n  constructor() {}\r\n\r\n  public reset() {\r\n    this.checkLists = undefined;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SharedModule } from '../shared-module/shared-module.module';\r\nimport { CheckListsComponent } from './check-lists.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { CheckListsRoutingModule } from './check-lists-routing.module';\r\nimport { CreateCheckListComponent } from './create-check-list/create-check-list.component';\r\nimport { ViewCheckListsComponent } from './view-check-lists/view-check-list.component';\r\n@NgModule({\r\n  declarations: [\r\n    CheckListsComponent,\r\n    CreateCheckListComponent,\r\n    ViewCheckListsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    CheckListsRoutingModule\r\n  ]\r\n})\r\nexport class CheckListsModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { CheckListsService } from '../services/check-lists/check-lists.service';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport {\r\n  CheckListStatus,\r\n  CheckList\r\n} from '../services/check-lists/check-lists.types';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  AuthenticationService,\r\n  CheckListPermissions,\r\n  PermissionGroup,\r\n  SearchFilterService\r\n} from '../services';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { CheckListsWizard } from './check-lists.wizard';\r\n\r\n@Component({\r\n  selector: 'app-check-lists',\r\n  templateUrl: './check-lists.component.html',\r\n  styleUrls: ['./check-lists.component.scss']\r\n})\r\nexport class CheckListsComponent implements OnInit, OnDestroy {\r\n  public searchForm: FormGroup;\r\n  public isSearching: boolean;\r\n  public checkLists: CheckList[];\r\n  public CheckListStatus = CheckListStatus;\r\n  public canCreateCheckList: boolean = false;\r\n  public shouldGetNextCheckList = true;\r\n  public form: FormGroup;\r\n  public offset = 0;\r\n  public take = 10;\r\n  public checkListFilterCache: boolean;\r\n  public canUserEditCheckList: boolean;\r\n  public isGettingUserRights = false;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private authenticationService: AuthenticationService,\r\n    private checkListsService: CheckListsService,\r\n    private router: Router,\r\n    private searchFilterService: SearchFilterService,\r\n    private checkListsWizard: CheckListsWizard\r\n  ) {}\r\n\r\n  public ngOnInit() {\r\n    this.setPermissionBooleans();\r\n    this.searchForm = this.formBuilder.group({\r\n      text: this.searchFilterService.searchCLTextValue\r\n        ? this.searchFilterService.searchCLTextValue\r\n        : ''\r\n    });\r\n    this.checkListFilterCache = this.searchFilterService.searchCLFilterValue;\r\n    this.searchFilterService.searchCLFilterValueCache = this.checkListFilterCache;\r\n    this.searchForm\r\n      .get('text')\r\n      .valueChanges.pipe(\r\n        debounceTime(700),\r\n        filter(textValue => textValue.length >= 3 || textValue.length === 0)\r\n      )\r\n      .subscribe(() => {\r\n        this.initiateFreshSearchSettings();\r\n        this.getCheckList();\r\n        this.searchFilterService.searchCLTextValueCache = this.searchForm.controls[\r\n          'text'\r\n        ].value;\r\n      });\r\n\r\n    this.initiateFreshSearchSettings();\r\n    this.getCheckList();\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.searchFilterService.clearCLFilter();\r\n  }\r\n\r\n  public initiateFreshSearchSettings(): void {\r\n    this.checkLists = [];\r\n    this.offset = 0;\r\n    this.shouldGetNextCheckList = true;\r\n  }\r\n\r\n  public getCheckList() {\r\n    this.isSearching = true;\r\n    this.checkListsService\r\n      .getCheckListsList({\r\n        offset: this.offset,\r\n        take: this.take,\r\n        searchText: this.searchForm.value.text,\r\n        includeObsolete: this.checkListFilterCache\r\n      })\r\n      .subscribe((checkLists: CheckList[]) => {\r\n        this.checkLists.push(...checkLists);\r\n        this.offset += this.take;\r\n        if (checkLists.length < this.take) {\r\n          this.shouldGetNextCheckList = false;\r\n        }\r\n        this.isSearching = false;\r\n      });\r\n  }\r\n\r\n  public createCheckList() {\r\n    this.router.navigate(['check-list', 'create-check-list']);\r\n  }\r\n\r\n  public handleFilterClick(includeObsolete: boolean) {\r\n    this.checkListFilterCache = includeObsolete;\r\n    this.searchFilterService.searchCLFilterValueCache = this.checkListFilterCache;\r\n    this.initiateFreshSearchSettings();\r\n    this.getCheckList();\r\n  }\r\n\r\n  private setPermissionBooleans() {\r\n    this.isGettingUserRights = true;\r\n    this.authenticationService\r\n      .currentUserHasPermission({\r\n        [PermissionGroup.CheckList]: [CheckListPermissions.CanCreateCheckList]\r\n      })\r\n      .subscribe(hasPermission => (this.canCreateCheckList = hasPermission));\r\n    this.authenticationService\r\n      .currentUserHasPermission({\r\n        [PermissionGroup.CheckList]: [CheckListPermissions.CanEditCheckList]\r\n      })\r\n      .subscribe(hasPermission => {\r\n        this.canUserEditCheckList = hasPermission;\r\n        this.isGettingUserRights = false;\r\n      });\r\n  }\r\n\r\n  public handleSelectedCheckListClick(checkList: CheckList) {\r\n    this.checkListsWizard.checkLists = checkList;\r\n    if (this.checkListsWizard.checkLists) {\r\n      if (this.canUserEditCheckList) {\r\n        this.router.navigate(['check-list/edit-check-list']);\r\n      } else {\r\n        this.router.navigate(['check-list/view-check-list']);\r\n      }\r\n    }\r\n  }\r\n}\r\n","<app-section-header [customCurrentPageTitle]=\"'Check Lists'\"></app-section-header>\r\n<h1>Check Lists</h1>\r\n<form [formGroup]=\"searchForm\" class=\"search-filter-form\">\r\n  <div class=\"input-with-search-wrapper col-5\">\r\n    <input\r\n      type=\"text\"\r\n      formControlName=\"text\"\r\n      class=\"form-control form-control--search-prefix\"\r\n      placeholder=\"Search by checklist id or name\"\r\n\r\n    />\r\n  </div>\r\n\r\n  <div class=\"check-list-filter col-3\">\r\n    <form>\r\n      <div class=\"form-group\">\r\n          <label class=\"custom-control-label label-align\" for=\"includeObsolete\">\r\n            <input\r\n            type=\"checkbox\"\r\n            id=\"includeObsolete\"\r\n            [(ngModel)]=\"checkListFilterCache\"\r\n            (change)=\"handleFilterClick($event.target.checked)\"\r\n            name=\"option-check-list-filter\"\r\n            class=\"custom-control-input\"/>\r\n            <span class=\"checkbox-label\">Include obsolete check lists</span></label>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div class=\"check-list-create-btn col-4\">\r\n    <button [disabled]=\"!canCreateCheckList\"  class=\"btn\"  (click)=\"createCheckList()\" >\r\n      <span>Create Check List</span>\r\n    </button>\r\n  </div>\r\n</form>\r\n\r\n<ul class=\"check-list-ul\">\r\n  <li>\r\n      <div>\r\n        <span>id</span>\r\n      </div>\r\n      <div>\r\n       <span>name</span>\r\n      </div>\r\n\r\n      <div>\r\n        <span>status</span>\r\n      </div>\r\n  </li>\r\n  <li *ngFor=\"let checkList of checkLists\"   class=\"status-{{checkList.status ? CheckListStatus[checkList.status] : 'Active'}}\"  (click) = \"handleSelectedCheckListClick(checkList)\">\r\n    <div>\r\n      <span>{{checkList.number}}</span>\r\n    </div>\r\n    <div>\r\n      <span>{{checkList.name}}</span>\r\n    </div>\r\n    <div>\r\n      <span>{{CheckListStatus[checkList.status]}}</span>\r\n    </div>\r\n    <div class=\"row-toggle\">\r\n      <div>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 8.797 5.194\">\r\n          <path d=\"M8,0l.8.8-4.4,4.4Q2.2,3,0,.8L.8,0C.81-.014,4.394,3.625,4.394,3.625S8.006,0,8,0Z\" />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  </li>\r\n</ul>\r\n<div *ngIf=\"checkLists.length === 0 && !isSearching\">\r\n  No checklists found\r\n</div>\r\n\r\n<div *ngIf=\"shouldGetNextCheckList && !isSearching\" class=\"text-center\">\r\n  <button class=\"btn btn-link\" (click)=\"getCheckList()\">Load more</button>\r\n</div>\r\n\r\n<div *ngIf=\"isSearching\">\r\n  <div class=\"spinner\"></div>\r\n</div>\r\n"]}