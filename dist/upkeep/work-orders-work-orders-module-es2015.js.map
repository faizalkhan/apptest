{"version":3,"sources":["./src/app/work-orders/create-work-order/create-work-order.component.ts","./src/app/work-orders/create-work-order/create-work-order.component.html","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js","./src/app/work-orders/work-orders.module.ts","./src/app/work-orders/view-workorder/checklist-task-item/checklist-task-item.component.ts","./src/app/work-orders/view-workorder/checklist-task-item/checklist-task-item.component.html","./src/app/work-orders/view-workorder/view-workorder.component.ts","./src/app/work-orders/view-workorder/view-workorder.component.html","./src/app/work-orders/pick-workorder-spares/pick-workorder-spares.component.ts","./src/app/work-orders/pick-workorder-spares/pick-workorder-spares.component.html","./src/app/work-orders/work-order.wizard.ts","./src/app/work-orders/work-orders.component.ts","./src/app/work-orders/work-orders.component.html","./src/app/work-orders/pick-workorder-spares/spares-skus/spares-skus.component.ts","./src/app/work-orders/pick-workorder-spares/spares-skus/spares-skus.component.html","./src/utils/stringUtils.ts","./src/app/work-orders/work-orders-routing.module.ts"],"names":[],"mappings":"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AAoE;AACjG,aAAa;AACb,KAAK,eAAe,EAAE;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,4CAAO;AACnC;AACA,2BAA2B,4CAAO;AAClC;AACA,mCAAmC,0DAAY;AAC/C;AACA,6BAA6B,0DAAY;AACzC;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,qEAAc;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,6BAA6B,mFAAqB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,oDAAoD;AAC1E;AACA,2BAA2B,mFAAqB;AAChD;AACA;AACA,oBAAoB,iDAAiD;AACrE;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C;AACA,0BAA0B,mFAAqB;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,aAAa;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,aAAa;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,aAAa;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4DA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CA,SAAS;AACT,kBAAkB,0DAAY;AAC9B;AACA,SAAS,GAAG,EAAE,EAAE;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,iCAAiC,+DAAwB,WAAW,+DAAwB,CAAC,wDAAiB,GAAG;AACzK,qBAAqB,+DAAwB,EAAE,uLAAuL;AACtO,QAAQ,wDAAiB,mEAAmE,iCAAiC,EAAE;AAC/H,KAAK,EAAE,aAAa,gEAAyB,GAAG,uDAAuD,KAAK;AAC5G;AACA,KAAK,gBAAgB;AACrB,KAAK,OAAO,wDAAU;AACtB;AACA,cAAc,oDAAoD,+DAAwB;AAC1F,cAAc,uDAAS;AACvB;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,6BAA6B,uDAAuD;AACpF,aAAa;AACb,KAAK,gBAAgB,UAAU,gBAAgB,GAAG,OAAO,wDAAiB,EAAE,EAAE,EAAE,QAAQ,EAAE;;AAE1F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4DAAc;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,8EAAe;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4CAAO;AACrC;AACA,qCAAqC,eAAe;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,0DAAY;AACtC;AACA;AACA;AACA;AACA;AACA,+BAA+B,0DAAY;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,sCAAsC;AACtD;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,oBAAoB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,oCAAoC;AAChE;AACA;AACA;AACA;AACA,oBAAoB,oEAAoE;AACxF;AACA,yBAAyB,mFAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,yBAAyB;AAC/C;AACA,2BAA2B,mFAAqB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,kDAAK;AACpB;AACA;AACA;AACA,eAAe,kDAAK;AACpB;AACA;AACA;AACA,eAAe,kDAAK;AACpB;AACA;AACA;AACA,eAAe,kDAAK;AACpB;AACA;AACA,+BAA+B,iEAAe;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,gEAAS;AAC/B;AACA;AACA,qCAAqC,gEAAS;AAC9C;AACA,SAAS;AACT;AACA,gCAAgC,gEAAS,QAAQ,gEAAS;AAC1D;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,mCAAmC,wEAAc;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uCAAuC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+DAAS;AACvaAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA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kBAAkB,oDAAM;AACxB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,mDAAK;AACvB,SAAS;AACT,kBAAkB,6DAAe;AACjC;AACA;AACA;AACA;AACA,iBAAiB;AACjB,SAAS,GAAG,EAAE,EAAE;;AAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,0DAAY;AACvC;AACA;AACA;AACA,yCAAyC,iBAAiB;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,wBAAwB;AAC7C,0BAA0B,mBAAmB,mFAAqB,QAAQ;AAC1E;AACA,oBAAoB,sEAAsE;AAC1F,yBAAyB,kBAAkB,mFAAqB,QAAQ;AACxE;AACA,iBAAiB,kCAAkC;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,yDAAG,KAAK,4EAAc;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,6DAA6D;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,4EAAc;AAC9B;AACA;AACA,sDAAsD,gCAAgC,+DAAwB,CAAC,wDAAiB,GAAG,+DAAwB,6BAA6B;AACxL,oBAAoB,+DAAwB,EAAE,mMAAmM;AACjP,QAAQ,wDAAiB,sEAAsE,6BAA6B,EAAE,2DA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","file":"work-orders-work-orders-module-es2015.js","sourcesContent":["import { formatDate } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  IWorkOrderCategory,\r\n  Toast,\r\n  ToastService,\r\n  WorkOrderPriority,\r\n  WorkordersService,\r\n  IAssets,\r\n  ICheckList\r\n} from 'src/app/services';\r\nimport { enumString, enumValues } from 'src/utils/enumUtils';\r\nimport { WorkOrderWizard } from '../work-order.wizard';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\n\r\n@Component({\r\n  selector: 'app-create-work-order',\r\n  templateUrl: './create-work-order.component.html',\r\n  styleUrls: ['./create-work-order.component.scss']\r\n})\r\nexport class CreateWorkOrderComponent implements OnInit {\r\n  public isLoading = false;\r\n  public formCreateWorkOrder: FormGroup;\r\n  public workOrderPriorities = enumValues(WorkOrderPriority);\r\n  public showSaveButton = false;\r\n  public workOrderCategories: IWorkOrderCategory[];\r\n  public submitAttempted = false;\r\n  public addAssetsModalVisible = false;\r\n  public existingWorkOrderAssets: IAssets[] = [];\r\n  public existingWorkOrderChecklists: ICheckList[] = [];\r\n  public minDueDate = new Date();\r\n  public todayDate = new Date();\r\n  public pickCheckListsModalVisible = false;\r\n  public checklists = [];\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private workOrderService: WorkordersService,\r\n    private toastService: ToastService,\r\n    public router: Router,\r\n    private workOrderWizard: WorkOrderWizard\r\n  ) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.createForm();\r\n    this.listCategory();\r\n  }\r\n\r\n  public createForm() {\r\n    const bulidWorkOrderDetailForm = () => {\r\n      this.formCreateWorkOrder = this.formBuilder.group({\r\n        title: [\r\n          '',\r\n          Validators.compose([Validators.required, Validators.maxLength(50)])\r\n        ],\r\n        description: [\r\n          '',\r\n          Validators.compose([Validators.required, Validators.maxLength(4000)])\r\n        ],\r\n        category: ['', Validators.required],\r\n        reportedOn: [this.todayDate, Validators.required],\r\n        dueDate: [null, Validators.required],\r\n        priority: ['', Validators.required],\r\n        assignedToUser: ['', Validators.compose([Validators.maxLength(50)])]\r\n      });\r\n    };\r\n    bulidWorkOrderDetailForm();\r\n  }\r\n\r\n  public createWorkOrder() {\r\n    this.submitAttempted = true;\r\n    this.showSaveButton = false;\r\n    this.isLoading = true;\r\n    if (\r\n      formatDate(\r\n        this.formCreateWorkOrder.value.dueDate,\r\n        'yyyy-MM-dd',\r\n        'en-US'\r\n      ) <\r\n      formatDate(\r\n        this.formCreateWorkOrder.value.reportedOn,\r\n        'yyyy-MM-dd',\r\n        'en-US'\r\n      )\r\n    ) {\r\n      this.formCreateWorkOrder.controls['dueDate'].setErrors({\r\n        incorrect: true\r\n      });\r\n    }\r\n    if (this.existingWorkOrderAssets.length === 0) {\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n    if (!this.formCreateWorkOrder.valid) {\r\n      this.isLoading = false;\r\n      return;\r\n    }\r\n    const workOrderAssets = this.existingWorkOrderAssets.map(x => x.id);\r\n    const workOrderChecklists = this.existingWorkOrderChecklists.map(x => x.id);\r\n    const assignedToUser = this.formCreateWorkOrder.value.assignedToUser;\r\n    const title = this.formCreateWorkOrder.value.title;\r\n    const description = this.formCreateWorkOrder.value.description;\r\n    const priorityId = this.formCreateWorkOrder.value.priority;\r\n    const categoryId = this.formCreateWorkOrder.value.category;\r\n    const reportedOn = formatDate(\r\n      this.formCreateWorkOrder.value.reportedOn,\r\n      'yyyy-MM-ddThh:mm:ss',\r\n      'en-US'\r\n    );\r\n    const dueDate = formatDate(\r\n      this.formCreateWorkOrder.value.dueDate,\r\n      'yyyy-MM-ddThh:mm:ss',\r\n      'en-US'\r\n    );\r\n    this.workOrderService\r\n      .createWorkOrder({\r\n        assignedToUser,\r\n        title,\r\n        description,\r\n        priorityId,\r\n        categoryId,\r\n        reportedOn,\r\n        dueDate,\r\n        workOrderAssets,\r\n        workOrderChecklists\r\n      })\r\n      .subscribe(\r\n        data => {\r\n          this.toastService.showToast(\r\n            new Toast(\r\n              'Work order (' + data.workOrderNumber + ') created successfully'\r\n            )\r\n          );\r\n          this.isLoading = false;\r\n          this.workOrderWizard.workOrder = {\r\n            id: data.id,\r\n            number: data.number,\r\n            status: data.status,\r\n            assignedToUser: data.assignedToUser,\r\n            dueDate: data.dueDate,\r\n            createdTimestampUtc: data.createdTimestampUtc,\r\n            lastUpdatedTimestampUtc: data.lastUpdatedTimestampUtc,\r\n            title: data.title\r\n          };\r\n          this.router.navigate(['work-orders', data.number]);\r\n        },\r\n        err => {\r\n          this.toastService.showErrorToast(`Work Order not saved`);\r\n          this.isLoading = false;\r\n        }\r\n      );\r\n\r\n    this.isLoading = false;\r\n  }\r\n\r\n  public selectedUserId(userId: string) {\r\n    this.formCreateWorkOrder.get('assignedToUser').setValue(userId);\r\n    this.showSaveButton = true;\r\n  }\r\n\r\n  public listCategory() {\r\n    this.workOrderService\r\n      .listWorkOrderCategory()\r\n      .subscribe((data: IWorkOrderCategory[]) => {\r\n        this.workOrderCategories = data;\r\n      });\r\n  }\r\n\r\n  public onDateChange(inputDate) {\r\n    this.minDueDate = new Date(inputDate.value);\r\n    this.minDueDate.setDate(this.minDueDate.getDate());\r\n    this.formCreateWorkOrder.get('dueDate').setValue(null);\r\n  }\r\n\r\n  public handlePickAssets() {\r\n    this.addAssetsModalVisible = true;\r\n  }\r\n\r\n  public handleDetailsModalClose() {\r\n    this.addAssetsModalVisible = false;\r\n  }\r\n\r\n  public disableRightClick(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  public handleAddedWorkOrderAssets(listAssets: IAssets[]) {\r\n    this.addAssetsModalVisible = false;\r\n    this.existingWorkOrderAssets = listAssets;\r\n    this.showSaveButton = true;\r\n  }\r\n\r\n  public handleDeleteAsset(asset: IAssets) {\r\n    this.existingWorkOrderAssets.splice(\r\n      this.existingWorkOrderAssets.indexOf(asset),\r\n      1\r\n    );\r\n    this.showSaveButton = true;\r\n  }\r\n\r\n  public priorityString(priority: WorkOrderPriority) {\r\n    return enumString(WorkOrderPriority, priority);\r\n  }\r\n\r\n  public handlePickWorkOrderCheckLists(pickCheckLists: ICheckList[]) {\r\n    this.pickCheckListsModalVisible = false;\r\n    this.existingWorkOrderChecklists = pickCheckLists;\r\n    this.checklists = pickCheckLists;\r\n    this.showSaveButton = true;\r\n  }\r\n\r\n  public handlePickCheckLists() {\r\n    this.pickCheckListsModalVisible = true;\r\n  }\r\n\r\n  public handlePickCheckListsModalClose() {\r\n    this.pickCheckListsModalVisible = false;\r\n  }\r\n\r\n  public addCheckList(event: MatChipInputEvent) {\r\n    const value = (event.value || '').trim();\r\n    if (value) {\r\n      this.checklists.push(value);\r\n    }\r\n    if (event.input) {\r\n      event.input.value = '';\r\n    }\r\n  }\r\n}\r\n","<app-section-header [customCurrentPageTitle]=\"'Create Work Order'\"></app-section-header>\r\n\r\n<div *ngIf=\"isLoading\">\r\n  <div class=\"spinner\"></div>\r\n</div>\r\n\r\n<article *ngIf=\"!isLoading \">\r\n  <header>\r\n    <h1>Create Work Order</h1>\r\n  </header>\r\n  <form [formGroup] = \"formCreateWorkOrder\">\r\n    <div class=\"core-info mt-4\">\r\n      <div class=\"d-flex\"  *ngIf=\"submitAttempted && formCreateWorkOrder.controls.title.errors\">\r\n        <div class=\"col-4 col-sm-2 \">\r\n        </div>\r\n        <div class=\"col-8 col-sm-10 alert alert-danger arrow-alert\">\r\n          You must specify title\r\n        </div>\r\n      </div>\r\n      <div class=\"d-flex align-items-center mb-sm-4 mb-2\">\r\n        <div class=\"col-4 col-sm-2 \">\r\n          <label>Title</label>\r\n        </div>\r\n        <div class=\"col-8 col-sm-10\">\r\n          <input\r\n            type=\"text\"\r\n            maxlength=\"50\"\r\n            formControlName=\"title\"\r\n            class=\"form-control\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <div class=\"d-flex\"  *ngIf=\"submitAttempted && formCreateWorkOrder.controls.description.errors\">\r\n        <div class=\"col-4 col-sm-2 \">\r\n        </div>\r\n        <div class=\"col-8 col-sm-10 alert alert-danger arrow-alert\">\r\n          You must specify description\r\n        </div>\r\n     </div>\r\n      <div class=\"d-flex mb-sm-4 mb-2\">\r\n        <div class=\"col-sm-2 col-4 mt-2\">\r\n          <label>Description</label>\r\n        </div>\r\n        <div class=\"col-sm-10 col-8\">\r\n          <textarea\r\n            class=\"form-control\"\r\n            formControlName=\"description\"\r\n            rows=\"8\"\r\n            maxlength=\"4000\"\r\n          >\r\n          </textarea>\r\n        </div>\r\n      </div>\r\n      <div class=\"row d-flex\">\r\n        <div class=\"col-sm-6\">\r\n          <div class=\"d-flex\"  *ngIf=\"submitAttempted && formCreateWorkOrder.controls.reportedOn.errors\">\r\n            <div class=\"col-4\"></div>\r\n            <div class=\"col-8 alert alert-danger arrow-alert\">\r\n              You must specify reported on date\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex  mb-2 mb-sm-3 align-items-center\">\r\n            <label class=\"col-4\">Reported On</label>\r\n            <div class=\"col-8\">\r\n              <div class=\"form-group\">\r\n                <div class=\"taro-material-datepicker\">\r\n                  <input\r\n                    matInput\r\n                    [matDatepicker]=\"datePicker\"\r\n                    class=\"form-control mat-input-date\"\r\n                    formControlName=\"reportedOn\"\r\n                    (dateChange)=\"onDateChange($event)\"\r\n                  />\r\n                  <mat-datepicker-toggle\r\n                    matSuffix\r\n                    [for]=\"datePicker\"\r\n                  >\r\n                  </mat-datepicker-toggle>\r\n                  <mat-datepicker #datePicker disabled=\"false\"></mat-datepicker>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex\"  *ngIf=\"submitAttempted && formCreateWorkOrder.controls.dueDate.errors\">\r\n            <div class=\"col-4\"></div>\r\n            <div class=\"col-8 alert alert-danger arrow-alert\">\r\n              You must specify due on date\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex  mb-2 mb-sm-3 align-items-center\">\r\n            <label class=\"col-4 \">Due On</label>\r\n            <div class=\"col-8\">\r\n              <div class=\"form-group\">\r\n                <div class=\"taro-material-datepicker\">\r\n                  <input\r\n                    matInput\r\n                    [matDatepicker]=\"datePickerDueDate\"\r\n                    [min]=\"minDueDate\"\r\n                    class=\"form-control mat-input-date\"\r\n                    formControlName=\"dueDate\"\r\n                  />\r\n                  <mat-datepicker-toggle\r\n                    matSuffix\r\n                    [for]=\"datePickerDueDate\"\r\n                  >\r\n                  </mat-datepicker-toggle>\r\n                  <mat-datepicker #datePickerDueDate disabled=\"false\"></mat-datepicker>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex  mb-2 mb-sm-3 align-items-center\">\r\n            <label class=\"col-4 \">Assign To</label>\r\n            <div class=\"col-8\">\r\n              <input type=\"hidden\" formControlName=\"assignedToUser\" class=\"form-control\"/>\r\n              <app-list-users (selectedUserId)=\"selectedUserId($event)\"></app-list-users>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n          <div class=\"d-flex\"  *ngIf=\"submitAttempted && formCreateWorkOrder.controls.category.errors\">\r\n            <div class=\"col-4\"></div>\r\n            <div class=\"col-8 alert alert-danger arrow-alert\">\r\n              You must specify category\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex  mb-2 mb-sm-3 align-items-center\">\r\n            <label class=\"col-4 \">Category</label>\r\n            <div class=\"col-8\">\r\n              <select formControlName=\"category\" class=\"custom-select form-control\">\r\n                <option *ngFor=\"let category of workOrderCategories; let i = index\"\r\n                        [value]=\"category.id\"\r\n                        class=\"form-control\"\r\n                >{{category.name}}\r\n               </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex\"  *ngIf=\"submitAttempted && formCreateWorkOrder.controls.priority.errors\">\r\n            <div class=\"col-4\"></div>\r\n            <div class=\"col-8 alert alert-danger arrow-alert\">\r\n              You must specify priority\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex  mb-2 mb-sm-3 align-items-center\">\r\n            <label class=\"col-4 \">Priority</label>\r\n            <div class=\"col-8\">\r\n              <select formControlName=\"priority\" class=\"custom-select form-control\">\r\n                <option *ngFor=\"let workOrderPriority of workOrderPriorities\"\r\n                        [value]=\"workOrderPriority\"\r\n                        class=\"form-control\"\r\n                >\r\n                  {{priorityString(workOrderPriority)}}\r\n                </option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"submitAttempted && existingWorkOrderAssets.length === 0\">\r\n        <div class=\"col-sm-6\" >\r\n          <div class=\"d-flex align-items-center\">\r\n            <label class=\"col-4 \"></label>\r\n            <div class=\"col-8 asset-input-alret alert alert-danger arrow-alert\">\r\n              You must specify an asset\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-6\">\r\n        </div>\r\n     </div>\r\n      <div class=\"row\" *ngIf=\"existingWorkOrderAssets.length === 0\">\r\n        <div class=\"col-sm-6 mb-2 mb-sm-3\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <label class=\"col-4 \">Asset</label>\r\n            <div class=\"col-8 asset-input-size\">\r\n              <input type=\"text\" readonly  [value]=\"\" class=\"readonly form-control\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-6 mb-2 mb-sm-3\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <label class=\"col-4\">Location</label>\r\n            <div class=\"col-8  d-flex align-items-center\">\r\n              <input type=\"text\" class=\"form-control readonly\"  [value]=\"\" readonly/>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15.002\" height=\"19.003\" viewBox=\"0 0 14.002 18.003\" class=\"del-icon opacity-50\" >\r\n                <g id=\"wrench\" transform=\"translate(0.001 0)\">\r\n                  <path id=\"Path_1563\" data-name=\"Path 1563\" d=\"M12.333,3.933,1.267,3.8c-.133.133-.4.133-.533.267A.8.8,0,0,0,.6,4.6L1.8,16.2c0,.4.267.533.667.533h8.267A.61.61,0,0,0,11.4,16.2L12.867,4.6a.8.8,0,0,0-.133-.533,1.343,1.343,0,0,0-.4-.134Zm-2,11.6h-7.2L2.067,5.267h9.467Z\" transform=\"translate(0.2 1.267)\"/>\r\n                  <path id=\"Path_1564\" data-name=\"Path 1564\" d=\"M13.333,3.2H10.667A3.739,3.739,0,0,0,6.933,0a3.607,3.607,0,0,0-3.6,3.2H.667A.63.63,0,0,0,0,3.867a.63.63,0,0,0,.667.667H13.333A.63.63,0,0,0,14,3.867a.63.63,0,0,0-.667-.667Zm-6.4-1.867A2.442,2.442,0,0,1,9.333,3.2H4.667A2.407,2.407,0,0,1,6.933,1.333Z\"/>\r\n                  <path id=\"Path_1565\" data-name=\"Path 1565\" d=\"M5.367,13.467a.63.63,0,0,0,.667-.667V6.667A.63.63,0,0,0,5.367,6a.63.63,0,0,0-.667.667v6.267C4.7,13.2,5.1,13.467,5.367,13.467Z\" transform=\"translate(1.567 2)\"/>\r\n                  <path id=\"Path_1566\" data-name=\"Path 1566\" d=\"M3.9,13.5a.714.714,0,0,0,.667-.667L4.033,6.567A.714.714,0,0,0,3.367,5.9a.845.845,0,0,0-.667.8l.533,6.267A.886.886,0,0,0,3.9,13.5Z\" transform=\"translate(0.9 1.967)\"/>\r\n                  <path id=\"Path_1567\" data-name=\"Path 1567\" d=\"M6.942,13.475a.63.63,0,0,0,.667-.667l.533-6.267c.133-.267-.133-.533-.533-.533-.4-.133-.667.133-.667.533l-.533,6.267c-.134.4.133.667.533.667Z\" transform=\"translate(2.125 1.991)\"/>\r\n                </g>\r\n              </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\"  *ngFor=\"let workOrderAsset of existingWorkOrderAssets\">\r\n        <div class=\"col-sm-6 mb-2 mb-sm-3\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <label class=\"col-4 \">Asset</label>\r\n            <div class=\"col-8 asset-input-size\">\r\n              <input type=\"text\" readonly  [value]=\"workOrderAsset.assetId + ' - ' + workOrderAsset.name\" class=\"readonly form-control\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-6 mb-2 mb-sm-3\">\r\n          <div class=\"d-flex align-items-center\">\r\n            <label class=\"col-4\">Location</label>\r\n            <div class=\"col-8  d-flex align-items-center\">\r\n              <input type=\"text\" class=\"form-control readonly\"  [value]=\"workOrderAsset.location\" readonly/>\r\n              <button (click)=\"handleDeleteAsset(workOrderAsset)\"  class=\"del-icon-button\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15.002\" height=\"19.003\" viewBox=\"0 0 14.002 18.003\" class=\"del-icon \">\r\n                <g id=\"wrench\" transform=\"translate(0.001 0)\">\r\n                  <path id=\"Path_1563\" data-name=\"Path 1563\" d=\"M12.333,3.933,1.267,3.8c-.133.133-.4.133-.533.267A.8.8,0,0,0,.6,4.6L1.8,16.2c0,.4.267.533.667.533h8.267A.61.61,0,0,0,11.4,16.2L12.867,4.6a.8.8,0,0,0-.133-.533,1.343,1.343,0,0,0-.4-.134Zm-2,11.6h-7.2L2.067,5.267h9.467Z\" transform=\"translate(0.2 1.267)\"/>\r\n                  <path id=\"Path_1564\" data-name=\"Path 1564\" d=\"M13.333,3.2H10.667A3.739,3.739,0,0,0,6.933,0a3.607,3.607,0,0,0-3.6,3.2H.667A.63.63,0,0,0,0,3.867a.63.63,0,0,0,.667.667H13.333A.63.63,0,0,0,14,3.867a.63.63,0,0,0-.667-.667Zm-6.4-1.867A2.442,2.442,0,0,1,9.333,3.2H4.667A2.407,2.407,0,0,1,6.933,1.333Z\"/>\r\n                  <path id=\"Path_1565\" data-name=\"Path 1565\" d=\"M5.367,13.467a.63.63,0,0,0,.667-.667V6.667A.63.63,0,0,0,5.367,6a.63.63,0,0,0-.667.667v6.267C4.7,13.2,5.1,13.467,5.367,13.467Z\" transform=\"translate(1.567 2)\"/>\r\n                  <path id=\"Path_1566\" data-name=\"Path 1566\" d=\"M3.9,13.5a.714.714,0,0,0,.667-.667L4.033,6.567A.714.714,0,0,0,3.367,5.9a.845.845,0,0,0-.667.8l.533,6.267A.886.886,0,0,0,3.9,13.5Z\" transform=\"translate(0.9 1.967)\"/>\r\n                  <path id=\"Path_1567\" data-name=\"Path 1567\" d=\"M6.942,13.475a.63.63,0,0,0,.667-.667l.533-6.267c.133-.267-.133-.533-.533-.533-.4-.133-.667.133-.667.533l-.533,6.267c-.134.4.133.667.533.667Z\" transform=\"translate(2.125 1.991)\"/>\r\n                </g>\r\n              </svg>\r\n            </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"pb-4\">\r\n        <button class=\"btn btn-link p-0 add-asset\" (click)=\"handlePickAssets()\">Add asset</button>\r\n      </div>\r\n\r\n      <div class=\"d-flex mb-sm-4 mb-2\">\r\n        <div class=\"col-4 col-sm-2 pt-4\">\r\n          <label class=\"pt-2\">Checklists</label>\r\n        </div>\r\n        <div class=\"col-8 col-sm-10\">\r\n          <mat-form-field>\r\n            <mat-chip-list #chipList>\r\n              <mat-chip *ngFor=\"let checklist of checklists\">{{ checklist.name }}</mat-chip>\r\n              <input\r\n                readonly\r\n                [matChipInputFor]=\"chipList\"\r\n                [matChipInputAddOnBlur]=\"true\"\r\n                (matChipInputTokenEnd)=\"addCheckList($event)\" />\r\n            </mat-chip-list>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"pb-4\">\r\n        <button class=\"btn btn-link p-0 add-asset\" (click)=\"handlePickCheckLists()\">Add Checklist</button>\r\n      </div>\r\n\r\n    </div>\r\n    <footer>\r\n      <div class=\"form-actions\" [class.visible]=\"formCreateWorkOrder.dirty || showSaveButton\">\r\n        <button\r\n          class=\"btn btn-primary btn-block col-12\"\r\n          (click)=\"createWorkOrder()\"\r\n        >\r\n        Save all changes\r\n        </button>\r\n      </div>\r\n    </footer>\r\n  </form>\r\n  <app-modal\r\n    *ngIf=\"addAssetsModalVisible\"\r\n    (modalShouldClose)=\"handleDetailsModalClose()\"\r\n    (contextmenu)=\"disableRightClick($event)\"\r\n    >\r\n    <app-pick-assets\r\n      (addedAssets)=\"handleAddedWorkOrderAssets($event)\"\r\n      [existingAssets]=\"existingWorkOrderAssets\"\r\n      >\r\n    </app-pick-assets>\r\n  </app-modal>\r\n\r\n  <app-modal\r\n    *ngIf=\"pickCheckListsModalVisible\"\r\n    (modalShouldClose)=\"handlePickCheckListsModalClose()\"\r\n    (contextmenu)=\"disableRightClick($event)\"\r\n  >\r\n      <app-pick-check-lists\r\n     [existingChecklists]=\"existingWorkOrderChecklists\"\r\n     (addedCheckLists)=\"handlePickWorkOrderCheckLists($event)\"\r\n\r\n    >\r\n    </app-pick-check-lists>\r\n  </app-modal>\r\n\r\n</article>\r\n","import { SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, ENTER } from '@angular/cdk/keycodes';\nimport { InjectionToken, Directive, EventEmitter, ElementRef, NgZone, Optional, Inject, ChangeDetectorRef, Attribute, ContentChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Self, ContentChildren, NgModule } from '@angular/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, RippleRenderer, MAT_RIPPLE_GLOBAL_OPTIONS, mixinErrorState, ErrorStateMatcher, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, merge } from 'rxjs';\nimport { take, takeUntil, startWith } from 'rxjs/operators';\nimport { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { NgForm, FormGroupDirective, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material/form-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Event object emitted by MatChip when selected or deselected. */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\nimport * as ɵngcc3 from '@angular/forms';\nimport * as ɵngcc4 from '@angular/material/core';\n\nconst _c0 = [\"*\"];\nclass MatChipSelectionChange {\n    constructor(\n    /** Reference to the chip that emitted the event. */\n    source, \n    /** Whether the chip that emitted the event is selected. */\n    selected, \n    /** Whether the selection change was a result of a user interaction. */\n    isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n// Boilerplate for applying mixins to MatChip.\n/** @docs-private */\nclass MatChipBase {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nconst _MatChipMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(MatChipBase), 'primary'), -1);\n/**\n * Dummy directive to add CSS class to chip avatar.\n * @docs-private\n */\nclass MatChipAvatar {\n}\nMatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) { return new (t || MatChipAvatar)(); };\nMatChipAvatar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipAvatar, selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], hostAttrs: [1, \"mat-chip-avatar\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipAvatar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-avatar, [matChipAvatar]',\n                host: { 'class': 'mat-chip-avatar' },\n                providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }]\n            }]\n    }], null, null); })();\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * @docs-private\n */\nclass MatChipTrailingIcon {\n}\nMatChipTrailingIcon.ɵfac = function MatChipTrailingIcon_Factory(t) { return new (t || MatChipTrailingIcon)(); };\nMatChipTrailingIcon.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipTrailingIcon, selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]], hostAttrs: [1, \"mat-chip-trailing-icon\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }])] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                host: { 'class': 'mat-chip-trailing-icon' },\n                providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }]\n            }]\n    }], null, null); })();\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\nclass MatChip extends _MatChipMixinBase {\n    constructor(_elementRef, _ngZone, platform, globalRippleOptions, _changeDetectorRef, _document, animationMode, tabIndex) {\n        super(_elementRef);\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Whether the chip has focus. */\n        this._hasFocus = false;\n        /** Whether the chip list is selectable */\n        this.chipListSelectable = true;\n        /** Whether the chip list is in multi-selection mode. */\n        this._chipListMultiple = false;\n        /** Whether the chip list as a whole is disabled. */\n        this._chipListDisabled = false;\n        this._selected = false;\n        this._selectable = true;\n        this._disabled = false;\n        this._removable = true;\n        /** Emits when the chip is focused. */\n        this._onFocus = new Subject();\n        /** Emits when the chip is blured. */\n        this._onBlur = new Subject();\n        /** Emitted when the chip is selected or deselected. */\n        this.selectionChange = new EventEmitter();\n        /** Emitted when the chip is destroyed. */\n        this.destroyed = new EventEmitter();\n        /** Emitted when a chip is to be removed. */\n        this.removed = new EventEmitter();\n        this._addHostClassName();\n        // Dynamically create the ripple target, append it within the chip, and use it as the\n        // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n        // the proper styles.\n        this._chipRippleTarget = _document.createElement('div');\n        this._chipRippleTarget.classList.add('mat-chip-ripple');\n        this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n        this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n        this._chipRipple.setupTriggerEvents(_elementRef);\n        this.rippleConfig = globalRippleOptions || {};\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n        this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n    }\n    /**\n     * Whether ripples are disabled on interaction\n     * @docs-private\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._animationsDisabled ||\n            !!this.rippleConfig.disabled;\n    }\n    /** Whether the chip is selected. */\n    get selected() { return this._selected; }\n    set selected(value) {\n        const coercedValue = coerceBooleanProperty(value);\n        if (coercedValue !== this._selected) {\n            this._selected = coercedValue;\n            this._dispatchSelectionChange();\n        }\n    }\n    /** The value of the chip. Defaults to the content inside `<mat-chip>` tags. */\n    get value() {\n        return this._value !== undefined\n            ? this._value\n            : this._elementRef.nativeElement.textContent;\n    }\n    set value(value) { this._value = value; }\n    /**\n     * Whether or not the chip is selectable. When a chip is not selectable,\n     * changes to its selected state are always ignored. By default a chip is\n     * selectable, and it becomes non-selectable if its parent chip list is\n     * not selectable.\n     */\n    get selectable() { return this._selectable && this.chipListSelectable; }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n    }\n    /** Whether the chip is disabled. */\n    get disabled() { return this._chipListDisabled || this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     */\n    get removable() { return this._removable; }\n    set removable(value) {\n        this._removable = coerceBooleanProperty(value);\n    }\n    /** The ARIA selected applied to the chip. */\n    get ariaSelected() {\n        // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n        // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n        return this.selectable && (this._chipListMultiple || this.selected) ?\n            this.selected.toString() : null;\n    }\n    _addHostClassName() {\n        const basicChipAttrName = 'mat-basic-chip';\n        const element = this._elementRef.nativeElement;\n        if (element.hasAttribute(basicChipAttrName) ||\n            element.tagName.toLowerCase() === basicChipAttrName) {\n            element.classList.add(basicChipAttrName);\n            return;\n        }\n        else {\n            element.classList.add('mat-standard-chip');\n        }\n    }\n    ngOnDestroy() {\n        this.destroyed.emit({ chip: this });\n        this._chipRipple._removeTriggerEvents();\n    }\n    /** Selects the chip. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Deselects the chip. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._dispatchSelectionChange();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Select this chip and emit selected event */\n    selectViaInteraction() {\n        if (!this._selected) {\n            this._selected = true;\n            this._dispatchSelectionChange(true);\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Toggles the current selected state of this chip. */\n    toggleSelected(isUserInput = false) {\n        this._selected = !this.selected;\n        this._dispatchSelectionChange(isUserInput);\n        this._changeDetectorRef.markForCheck();\n        return this.selected;\n    }\n    /** Allows for programmatic focusing of the chip. */\n    focus() {\n        if (!this._hasFocus) {\n            this._elementRef.nativeElement.focus();\n            this._onFocus.next({ chip: this });\n        }\n        this._hasFocus = true;\n    }\n    /**\n     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n     * BACKSPACE keys are pressed.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     */\n    remove() {\n        if (this.removable) {\n            this.removed.emit({ chip: this });\n        }\n    }\n    /** Handles click events on the chip. */\n    _handleClick(event) {\n        if (this.disabled) {\n            event.preventDefault();\n        }\n        else {\n            event.stopPropagation();\n        }\n    }\n    /** Handle custom key presses. */\n    _handleKeydown(event) {\n        if (this.disabled) {\n            return;\n        }\n        switch (event.keyCode) {\n            case DELETE:\n            case BACKSPACE:\n                // If we are removable, remove the focused chip\n                this.remove();\n                // Always prevent so page navigation does not occur\n                event.preventDefault();\n                break;\n            case SPACE:\n                // If we are selectable, toggle the focused chip\n                if (this.selectable) {\n                    this.toggleSelected(true);\n                }\n                // Always prevent space from scrolling the page since the list has focus\n                event.preventDefault();\n                break;\n        }\n    }\n    _blur() {\n        // When animations are enabled, Angular may end up removing the chip from the DOM a little\n        // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n        // that moves focus not the next item. To work around the issue, we defer marking the chip\n        // as not focused until the next time the zone stabilizes.\n        this._ngZone.onStable\n            .pipe(take(1))\n            .subscribe(() => {\n            this._ngZone.run(() => {\n                this._hasFocus = false;\n                this._onBlur.next({ chip: this });\n            });\n        });\n    }\n    _dispatchSelectionChange(isUserInput = false) {\n        this.selectionChange.emit({\n            source: this,\n            isUserInput,\n            selected: this._selected\n        });\n    }\n}\nMatChip.ɵfac = function MatChip_Factory(t) { return new (t || MatChip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵinjectAttribute('tabindex')); };\nMatChip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChip, selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]], contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 1);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.avatar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n    } }, hostAttrs: [\"role\", \"option\", 1, \"mat-chip\", \"mat-focus-indicator\"], hostVars: 14, hostBindings: function MatChip_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChip_click_HostBindingHandler($event) { return ctx._handleClick($event); })(\"keydown\", function MatChip_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"focus\", function MatChip_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChip_blur_HostBindingHandler() { return ctx._blur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx.tabIndex)(\"disabled\", ctx.disabled || null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-selected\", ctx.ariaSelected);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-selected\", ctx.selected)(\"mat-chip-with-avatar\", ctx.avatar)(\"mat-chip-with-trailing-icon\", ctx.trailingIcon || ctx.removeIcon)(\"mat-chip-disabled\", ctx.disabled)(\"_mat-animation-noopable\", ctx._animationsDisabled);\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\", selected: \"selected\", value: \"value\", selectable: \"selectable\", disabled: \"disabled\", removable: \"removable\" }, outputs: { selectionChange: \"selectionChange\", destroyed: \"destroyed\", removed: \"removed\" }, exportAs: [\"matChip\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatChip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] }\n];\nMatChip.propDecorators = {\n    avatar: [{ type: ContentChild, args: [MAT_CHIP_AVATAR,] }],\n    trailingIcon: [{ type: ContentChild, args: [MAT_CHIP_TRAILING_ICON,] }],\n    removeIcon: [{ type: ContentChild, args: [MAT_CHIP_REMOVE,] }],\n    selected: [{ type: Input }],\n    value: [{ type: Input }],\n    selectable: [{ type: Input }],\n    disabled: [{ type: Input }],\n    removable: [{ type: Input }],\n    selectionChange: [{ type: Output }],\n    destroyed: [{ type: Output }],\n    removed: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChip, [{\n        type: Directive,\n        args: [{\n                selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n                inputs: ['color', 'disableRipple', 'tabIndex'],\n                exportAs: 'matChip',\n                host: {\n                    'class': 'mat-chip mat-focus-indicator',\n                    '[attr.tabindex]': 'disabled ? null : tabIndex',\n                    'role': 'option',\n                    '[class.mat-chip-selected]': 'selected',\n                    '[class.mat-chip-with-avatar]': 'avatar',\n                    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n                    '[class.mat-chip-disabled]': 'disabled',\n                    '[class._mat-animation-noopable]': '_animationsDisabled',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-selected]': 'ariaSelected',\n                    '(click)': '_handleClick($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], destroyed: [{\n            type: Output\n        }], removed: [{\n            type: Output\n        }], selected: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], removable: [{\n            type: Input\n        }], avatar: [{\n            type: ContentChild,\n            args: [MAT_CHIP_AVATAR]\n        }], trailingIcon: [{\n            type: ContentChild,\n            args: [MAT_CHIP_TRAILING_ICON]\n        }], removeIcon: [{\n            type: ContentChild,\n            args: [MAT_CHIP_REMOVE]\n        }] }); })();\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\nclass MatChipRemove {\n    constructor(_parentChip, elementRef) {\n        this._parentChip = _parentChip;\n        if (elementRef.nativeElement.nodeName === 'BUTTON') {\n            elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    /** Calls the parent chip's public `remove()` method if applicable. */\n    _handleClick(event) {\n        const parentChip = this._parentChip;\n        if (parentChip.removable && !parentChip.disabled) {\n            parentChip.remove();\n        }\n        // We need to stop event propagation because otherwise the event will bubble up to the\n        // form field and cause the `onContainerClick` method to be invoked. This method would then\n        // reset the focused chip that has been focused after chip removal. Usually the parent\n        // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n        // that the chip is being removed before the event bubbles up.\n        event.stopPropagation();\n    }\n}\nMatChipRemove.ɵfac = function MatChipRemove_Factory(t) { return new (t || MatChipRemove)(ɵngcc0.ɵɵdirectiveInject(MatChip), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatChipRemove.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipRemove, selectors: [[\"\", \"matChipRemove\", \"\"]], hostAttrs: [1, \"mat-chip-remove\", \"mat-chip-trailing-icon\"], hostBindings: function MatChipRemove_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatChipRemove_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }])] });\nMatChipRemove.ctorParameters = () => [\n    { type: MatChip },\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipRemove, [{\n        type: Directive,\n        args: [{\n                selector: '[matChipRemove]',\n                host: {\n                    'class': 'mat-chip-remove mat-chip-trailing-icon',\n                    '(click)': '_handleClick($event)'\n                },\n                providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }]\n            }]\n    }], function () { return [{ type: MatChip }, { type: ɵngcc0.ElementRef }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for the chips module. */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Boilerplate for applying mixins to MatChipList.\n/** @docs-private */\nclass MatChipListBase {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}\nconst _MatChipListMixinBase = mixinErrorState(MatChipListBase);\n// Increasing integer for generating unique ids for chip-list components.\nlet nextUniqueId = 0;\n/** Change event object that is emitted when the chip list value has changed. */\nclass MatChipListChange {\n    constructor(\n    /** Chip list that emitted the event. */\n    source, \n    /** Value of the chip list when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\nclass MatChipList extends _MatChipListMixinBase {\n    constructor(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, \n    /** @docs-private */\n    ngControl) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this.ngControl = ngControl;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-chip-list';\n        /**\n         * When a chip is destroyed, we store the index of the destroyed chip until the chips\n         * query list notifies about the update. This is necessary because we cannot determine an\n         * appropriate chip that should receive focus until the array of chips updated completely.\n         */\n        this._lastDestroyedChipIndex = null;\n        /** Subject that emits when the component has been destroyed. */\n        this._destroyed = new Subject();\n        /** Uid of the chip list */\n        this._uid = `mat-chip-list-${nextUniqueId++}`;\n        /** Tab index for the chip list. */\n        this._tabIndex = 0;\n        /**\n         * User defined tab index.\n         * When it is not null, use user defined tab index. Otherwise use _tabIndex\n         */\n        this._userTabIndex = null;\n        /** Function when touched */\n        this._onTouched = () => { };\n        /** Function when changed */\n        this._onChange = () => { };\n        this._multiple = false;\n        this._compareWith = (o1, o2) => o1 === o2;\n        this._required = false;\n        this._disabled = false;\n        /** Orientation of the chip list. */\n        this.ariaOrientation = 'horizontal';\n        this._selectable = true;\n        /** Event emitted when the selected chip list value has been changed by the user. */\n        this.change = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n    }\n    /** The array of selected chips inside chip list. */\n    get selected() {\n        return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n    }\n    /** The ARIA role applied to the chip list. */\n    get role() { return this.empty ? null : 'listbox'; }\n    /** Whether the user should be allowed to select multiple chips. */\n    get multiple() { return this._multiple; }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() { return this._compareWith; }\n    set compareWith(fn) {\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() { return this._value; }\n    set value(value) {\n        this.writeValue(value);\n        this._value = value;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._chipInput ? this._chipInput.id : this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() { return this._required; }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether any chips or the matChipInput inside of this chip-list has focus. */\n    get focused() {\n        return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._chipInput || this._chipInput.empty) && (!this.chips || this.chips.length === 0);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() { return !this.empty || this.focused; }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._syncChipsState();\n    }\n    /**\n     * Whether or not this chip list is selectable. When a chip list is not selectable,\n     * the selected states for all the chips inside the chip list are always ignored.\n     */\n    get selectable() { return this._selectable; }\n    set selectable(value) {\n        this._selectable = coerceBooleanProperty(value);\n        if (this.chips) {\n            this.chips.forEach(chip => chip.chipListSelectable = this._selectable);\n        }\n    }\n    set tabIndex(value) {\n        this._userTabIndex = value;\n        this._tabIndex = value;\n    }\n    /** Combined stream of all of the child chips' selection change events. */\n    get chipSelectionChanges() {\n        return merge(...this.chips.map(chip => chip.selectionChange));\n    }\n    /** Combined stream of all of the child chips' focus change events. */\n    get chipFocusChanges() {\n        return merge(...this.chips.map(chip => chip._onFocus));\n    }\n    /** Combined stream of all of the child chips' blur change events. */\n    get chipBlurChanges() {\n        return merge(...this.chips.map(chip => chip._onBlur));\n    }\n    /** Combined stream of all of the child chips' remove change events. */\n    get chipRemoveChanges() {\n        return merge(...this.chips.map(chip => chip.destroyed));\n    }\n    ngAfterContentInit() {\n        this._keyManager = new FocusKeyManager(this.chips)\n            .withWrap()\n            .withVerticalOrientation()\n            .withHomeAndEnd()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n        if (this._dir) {\n            this._dir.change\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(dir => this._keyManager.withHorizontalOrientation(dir));\n        }\n        this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._allowFocusEscape();\n        });\n        // When the list changes, re-subscribe\n        this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then(() => {\n                    this._syncChipsState();\n                });\n            }\n            this._resetChips();\n            // Reset chips selected/deselected status\n            this._initializeSelection();\n            // Check to see if we need to update our tab index\n            this._updateTabIndex();\n            // Check to see if we have a destroyed chip and need to refocus\n            this._updateFocusForDestroyedChips();\n            this.stateChanges.next();\n        });\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n        this.stateChanges.next();\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n            if (this.ngControl.disabled !== this._disabled) {\n                this.disabled = !!this.ngControl.disabled;\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this.stateChanges.complete();\n        this._dropSubscriptions();\n    }\n    /** Associates an HTML input element with this chip list. */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n        // We use this attribute to match the chip list to its input in test harnesses.\n        // Set the attribute directly here to avoid \"changed after checked\" errors.\n        this._elementRef.nativeElement.setAttribute('data-mat-chip-input', inputElement.id);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) { this._ariaDescribedby = ids.join(' '); }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        if (this.chips) {\n            this._setSelectionByValue(value, false);\n        }\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event) {\n        if (!this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first non-disabled chip in this chip list, or the associated input when there\n     * are no eligible chips.\n     */\n    focus(options) {\n        if (this.disabled) {\n            return;\n        }\n        // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n        // Focus on first element if there's no chipInput inside chip-list\n        if (this._chipInput && this._chipInput.focused) {\n            // do nothing\n        }\n        else if (this.chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n            this.stateChanges.next();\n        }\n        else {\n            this._focusInput(options);\n            this.stateChanges.next();\n        }\n    }\n    /** Attempt to focus an input if we have one. */\n    _focusInput(options) {\n        if (this._chipInput) {\n            this._chipInput.focus(options);\n        }\n    }\n    /**\n     * Pass events to the keyboard manager. Available here for tests.\n     */\n    _keydown(event) {\n        const target = event.target;\n        // If they are on an empty input and hit backspace, focus the last chip\n        if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n            this._keyManager.setLastItemActive();\n            event.preventDefault();\n        }\n        else if (target && target.classList.contains('mat-chip')) {\n            this._keyManager.onKeydown(event);\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Check the tab index as you should not be allowed to focus an empty list.\n     */\n    _updateTabIndex() {\n        // If we have 0 chips, we should not allow keyboard focus\n        this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n    }\n    /**\n     * If the amount of chips changed, we need to update the\n     * key manager state and focus the next closest chip.\n     */\n    _updateFocusForDestroyedChips() {\n        // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n        if (this._lastDestroyedChipIndex != null) {\n            if (this.chips.length) {\n                const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n                this._keyManager.setActiveItem(newChipIndex);\n            }\n            else {\n                this.focus();\n            }\n        }\n        this._lastDestroyedChipIndex = null;\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this.chips.length;\n    }\n    _isInputEmpty(element) {\n        if (element && element.nodeName.toLowerCase() === 'input') {\n            let input = element;\n            return !input.value;\n        }\n        return false;\n    }\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        this.chips.forEach(chip => chip.deselect());\n        if (Array.isArray(value)) {\n            value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n            this._sortValues();\n        }\n        else {\n            const correspondingChip = this._selectValue(value, isUserInput);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what chip the user interacted with last.\n            if (correspondingChip) {\n                if (isUserInput) {\n                    this._keyManager.setActiveItem(correspondingChip);\n                }\n            }\n        }\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @returns Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput = true) {\n        const correspondingChip = this.chips.find(chip => {\n            return chip.value != null && this._compareWith(chip.value, value);\n        });\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n            this._selectionModel.select(correspondingChip);\n        }\n        return correspondingChip;\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl || this._value) {\n                this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n                this.stateChanges.next();\n            }\n        });\n    }\n    /**\n     * Deselects every chip in the list.\n     * @param skip Chip that should not be deselected.\n     */\n    _clearSelection(skip) {\n        this._selectionModel.clear();\n        this.chips.forEach(chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        });\n        this.stateChanges.next();\n    }\n    /**\n     * Sorts the model values, ensuring that they keep the same\n     * order that they have in the panel.\n     */\n    _sortValues() {\n        if (this._multiple) {\n            this._selectionModel.clear();\n            this.chips.forEach(chip => {\n                if (chip.selected) {\n                    this._selectionModel.select(chip);\n                }\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map(chip => chip.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** When blurred, mark the field as touched when focus moved outside the chip list. */\n    _blur() {\n        if (!this._hasFocusedChip()) {\n            this._keyManager.setActiveItem(-1);\n        }\n        if (!this.disabled) {\n            if (this._chipInput) {\n                // If there's a chip input, we should check whether the focus moved to chip input.\n                // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n                // to chip input, do nothing.\n                // Timeout is needed to wait for the focus() event trigger on chip input.\n                setTimeout(() => {\n                    if (!this.focused) {\n                        this._markAsTouched();\n                    }\n                });\n            }\n            else {\n                // If there's no chip input, then mark the field as touched.\n                this._markAsTouched();\n            }\n        }\n    }\n    /** Mark the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /**\n     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the list from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        if (this._tabIndex !== -1) {\n            this._tabIndex = -1;\n            setTimeout(() => {\n                this._tabIndex = this._userTabIndex || 0;\n                this._changeDetectorRef.markForCheck();\n            });\n        }\n    }\n    _resetChips() {\n        this._dropSubscriptions();\n        this._listenToChipsFocus();\n        this._listenToChipsSelection();\n        this._listenToChipsRemoved();\n    }\n    _dropSubscriptions() {\n        if (this._chipFocusSubscription) {\n            this._chipFocusSubscription.unsubscribe();\n            this._chipFocusSubscription = null;\n        }\n        if (this._chipBlurSubscription) {\n            this._chipBlurSubscription.unsubscribe();\n            this._chipBlurSubscription = null;\n        }\n        if (this._chipSelectionSubscription) {\n            this._chipSelectionSubscription.unsubscribe();\n            this._chipSelectionSubscription = null;\n        }\n        if (this._chipRemoveSubscription) {\n            this._chipRemoveSubscription.unsubscribe();\n            this._chipRemoveSubscription = null;\n        }\n    }\n    /** Listens to user-generated selection events on each chip. */\n    _listenToChipsSelection() {\n        this._chipSelectionSubscription = this.chipSelectionChanges.subscribe(event => {\n            event.source.selected\n                ? this._selectionModel.select(event.source)\n                : this._selectionModel.deselect(event.source);\n            // For single selection chip list, make sure the deselected value is unselected.\n            if (!this.multiple) {\n                this.chips.forEach(chip => {\n                    if (!this._selectionModel.isSelected(chip) && chip.selected) {\n                        chip.deselect();\n                    }\n                });\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        });\n    }\n    /** Listens to user-generated selection events on each chip. */\n    _listenToChipsFocus() {\n        this._chipFocusSubscription = this.chipFocusChanges.subscribe(event => {\n            let chipIndex = this.chips.toArray().indexOf(event.chip);\n            if (this._isValidIndex(chipIndex)) {\n                this._keyManager.updateActiveItem(chipIndex);\n            }\n            this.stateChanges.next();\n        });\n        this._chipBlurSubscription = this.chipBlurChanges.subscribe(() => {\n            this._blur();\n            this.stateChanges.next();\n        });\n    }\n    _listenToChipsRemoved() {\n        this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(event => {\n            const chip = event.chip;\n            const chipIndex = this.chips.toArray().indexOf(event.chip);\n            // In case the chip that will be removed is currently focused, we temporarily store\n            // the index in order to be able to determine an appropriate sibling chip that will\n            // receive focus.\n            if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n                this._lastDestroyedChipIndex = chipIndex;\n            }\n        });\n    }\n    /** Checks whether an event comes from inside a chip element. */\n    _originatesFromChip(event) {\n        let currentElement = event.target;\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /** Checks whether any of the chips is focused. */\n    _hasFocusedChip() {\n        return this.chips && this.chips.some(chip => chip._hasFocus);\n    }\n    /** Syncs the list's state with the individual chips. */\n    _syncChipsState() {\n        if (this.chips) {\n            this.chips.forEach(chip => {\n                chip._chipListDisabled = this._disabled;\n                chip._chipListMultiple = this.multiple;\n            });\n        }\n    }\n}\nMatChipList.ɵfac = function MatChipList_Factory(t) { return new (t || MatChipList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgForm, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.FormGroupDirective, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.ErrorStateMatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc3.NgControl, 10)); };\nMatChipList.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatChipList, selectors: [[\"mat-chip-list\"]], contentQueries: function MatChipList_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatChip, 1);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.chips = _t);\n    } }, hostAttrs: [1, \"mat-chip-list\"], hostVars: 15, hostBindings: function MatChipList_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"focus\", function MatChipList_focus_HostBindingHandler() { return ctx.focus(); })(\"blur\", function MatChipList_blur_HostBindingHandler() { return ctx._blur(); })(\"keydown\", function MatChipList_keydown_HostBindingHandler($event) { return ctx._keydown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx._uid);\n        ɵngcc0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : ctx._tabIndex)(\"aria-describedby\", ctx._ariaDescribedby || null)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState)(\"aria-multiselectable\", ctx.multiple)(\"role\", ctx.role)(\"aria-orientation\", ctx.ariaOrientation);\n        ɵngcc0.ɵɵclassProp(\"mat-chip-list-disabled\", ctx.disabled)(\"mat-chip-list-invalid\", ctx.errorState)(\"mat-chip-list-required\", ctx.required);\n    } }, inputs: { ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], multiple: \"multiple\", compareWith: \"compareWith\", value: \"value\", required: \"required\", placeholder: \"placeholder\", disabled: \"disabled\", selectable: \"selectable\", tabIndex: \"tabIndex\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, exportAs: [\"matChipList\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: MatFormFieldControl, useExisting: MatChipList }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 2, vars: 0, consts: [[1, \"mat-chip-list-wrapper\"]], template: function MatChipList_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵprojection(1);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"], encapsulation: 2, changeDetection: 0 });\nMatChipList.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgForm, decorators: [{ type: Optional }] },\n    { type: FormGroupDirective, decorators: [{ type: Optional }] },\n    { type: ErrorStateMatcher },\n    { type: NgControl, decorators: [{ type: Optional }, { type: Self }] }\n];\nMatChipList.propDecorators = {\n    errorStateMatcher: [{ type: Input }],\n    multiple: [{ type: Input }],\n    compareWith: [{ type: Input }],\n    value: [{ type: Input }],\n    required: [{ type: Input }],\n    placeholder: [{ type: Input }],\n    disabled: [{ type: Input }],\n    ariaOrientation: [{ type: Input, args: ['aria-orientation',] }],\n    selectable: [{ type: Input }],\n    tabIndex: [{ type: Input }],\n    change: [{ type: Output }],\n    valueChange: [{ type: Output }],\n    chips: [{ type: ContentChildren, args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                },] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipList, [{\n        type: Component,\n        args: [{\n                selector: 'mat-chip-list',\n                template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n                exportAs: 'matChipList',\n                host: {\n                    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n                    '[attr.aria-describedby]': '_ariaDescribedby || null',\n                    '[attr.aria-required]': 'role ? required : null',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.aria-invalid]': 'errorState',\n                    '[attr.aria-multiselectable]': 'multiple',\n                    '[attr.role]': 'role',\n                    '[class.mat-chip-list-disabled]': 'disabled',\n                    '[class.mat-chip-list-invalid]': 'errorState',\n                    '[class.mat-chip-list-required]': 'required',\n                    '[attr.aria-orientation]': 'ariaOrientation',\n                    'class': 'mat-chip-list',\n                    '(focus)': 'focus()',\n                    '(blur)': '_blur()',\n                    '(keydown)': '_keydown($event)',\n                    '[id]': '_uid'\n                },\n                providers: [{ provide: MatFormFieldControl, useExisting: MatChipList }],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\\\"\\\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.NgForm, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc3.FormGroupDirective, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc4.ErrorStateMatcher }, { type: ɵngcc3.NgControl, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }]; }, { ariaOrientation: [{\n            type: Input,\n            args: ['aria-orientation']\n        }], change: [{\n            type: Output\n        }], valueChange: [{\n            type: Output\n        }], multiple: [{\n            type: Input\n        }], compareWith: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], required: [{\n            type: Input\n        }], placeholder: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], selectable: [{\n            type: Input\n        }], tabIndex: [{\n            type: Input\n        }], errorStateMatcher: [{\n            type: Input\n        }], chips: [{\n            type: ContentChildren,\n            args: [MatChip, {\n                    // We need to use `descendants: true`, because Ivy will no longer match\n                    // indirect descendants if it's left as false.\n                    descendants: true\n                }]\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Increasing integer for generating unique ids.\nlet nextUniqueId$1 = 0;\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\nclass MatChipInput {\n    constructor(_elementRef, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._defaultOptions = _defaultOptions;\n        /** Whether the control is focused. */\n        this.focused = false;\n        this._addOnBlur = false;\n        /**\n         * The list of key codes that will trigger a chipEnd event.\n         *\n         * Defaults to `[ENTER]`.\n         */\n        this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;\n        /** Emitted when a chip is to be added. */\n        this.chipEnd = new EventEmitter();\n        /** The input's placeholder text. */\n        this.placeholder = '';\n        /** Unique id for the input. */\n        this.id = `mat-chip-list-input-${nextUniqueId$1++}`;\n        this._disabled = false;\n        this._inputElement = this._elementRef.nativeElement;\n    }\n    /** Register input for chip list */\n    set chipList(value) {\n        if (value) {\n            this._chipList = value;\n            this._chipList.registerInput(this);\n        }\n    }\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     */\n    get addOnBlur() { return this._addOnBlur; }\n    set addOnBlur(value) { this._addOnBlur = coerceBooleanProperty(value); }\n    /** Whether the input is disabled. */\n    get disabled() { return this._disabled || (this._chipList && this._chipList.disabled); }\n    set disabled(value) { this._disabled = coerceBooleanProperty(value); }\n    /** Whether the input is empty. */\n    get empty() { return !this._inputElement.value; }\n    ngOnChanges() {\n        this._chipList.stateChanges.next();\n    }\n    /** Utility method to make host definition/tests more clear. */\n    _keydown(event) {\n        // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n        // want to do this when going backwards, because focus should go back to the first chip.\n        if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n            this._chipList._allowFocusEscape();\n        }\n        this._emitChipEnd(event);\n    }\n    /** Checks to see if the blur should emit the (chipEnd) event. */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipList.focused) {\n            this._chipList._blur();\n        }\n        this._chipList.stateChanges.next();\n    }\n    _focus() {\n        this.focused = true;\n        this._chipList.stateChanges.next();\n    }\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\n    _emitChipEnd(event) {\n        if (!this._inputElement.value && !!event) {\n            this._chipList._keydown(event);\n        }\n        if (!event || this._isSeparatorKey(event)) {\n            this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n            if (event) {\n                event.preventDefault();\n            }\n        }\n    }\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipList.stateChanges.next();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._inputElement.focus(options);\n    }\n    /** Checks whether a keycode is one of the configured separators. */\n    _isSeparatorKey(event) {\n        return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n    }\n}\nMatChipInput.ɵfac = function MatChipInput_Factory(t) { return new (t || MatChipInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_CHIPS_DEFAULT_OPTIONS)); };\nMatChipInput.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatChipInput, selectors: [[\"input\", \"matChipInputFor\", \"\"]], hostAttrs: [1, \"mat-chip-input\", \"mat-input-element\"], hostVars: 5, hostBindings: function MatChipInput_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) { return ctx._keydown($event); })(\"blur\", function MatChipInput_blur_HostBindingHandler() { return ctx._blur(); })(\"focus\", function MatChipInput_focus_HostBindingHandler() { return ctx._focus(); })(\"input\", function MatChipInput_input_HostBindingHandler() { return ctx._onInput(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"disabled\", ctx.disabled || null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipList && ctx._chipList.ngControl ? ctx._chipList.ngControl.invalid : null)(\"aria-required\", ctx._chipList && ctx._chipList.required || null);\n    } }, inputs: { separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", chipList: [\"matChipInputFor\", \"chipList\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\"], disabled: \"disabled\" }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\nMatChipInput.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_CHIPS_DEFAULT_OPTIONS,] }] }\n];\nMatChipInput.propDecorators = {\n    chipList: [{ type: Input, args: ['matChipInputFor',] }],\n    addOnBlur: [{ type: Input, args: ['matChipInputAddOnBlur',] }],\n    separatorKeyCodes: [{ type: Input, args: ['matChipInputSeparatorKeyCodes',] }],\n    chipEnd: [{ type: Output, args: ['matChipInputTokenEnd',] }],\n    placeholder: [{ type: Input }],\n    id: [{ type: Input }],\n    disabled: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipInput, [{\n        type: Directive,\n        args: [{\n                selector: 'input[matChipInputFor]',\n                exportAs: 'matChipInput, matChipInputFor',\n                host: {\n                    'class': 'mat-chip-input mat-input-element',\n                    '(keydown)': '_keydown($event)',\n                    '(blur)': '_blur()',\n                    '(focus)': '_focus()',\n                    '(input)': '_onInput()',\n                    '[id]': 'id',\n                    '[attr.disabled]': 'disabled || null',\n                    '[attr.placeholder]': 'placeholder || null',\n                    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n                    '[attr.aria-required]': '_chipList && _chipList.required || null'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_CHIPS_DEFAULT_OPTIONS]\n            }] }]; }, { separatorKeyCodes: [{\n            type: Input,\n            args: ['matChipInputSeparatorKeyCodes']\n        }], chipEnd: [{\n            type: Output,\n            args: ['matChipInputTokenEnd']\n        }], placeholder: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], chipList: [{\n            type: Input,\n            args: ['matChipInputFor']\n        }], addOnBlur: [{\n            type: Input,\n            args: ['matChipInputAddOnBlur']\n        }], disabled: [{\n            type: Input\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst CHIP_DECLARATIONS = [\n    MatChipList,\n    MatChip,\n    MatChipInput,\n    MatChipRemove,\n    MatChipAvatar,\n    MatChipTrailingIcon,\n];\nconst ɵ0 = {\n    separatorKeyCodes: [ENTER]\n};\nclass MatChipsModule {\n}\nMatChipsModule.ɵfac = function MatChipsModule_Factory(t) { return new (t || MatChipsModule)(); };\nMatChipsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatChipsModule });\nMatChipsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ providers: [\n        ErrorStateMatcher,\n        {\n            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n            useValue: ɵ0\n        }\n    ], imports: [[MatCommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatChipsModule, { declarations: function () { return [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon]; } }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatChipsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: CHIP_DECLARATIONS,\n                declarations: CHIP_DECLARATIONS,\n                providers: [\n                    ErrorStateMatcher,\n                    {\n                        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                        useValue: ɵ0\n                    }\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule, ɵ0 };\n\n//# sourceMappingURL=chips.js.map","import { CommonModule, formatDate } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '../shared-module/shared-module.module';\r\nimport { WorkOrdersRoutingModule } from './work-orders-routing.module';\r\nimport { WorkOrdersComponent } from './work-orders.component';\r\nimport { ViewWorkorderComponent } from './view-workorder/view-workorder.component';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport {\r\n  MatNativeDateModule,\r\n  NativeDateAdapter,\r\n  DateAdapter,\r\n  MAT_DATE_FORMATS\r\n} from '@angular/material/core';\r\nimport { dateFormatWithMonthName } from 'src/utils/dateUtils';\r\nimport { PickWorkOrderSparesComponent } from './pick-workorder-spares/pick-workorder-spares.component';\r\nimport { SparesSkusComponent } from './pick-workorder-spares/spares-skus/spares-skus.component';\r\nimport { CreateWorkOrderComponent } from './create-work-order/create-work-order.component';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ChecklistTaskItemComponent } from './view-workorder/checklist-task-item/checklist-task-item.component';\r\n\r\nclass PickDateAdapter extends NativeDateAdapter {\r\n  format(date: Date, displayFormat: Object): string {\r\n    if (displayFormat === 'input') {\r\n      return formatDate(date, 'dd MMM yyyy', this.locale);\r\n    } else {\r\n      return formatDate(date, 'dd MMM yyyy', this.locale);\r\n    }\r\n  }\r\n}\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    WorkOrdersRoutingModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatChipsModule,\r\n    MatFormFieldModule\r\n  ],\r\n  declarations: [\r\n    WorkOrdersComponent,\r\n    ViewWorkorderComponent,\r\n    PickWorkOrderSparesComponent,\r\n    SparesSkusComponent,\r\n    CreateWorkOrderComponent,\r\n    ChecklistTaskItemComponent\r\n  ],\r\n  providers: [\r\n    { provide: DateAdapter, useClass: PickDateAdapter },\r\n    { provide: MAT_DATE_FORMATS, useValue: dateFormatWithMonthName }\r\n  ]\r\n})\r\nexport class WorkOrdersModule {}\r\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { IExtendedTask } from 'src/app/services';\r\n\r\n@Component({\r\n  selector: 'app-checklist-task-item',\r\n  templateUrl: './checklist-task-item.component.html',\r\n  styleUrls: ['./checklist-task-item.component.scss']\r\n})\r\nexport class ChecklistTaskItemComponent implements OnInit {\r\n  @Input() public taskItem: IExtendedTask;\r\n  @Input() public firstItem: boolean;\r\n  @Input() public isTaskEditable: boolean;\r\n  @Output() public taskSelected = new EventEmitter();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  public handleSelectChecklistTask(event, taskItem) {\r\n    taskItem.isCompleted = !taskItem.isCompleted;\r\n    event.currentTarget.checked = taskItem.isCompleted;\r\n    this.taskSelected.emit();\r\n  }\r\n}\r\n","<div [ngClass]=\"{ 'addtask-wrapper': firstItem }\"></div>\r\n<table width=\"100%\" *ngIf=\"taskItem\">\r\n  <tbody>\r\n    <tr>\r\n      <td class=\"task-id-cell\">\r\n        <span>{{ taskItem.sequenceNumber }}</span>\r\n      </td>\r\n      <td class=\"task-description-cell\">\r\n        <span>{{ taskItem.description }}</span>\r\n      </td>\r\n      <td class=\"task-iscompleted-cell\">\r\n        <div class=\"form-group\">\r\n          <div class=\"radio custom\">\r\n          <label class=\"custom-control-label label-align\" for=\"includeObsolete\">\r\n            <input type=\"checkbox\" [disabled]=\"isTaskEditable\" (change) = \"handleSelectChecklistTask($event, taskItem)\" [checked]=\"taskItem.isCompleted\" class=\"custom-control-input\" />\r\n          </label>\r\n        </div>\r\n      </div>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators\r\n} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  IExtendedWorkOrder,\r\n  WorkOrderPriority,\r\n  WorkorderStatus,\r\n  WorkordersService,\r\n  IWorkOrderServiceDetail,\r\n  IWorkOrderCategory,\r\n  FilehandlerService,\r\n  IFileCollection,\r\n  AuthenticationService,\r\n  PermissionGroup,\r\n  WorkOrdersPermissions,\r\n  ToastService,\r\n  Toast,\r\n  Modules,\r\n  Role,\r\n  UserProfile,\r\n  IAssets\r\n} from '../../services';\r\nimport {\r\n  standardFormattedDate,\r\n  standardFormattedDateTime\r\n} from 'src/utils/dateUtils';\r\nimport { enumString, enumValues } from 'src/utils/enumUtils';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport {\r\n  fileListFileSizesValidator,\r\n  fileListFileTypeValidator,\r\n  fileListNumberOfFilesValidator\r\n} from 'src/utils/formValidators';\r\nimport { WorkOrderWizard } from '../work-order.wizard';\r\n\r\n@Component({\r\n  selector: 'app-view-workorder',\r\n  templateUrl: './view-workorder.component.html',\r\n  styleUrls: ['./view-workorder.component.scss']\r\n})\r\nexport class ViewWorkorderComponent implements OnInit {\r\n  public isLoading = true;\r\n  public attachedFileCollection = new BehaviorSubject<IFileCollection[]>([]);\r\n  public extendedWorkOrder: IExtendedWorkOrder;\r\n  public form: FormGroup;\r\n  public standardFormattedDate = standardFormattedDate;\r\n  public workOrderPriorities = enumValues(WorkOrderPriority);\r\n  public WorkOrderStatus = WorkorderStatus;\r\n  public workOrderStatusValues: number[] = enumValues(WorkorderStatus);\r\n  public standardFormattedDateTime = standardFormattedDateTime;\r\n  public workOrderServiceDetails: IWorkOrderServiceDetail[];\r\n  public workOrderNumber: string;\r\n  public detailsModalVisible = false;\r\n  public selectedServiceUserId: string;\r\n  public selectedServiceDateTime: string;\r\n  public selectedServiceDetails: string;\r\n  public textMaxLength = 90;\r\n  public fileUploadForm: FormGroup;\r\n  public workOrderCategories: IWorkOrderCategory[];\r\n  public fileCount: number = 0;\r\n  public fileSrcCollection: IFileCollection[] = [];\r\n  public isEditable = false;\r\n  public isUpdatingWorkOrder = false;\r\n  public errorMessage: string;\r\n  public isNewFilesAdded: boolean = false;\r\n  public showSaveButton = false;\r\n  public filesLimit = 3;\r\n  @ViewChild('fileUploadInput')\r\n  public fileUploadInput: ElementRef;\r\n  public filePathCollection: string[] = [];\r\n  public savedFileSrcCollection: any;\r\n  public isGettingUserRights: boolean;\r\n  public fileTypes = [\r\n    'image/jpeg',\r\n    'image/png',\r\n    'application/msword',\r\n    'jpeg',\r\n    'jpg',\r\n    'png',\r\n    'doc',\r\n    'docx',\r\n    'xls',\r\n    'csv',\r\n    'application/ms-excel',\r\n    'xlsx',\r\n    'pdf',\r\n    'bmp'\r\n  ];\r\n  public workOrderStatus: string;\r\n  public addAssetsModalVisible = false;\r\n  public isAssetAvailable = true;\r\n  public enableServiceTextarea = false;\r\n  public isShowEditIcon = true;\r\n  public selectedWorkOrderServiceDetails: IWorkOrderServiceDetail;\r\n  public isSubmitDisabled: boolean;\r\n  public submitAttempted = false;\r\n  public expanded: boolean = false;\r\n\r\n  constructor(\r\n    private workOrdersService: WorkordersService,\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private fileUploadService: FilehandlerService,\r\n    private authenticationService: AuthenticationService,\r\n    private toastService: ToastService,\r\n    private workOrderWizard: WorkOrderWizard\r\n  ) {\r\n    if (this.workOrderWizard.workOrder) {\r\n      this.workOrderStatus = this.workOrderWizard.workOrder.status.toString();\r\n      this.workOrderNumber = this.workOrderWizard.workOrder.number.toString();\r\n      this.checkUserEditRights();\r\n    } else {\r\n      this.router.navigate(['work-orders']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.viewWorkOrderForId();\r\n    this.viewWorkOrderServiceDetailForId();\r\n    this.listCategory();\r\n  }\r\n\r\n  public createForm() {\r\n    const validPattern = '^[a-zA-Z0-9 ]*';\r\n    const bulidWorkOrderDetailForm = (\r\n      extendedWorkOrder: IExtendedWorkOrder\r\n    ) => {\r\n      this.form = this.formBuilder.group({\r\n        title: new FormControl(\r\n          {\r\n            value: extendedWorkOrder.title,\r\n            disabled: !this.isEditable\r\n          },\r\n          Validators.compose([\r\n            Validators.maxLength(50),\r\n            Validators.required,\r\n            Validators.pattern(validPattern)\r\n          ])\r\n        ),\r\n        description: new FormControl(\r\n          {\r\n            value: extendedWorkOrder.description,\r\n            disabled: !this.isEditable\r\n          },\r\n          Validators.compose([Validators.maxLength(4000), Validators.required])\r\n        ),\r\n        category: new FormControl({\r\n          value: extendedWorkOrder.category.id,\r\n          disabled: !this.isEditable\r\n        }),\r\n        reportedOn: new FormControl(\r\n          {\r\n            value: extendedWorkOrder.reportedOn,\r\n            disabled: true\r\n          },\r\n          Validators.compose([Validators.required])\r\n        ),\r\n        dueDate: new FormControl(\r\n          {\r\n            value: extendedWorkOrder.dueDate,\r\n            disabled: true\r\n          },\r\n          Validators.compose([Validators.required])\r\n        ),\r\n        priority: new FormControl({\r\n          value: extendedWorkOrder.priority,\r\n          disabled: !this.isEditable\r\n        }),\r\n        assignedToUser: new FormControl(\r\n          {\r\n            value: extendedWorkOrder.assignedToUser,\r\n            disabled: !this.isEditable\r\n          },\r\n          Validators.compose([Validators.maxLength(50)])\r\n        ),\r\n        status: new FormControl(\r\n          {\r\n            value: extendedWorkOrder.status,\r\n            disabled: !this.isEditable\r\n          },\r\n          Validators.compose([Validators.required])\r\n        ),\r\n        serviceDetails: new FormControl(\r\n          {\r\n            value: '',\r\n            disabled: !this.isEditable\r\n          },\r\n          Validators.compose([Validators.maxLength(4000)])\r\n        )\r\n      });\r\n    };\r\n    bulidWorkOrderDetailForm(this.extendedWorkOrder);\r\n\r\n    this.form.valueChanges.subscribe(() => {\r\n      setTimeout(() => {\r\n        this.updateFormChanges();\r\n      }, 100);\r\n    });\r\n\r\n    this.fileUploadForm = this.formBuilder.group({\r\n      files: [\r\n        null,\r\n        [\r\n          Validators.required,\r\n          fileListFileTypeValidator(this.fileTypes),\r\n          fileListFileSizesValidator(2000000)\r\n        ],\r\n        fileListNumberOfFilesValidator(this.filesLimit)\r\n      ]\r\n    });\r\n  }\r\n\r\n  public viewWorkOrderForId(isOnInit: boolean = true) {\r\n    this.isLoading = true;\r\n    const workOrderAttachements$: Observable<string[]> = this.workOrdersService\r\n      .viewWorkOrderForId(this.workOrderNumber.toString())\r\n      .pipe(\r\n        map(extendedWorkOrder => {\r\n          this.extendedWorkOrder = extendedWorkOrder;\r\n          if (isOnInit) {\r\n            this.createForm();\r\n          }\r\n          return extendedWorkOrder.attachedFiles;\r\n        })\r\n      );\r\n    workOrderAttachements$.subscribe(assetAttachments => {\r\n      this.fileCount = assetAttachments ? assetAttachments.length : 0;\r\n      let fileList: any[] = [];\r\n      this.fileSrcCollection = [];\r\n      this.filePathCollection = [];\r\n      if (assetAttachments) {\r\n        assetAttachments.forEach(filePath => {\r\n          const fileNameWithExt = filePath.replace(/^.*[\\\\\\/]/, '');\r\n          const fileName = fileNameWithExt.substring(0, fileNameWithExt.length);\r\n          if (fileName === 'blob') {\r\n            return;\r\n          }\r\n          this.filePathCollection.push(filePath);\r\n          this.fileUploadService.getFile(filePath).subscribe(fileData => {\r\n            fileData.name = fileName;\r\n            this.fileSrcCollection.push(fileData);\r\n            this.fileCount = this.fileSrcCollection\r\n              ? this.fileSrcCollection.length\r\n              : 0;\r\n            fileList.push(fileData);\r\n          });\r\n        });\r\n        this.fileUploadForm.setValue({\r\n          files: this.fileSrcCollection\r\n        });\r\n        this.attachedFileCollection.next(this.fileSrcCollection);\r\n      }\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  public viewWorkOrderServiceDetailForId(): void {\r\n    this.workOrdersService\r\n      .viewWorkOrderServiceDetailForId(\r\n        this.workOrderWizard.workOrder.number.toString()\r\n      )\r\n      .subscribe(workOrderServiceDetails => {\r\n        this.workOrderServiceDetails = workOrderServiceDetails;\r\n      });\r\n  }\r\n\r\n  public listCategory() {\r\n    this.workOrdersService\r\n      .listWorkOrderCategory()\r\n      .subscribe((data: IWorkOrderCategory[]) => {\r\n        this.workOrderCategories = data;\r\n      });\r\n  }\r\n\r\n  public handleViewMoreClick(workOrderServiceDetail: IWorkOrderServiceDetail) {\r\n    this.detailsModalVisible = true;\r\n    this.isShowEditIcon = this.isEditable;\r\n    this.selectedWorkOrderServiceDetails = workOrderServiceDetail;\r\n  }\r\n\r\n  public handleDetailsModalClose() {\r\n    this.detailsModalVisible = false;\r\n    this.enableServiceTextarea = false;\r\n    this.addAssetsModalVisible = false;\r\n  }\r\n\r\n  public disableRightClick(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  public handlesPickSpares(workOrderNumber: string) {\r\n    this.router.navigate([\r\n      'work-orders',\r\n      '#WO' + workOrderNumber,\r\n      'PickSpares'\r\n    ]);\r\n  }\r\n\r\n  private checkUserEditRights() {\r\n    this.isGettingUserRights = true;\r\n    const userRole$: Observable<UserProfile> = this.authenticationService.currentUserProfile$.pipe(\r\n      map(userProfile => userProfile)\r\n    );\r\n\r\n    userRole$.subscribe(userProfile => {\r\n      this.authenticationService\r\n        .currentUserHasPermission({\r\n          [PermissionGroup.WorkOrders]: [WorkOrdersPermissions.CanEditWorkOrder]\r\n        })\r\n        .subscribe(hasPermission => {\r\n          if (userProfile.userRole.groupName !== Role.Technician) {\r\n            this.isEditable =\r\n              hasPermission &&\r\n              Number(this.workOrderStatus) !== WorkorderStatus.Closed;\r\n          } else {\r\n            this.isEditable =\r\n              hasPermission &&\r\n              Number(this.workOrderStatus) !== WorkorderStatus.Closed &&\r\n              Number(this.workOrderStatus) !== WorkorderStatus.Complete;\r\n          }\r\n          this.isGettingUserRights = false;\r\n        });\r\n    });\r\n  }\r\n\r\n  public launchFileInput(): void {\r\n    this.fileUploadForm.reset({});\r\n    this.fileUploadInput.nativeElement.value = '';\r\n    this.fileUploadInput.nativeElement.click();\r\n  }\r\n\r\n  public updateFormChanges() {\r\n    debugger\r\n    this.extendedWorkOrder.status = this.form.get('status').value;\r\n    this.extendedWorkOrder.assignedToUser = this.form.get('assignedToUser')\r\n      .value\r\n      ? this.form.get('assignedToUser').value.toString()\r\n      : '';\r\n    this.extendedWorkOrder.title = this.form.get('title').value.toString();\r\n    this.extendedWorkOrder.description = this.form\r\n      .get('description')\r\n      .value.toString();\r\n    this.extendedWorkOrder.priority = this.form.get('priority').value;\r\n    this.extendedWorkOrder.dueDate = this.form.get('dueDate').value;\r\n    this.extendedWorkOrder.reportedOn = this.form.get('reportedOn').value;\r\n    const categoryId = this.form.get('category').value;\r\n    this.extendedWorkOrder.category = this.workOrderCategories.filter(\r\n      category => category.id === Number(categoryId)\r\n    )[0];\r\n    this.extendedWorkOrder.serviceDetails = this.form\r\n      .get('serviceDetails')\r\n      .value.toString();\r\n    this.showSaveButton = true;\r\n    this.form.markAsDirty();\r\n  }\r\n\r\n  public selectedUserId(userId: string) {\r\n    this.form.get('assignedToUser').setValue(userId);\r\n    this.showSaveButton = true;\r\n  }\r\n\r\n  public updateWorkOrder() {\r\n    debugger\r\n    this.submitAttempted = true;\r\n    if (!this.isUpdatingWorkOrder) {\r\n      this.isUpdatingWorkOrder = true;\r\n      this.isAssetAvailable =\r\n        this.extendedWorkOrder.workOrderAssets.filter(\r\n          asset => asset.isDelete !== true\r\n        ).length > 0;\r\n\r\n      if (!this.form.valid || !this.isAssetAvailable) {\r\n        this.isNewFilesAdded = false;\r\n        this.showSaveButton = false;\r\n        this.isUpdatingWorkOrder = false;\r\n       //  this.submitAttempted = false;\r\n        this.form.markAsPristine();\r\n        return;\r\n      }\r\n      this.showSaveButton = false;\r\n      this.form.get('serviceDetails').setValue('');\r\n      if (this.form.valid && this.form.dirty) {\r\n        let paramWorkOrderAssets: IAssets[] = [];\r\n        this.extendedWorkOrder.workOrderAssets.forEach(workOrderAssets => {\r\n          if (workOrderAssets.isDelete === true || workOrderAssets.isNew) {\r\n            workOrderAssets.referenceId = this.extendedWorkOrder.id;\r\n            paramWorkOrderAssets.push(workOrderAssets);\r\n          }\r\n        });\r\n        this.extendedWorkOrder.workOrderAssets = [];\r\n        this.extendedWorkOrder.workOrderAssets = paramWorkOrderAssets;\r\n        this.form.markAsPristine();\r\n        this.workOrdersService\r\n          .updateWorkOrderForId(\r\n            this.extendedWorkOrder.id,\r\n            this.extendedWorkOrder\r\n          )\r\n          .subscribe(\r\n            data => {\r\n              this.toastService.showToast(\r\n                new Toast(\r\n                  'Work Order (' + data.workOrderNumber + ') saved successfully'\r\n                )\r\n              );\r\n\r\n              if (this.fileUploadForm.valid && this.isNewFilesAdded) {\r\n                this.fileUploadService\r\n                  .uploadFiles(\r\n                    Number(this.extendedWorkOrder.number),\r\n                    Modules.WorkOrder,\r\n                    this.fileSrcCollection\r\n                  )\r\n                  .subscribe(\r\n                    data => {\r\n                      this.savedFileSrcCollection = data;\r\n                      this.filePathCollection = data.attachments;\r\n                      this.viewWorkOrderForId(false);\r\n                      this.viewWorkOrderServiceDetailForId();\r\n                    },\r\n                    (errorResponse: HttpErrorResponse) => {\r\n                      this.isUpdatingWorkOrder = false;\r\n                      this.toastService.showErrorToast(\r\n                        'Unable to save workorder files.'\r\n                      );\r\n                      return;\r\n                    }\r\n                  );\r\n              } else {\r\n                this.viewWorkOrderForId(false);\r\n                this.viewWorkOrderServiceDetailForId();\r\n                this.isUpdatingWorkOrder = false;\r\n              }\r\n              this.isNewFilesAdded = false;\r\n              this.showSaveButton = false;\r\n              this.extendedWorkOrder = data;\r\n            },\r\n            (errorResponse: HttpErrorResponse) => {\r\n              this.isNewFilesAdded = false;\r\n              this.showSaveButton = false;\r\n              this.isUpdatingWorkOrder = false;\r\n              const errorMessage = errorResponse[0];\r\n              this.toastService.showErrorToast(errorMessage);\r\n              return;\r\n            },\r\n            () => {\r\n              this.errorMessage =\r\n                'Sorry something went wrong... please try again later';\r\n              this.isUpdatingWorkOrder = false;\r\n              this.isNewFilesAdded = false;\r\n              this.showSaveButton = false;\r\n            }\r\n          );\r\n        return;\r\n      }\r\n\r\n      if (\r\n        this.fileUploadForm.valid &&\r\n        this.isNewFilesAdded &&\r\n        !this.form.dirty\r\n      ) {\r\n        this.fileUploadService\r\n          .uploadFiles(\r\n            Number(this.extendedWorkOrder.number),\r\n            Modules.WorkOrder,\r\n            this.fileSrcCollection\r\n          )\r\n          .subscribe(data => {\r\n            this.savedFileSrcCollection = data;\r\n            if (this.savedFileSrcCollection.attachments) {\r\n              this.filePathCollection = data.attachments;\r\n              this.viewWorkOrderForId(false);\r\n              this.viewWorkOrderServiceDetailForId();\r\n              this.toastService.showToast(\r\n                new Toast('Workorder files saved successfully')\r\n              );\r\n            } else {\r\n              this.toastService.showErrorToast(`Files not saved`);\r\n            }\r\n            this.isUpdatingWorkOrder = false;\r\n            this.isNewFilesAdded = false;\r\n            this.showSaveButton = false;\r\n          });\r\n      }\r\n      if (\r\n        !this.fileUploadForm.valid &&\r\n        this.isNewFilesAdded &&\r\n        !this.form.dirty\r\n      ) {\r\n        this.toastService.showErrorToast(`Files not saved`);\r\n      }\r\n\r\n      this.isUpdatingWorkOrder = false;\r\n      this.showSaveButton = false;\r\n    }\r\n  }\r\n\r\n  public handleDeleteItem(assetIndex: number) {\r\n    if (this.extendedWorkOrder && this.extendedWorkOrder.workOrderAssets) {\r\n      this.extendedWorkOrder.workOrderAssets[assetIndex].isDelete = true;\r\n      this.isAssetAvailable =\r\n        this.extendedWorkOrder.workOrderAssets.filter(\r\n          asset => asset.isDelete !== true\r\n        ).length > 0;\r\n      this.form.markAsDirty();\r\n      this.showSaveButton = true;\r\n    }\r\n  }\r\n\r\n  public handleFileInputChange(): void {\r\n    this.showSaveButton = true;\r\n    this.isNewFilesAdded = true;\r\n\r\n    let noExistingFile = this.fileSrcCollection.length === 0;\r\n\r\n    const inputFiles: any[] = this.fileUploadInput.nativeElement.files;\r\n    for (let i = 0; i < inputFiles.length; i++) {\r\n      if (\r\n        this.fileSrcCollection.filter(file => file.name === inputFiles[i].name)\r\n          .length === 0\r\n      ) {\r\n        this.fileSrcCollection.push(inputFiles[i]);\r\n\r\n        this.filePathCollection.push('NewFile');\r\n      } else {\r\n        this.toastService.showErrorToast('Cannot upload duplicate file.');\r\n      }\r\n    }\r\n\r\n    this.clearFileFormErrors();\r\n    if (noExistingFile) {\r\n      this.fileUploadForm.setValue({\r\n        files: this.fileSrcCollection\r\n      });\r\n    } else {\r\n      this.fileUploadForm.patchValue({\r\n        files: this.fileSrcCollection\r\n      });\r\n    }\r\n\r\n    if (\r\n      this.fileUploadForm.controls['files'].hasError('acceptableFileType') ||\r\n      this.fileUploadForm.controls['files'].hasError(\r\n        'acceptableNumberOfFiles'\r\n      ) ||\r\n      this.fileUploadForm.controls['files'].hasError('acceptableFileSize')\r\n    ) {\r\n      this.showSaveButton = false;\r\n    }\r\n    this.fileCount = this.fileSrcCollection.length;\r\n    this.attachedFileCollection.next(this.fileSrcCollection);\r\n  }\r\n\r\n  public handleDeleteFileAttached(fileIndex: number) {\r\n    const filePath = this.filePathCollection[fileIndex];\r\n    this.isUpdatingWorkOrder = true;\r\n    if (filePath === 'NewFile') {\r\n      this.fileSrcCollection.splice(fileIndex, 1);\r\n      this.filePathCollection.splice(fileIndex, 1);\r\n      this.fileCount = this.fileSrcCollection.length;\r\n      this.attachedFileCollection.next([]);\r\n      this.attachedFileCollection.next(this.fileSrcCollection);\r\n      this.fileUploadForm.patchValue({\r\n        files: this.fileSrcCollection\r\n      });\r\n      this.toastService.showToast(new Toast('File has been deleted.'));\r\n      this.isUpdatingWorkOrder = false;\r\n      this.resetSaveButtonDisplay();\r\n    } else {\r\n      this.fileUploadService.deleteFile(filePath, false).subscribe(\r\n        () => {\r\n          this.fileSrcCollection.splice(fileIndex, 1);\r\n          this.filePathCollection.splice(fileIndex, 1);\r\n          this.fileCount = this.fileSrcCollection.length;\r\n          this.attachedFileCollection.next([]);\r\n          this.attachedFileCollection.next(this.fileSrcCollection);\r\n          this.toastService.showToast(new Toast('File has been deleted.'));\r\n          this.isUpdatingWorkOrder = false;\r\n          this.resetSaveButtonDisplay();\r\n        },\r\n        (err: HttpErrorResponse) => {\r\n          this.toastService.showErrorToast('Unable to delete the file.');\r\n          return;\r\n        }\r\n      );\r\n      this.fileUploadForm.patchValue({\r\n        files: this.fileSrcCollection\r\n      });\r\n    }\r\n\r\n    this.fileUploadForm.markAsPristine();\r\n    this.fileUploadForm.markAsUntouched();\r\n    this.fileUploadForm.updateValueAndValidity();\r\n  }\r\n\r\n  public resetSaveButtonDisplay() {\r\n    if (this.fileSrcCollection.length === 0) {\r\n      this.showSaveButton = false;\r\n    }\r\n    if (this.fileSrcCollection.length === 3) {\r\n      this.showSaveButton = true;\r\n    }\r\n  }\r\n\r\n  public priorityString(priority: WorkOrderPriority) {\r\n    return enumString(WorkOrderPriority, priority);\r\n  }\r\n\r\n  public handlePickAssets() {\r\n    this.addAssetsModalVisible = true;\r\n  }\r\n\r\n  public handleAddedWorkOrderAssets(workOrderAsset: IAssets[]) {\r\n    this.addAssetsModalVisible = false;\r\n    this.extendedWorkOrder.workOrderAssets = workOrderAsset;\r\n    this.isAssetAvailable =\r\n      this.extendedWorkOrder.workOrderAssets.filter(\r\n        asset => asset.isDelete !== true\r\n      ).length > 0;\r\n    this.form.markAsDirty();\r\n    this.showSaveButton = true;\r\n  }\r\n\r\n  public handleClipboard(event: ClipboardEvent) {\r\n    event.preventDefault();\r\n    return;\r\n  }\r\n\r\n  public clearFileFormErrors() {\r\n    this.fileUploadForm.controls['files'].setErrors({\r\n      acceptableFileType: false,\r\n      acceptableFileSize: false\r\n    });\r\n  }\r\n\r\n  public getUserName(userDetails: string) {\r\n    if (userDetails && userDetails.includes('-')) {\r\n      return userDetails.split('-')[1];\r\n    } else {\r\n      return userDetails;\r\n    }\r\n  }\r\n  public handleTextAreaInput() {\r\n    this.isSubmitDisabled =\r\n      this.selectedWorkOrderServiceDetails.serviceDetail.trim() === '';\r\n  }\r\n  public handleServiceSaveButton() {\r\n    this.enableServiceTextarea = false;\r\n    this.isLoading = true;\r\n    this.workOrdersService\r\n      .updateWorkOrderService(this.selectedWorkOrderServiceDetails)\r\n      .subscribe(\r\n        () => {\r\n          this.viewWorkOrderServiceDetailForId();\r\n          this.toastService.showToast(\r\n            new Toast('Workorder service history saved successfully')\r\n          );\r\n          this.isLoading = false;\r\n          this.detailsModalVisible = false;\r\n        },\r\n        (errorResponse: HttpErrorResponse) => {\r\n          this.viewWorkOrderServiceDetailForId();\r\n\r\n          this.toastService.showErrorToast(\r\n            'Unable to save workorder service history'\r\n          );\r\n          this.isLoading = false;\r\n          return;\r\n        }\r\n      );\r\n  }\r\n\r\n  public handleShowCheckListContent(checkList) {\r\n    if (this.expanded === checkList) {\r\n      this.expanded = null;\r\n    } else {\r\n      this.expanded = checkList;\r\n    }\r\n  }\r\n\r\n  public handleSelectedChecklistTask() {\r\n    this.showSaveButton = true;\r\n    this.form.markAsDirty();\r\n  }\r\n}\r\n","<app-section-header [customPreviousPageTitle]=\"'Work Orders'\" [customCurrentPageTitle]=\"'#WO'+workOrderNumber\"></app-section-header>\r\n\r\n<div *ngIf=\"isLoading || isGettingUserRights\">\r\n  <div class=\"spinner\"></div>\r\n</div>\r\n<app-loading-modal\r\n  *ngIf=\"isUpdatingWorkOrder\"\r\n></app-loading-modal>\r\n<article *ngIf=\"!isLoading && !isGettingUserRights && !isUpdatingWorkOrder\">\r\n  <header>\r\n    <h1>{{ '#WO'+workOrderNumber }}</h1>\r\n  </header>\r\n  <form [formGroup] = \"form\">\r\n    <div class=\"core-info mt-4\">\r\n      <div class=\"col-12 spares-button mobile-btn\">\r\n          <div class=\"btn-pick-spares\">\r\n            <button (click)=\"handlesPickSpares(workOrderNumber)\" class=\"btn btn-primary\">Pick Spares</button>\r\n          </div>\r\n        <div class=\"col-2 col-sm-3\"></div>\r\n      </div>\r\n      <div class=\"d-flex  align-items-center\"  *ngIf=\"submitAttempted && form.controls.title.errors\">\r\n        <div class=\"col-4 col-sm-2 width-17\">\r\n        </div>\r\n        <div class=\" col-md-6 col-sm-10 col-8 width-49 alert alert-danger arrow-alert\">\r\n          You must specify title\r\n        </div>\r\n      </div>\r\n      <div class=\"row align-items-center mb-sm-4 mb-2\">\r\n        <div class=\"col-sm-2 col-4\">\r\n          <label>Title</label>\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-10 col-8\">\r\n          <input type=\"text\" pattern=\"^[a-zA-Z0-9 ]*\" (paste)=\"handleClipboard($event)\" formControlName=\"title\" class=\"form-control\" maxlength=\"50\" />\r\n        </div>\r\n        <div class=\"gap\"></div>\r\n        <div class=\"col-sm-4 spares-button tab-view\">\r\n          <div class=\"btn-pick-spares\">\r\n            <button (click)=\"handlesPickSpares(this.workOrderNumber, workOrderStatus)\" class=\"btn btn-primary px-md-5\">Pick Spares</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"d-flex\"  *ngIf=\"submitAttempted && form.controls.description.errors\">\r\n        <div class=\"col-4 col-sm-2 width-17\">\r\n        </div>\r\n        <div class=\"col-md-6 col-sm-10 col-8 width-83 alert alert-danger arrow-alert\">\r\n          You must specify description\r\n        </div>\r\n      </div>\r\n      <div class=\"row mb-sm-4 mb-2\">\r\n        <div class=\"col-sm-2 col-4\">\r\n          <label>Description</label>\r\n        </div>\r\n        <div class=\"col-sm-10 col-8\">\r\n          <textarea class=\"form-control\" formControlName=\"description\" [readOnly]=\"!isEditable\" rows=\"8\" maxlength=\"4000\" ></textarea>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-6\">\r\n          <div class=\"row  align-items-center d-flex  mb-2 mb-sm-3\">\r\n            <label class=\"col-4 \">Reported On</label>\r\n            <div class=\"col-8\">\r\n              <div class=\"form-group\">\r\n                <div class=\"taro-material-datepicker\">\r\n                  <input\r\n                    matInput\r\n                    [matDatepicker]=\"datePicker\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"reportedOn\"\r\n                  />\r\n                  <mat-datepicker-toggle\r\n                    matSuffix\r\n                    [for]=\"datePicker\"\r\n                  >\r\n                  </mat-datepicker-toggle>\r\n                  <mat-datepicker #datePicker></mat-datepicker>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row align-items-center  d-flex  mb-2 mb-sm-3\">\r\n            <label class=\"col-4 \">Due On</label>\r\n            <div class=\"col-8\">\r\n              <div class=\"form-group\">\r\n                <div class=\"taro-material-datepicker\">\r\n                  <input\r\n                    matInput\r\n                    [matDatepicker]=\"datePickerDueDate\"\r\n                    class=\"form-control\"\r\n                    formControlName=\"dueDate\"\r\n                  />\r\n                  <mat-datepicker-toggle\r\n                    matSuffix\r\n                    [for]=\"datePickerDueDate\"\r\n                  >\r\n                  </mat-datepicker-toggle>\r\n                  <mat-datepicker #datePickerDueDate></mat-datepicker>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row  align-items-center d-flex  mb-2 mb-sm-3\">\r\n            <label class=\"col-4 \">Assigned To</label>\r\n            <div class=\"col-8\">\r\n              <input type=\"hidden\" formControlName=\"assignedToUser\" [readOnly]=\"!isEditable\" class=\"form-control\" maxlength=\"50\"/>\r\n              <app-list-users [isEditable]=\"isEditable\" [userName]=\"extendedWorkOrder.assignedToUser\" (selectedUserId)=\"selectedUserId($event)\"></app-list-users>\r\n            </div>\r\n          </div>\r\n        <div class=\"row  align-items-center d-flex  mb-2 mb-sm-3\">\r\n          <label class=\"col-4 \">Status</label>\r\n          <div class=\"col-8\">\r\n            <select formControlName=\"status\" class=\"custom-select form-control\">\r\n              <option *ngFor=\"let status of workOrderStatusValues; let i = index\" [value]=\"workOrderStatusValues[i]\"\r\n                      [selected]=\"workOrderStatusValues[i] === extendedWorkOrder.status\"\r\n                      class=\"form-control\" >\r\n                  {{WorkOrderStatus[status]}}\r\n              </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"fileSrcCollection && fileSrcCollection.length > 1\" class=\"row d-flex mb-sm-3 mobile-view\"></div>\r\n        <div *ngIf=\"fileSrcCollection && fileSrcCollection.length > 1\" class=\"row d-flex mb-sm-3 mobile-view\"></div>\r\n        <div *ngIf=\"fileSrcCollection && fileSrcCollection.length > 1\" class=\"row d-flex mb-sm-3 mobile-view\"></div>\r\n      </div>\r\n      <div class=\"col-sm-6\">\r\n        <div class=\"row align-items-center d-flex  mb-2 mb-sm-3\">\r\n          <label class=\"col-4 \">Category</label>\r\n          <div class=\"col-8\">\r\n            <select formControlName=\"category\" class=\"custom-select form-control\">\r\n              <option *ngFor=\"let category of workOrderCategories; let i = index\"\r\n                        [value]=\"category.id\"\r\n                        class=\"form-control\"\r\n                >{{category.name}}\r\n               </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"row align-items-center d-flex mb-2 mb-sm-3\">\r\n          <label class=\"col-4 \">Priority</label>\r\n          <div class=\"col-8\">\r\n            <select formControlName=\"priority\" class=\"custom-select form-control\">\r\n                <option *ngFor=\"let workOrderPriority of workOrderPriorities\"\r\n                  [value]=\"workOrderPriority\"\r\n                  [selected]=\"workOrderPriority === extendedWorkOrder.priority\"\r\n                  class=\"form-control\"\r\n                >\r\n                  {{priorityString(workOrderPriority)}}\r\n                </option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"row  d-flex  align-items-center mb-2 mb-sm-3  file-attach\">\r\n          <label class=\"col-4 attachment-icon\">Attachments\r\n            <span tooltip-danger=\"Allowed file types are doc, docx, xls, xlsx, csv, pdf, jpeg, png, bmp. Max file size allowed 2 MB.\">\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 19.199 19.2\"   width=\"14\" height=\"14\">\r\n                <path d=\"M0 9.6a9.6 9.6 0 0 0 18.5 3.6 8.571 8.571 0 0 0 .7-3.6A9.6 9.6 0 1 0 0 9.6z\" fill=\"#fff\" stroke=\"#ff422e\"/>\r\n                <g>\r\n                  <path d=\"M9.6 4a1.184 1.184 0 0 1 1.2 1.3 1.2 1.2 0 1 1-2.4 0A1.24 1.24 0 0 1 9.6 4zm-1 3.3h2.1v7.9H8.6z\" fill=\"#ff422e\"/>\r\n                </g>\r\n              </svg>\r\n            </span>\r\n          </label>\r\n          <form *ngIf=\"fileUploadForm\" [formGroup]=\"fileUploadForm\" class=\"col-8\">\r\n            <div class=\"form-group\">\r\n              <div #alertElementRef class=\"alert-msgs\">\r\n                <div\r\n                  class=\"alert alert-danger arrow-alert\"\r\n                  *ngIf=\"\r\n                    fileUploadForm.controls['files'].hasError(\r\n                      'acceptableFileType'\r\n                    ) ||\r\n                    fileUploadForm.controls['files'].hasError(\r\n                      'acceptableFileSize'\r\n                    )\r\n                  \"\r\n                >\r\n                Allowed file types are doc, docx, xls, xlsx, csv, pdf, jpeg, png, bmp. Max file size allowed 2 MB.\r\n                </div>\r\n                <div\r\n                  class=\"alert alert-danger arrow-alert\"\r\n                  *ngIf=\"\r\n                    fileUploadForm.controls['files'].hasError(\r\n                      'acceptableNumberOfFiles'\r\n                    ) && fileCount > 3\r\n                  \"\r\n                >\r\n                  Too many files selected. Total number of files cannot exceed\r\n                  {{ filesLimit }}.\r\n                </div>\r\n              </div>\r\n              <div class=\"file-input\">\r\n                <div class=\"col-7\">\r\n                  <label>\r\n                    <span *ngIf=\"fileCount === 0\">No file selected</span>\r\n                    <span *ngIf=\"fileCount === 1\">{{fileCount}} file added</span>\r\n                    <span *ngIf=\"fileCount > 1\">{{fileCount}} files added</span>\r\n                  </label>\r\n                </div>\r\n                <div class=\"col-5\"><button\r\n                  (click)=\"launchFileInput()\"\r\n                  class=\"btn-file-upload\"\r\n                  [disabled]=\"fileCount > 2 || !isEditable ||\r\n                  fileUploadForm.controls['files'].hasError('acceptableFileType') ||\r\n                  fileUploadForm.controls['files'].hasError( 'acceptableFileSize')\r\n                 \"\r\n                >Choose file</button></div>\r\n                <input\r\n                  hidden\r\n                  multiple\r\n                  (change)=\"handleFileInputChange()\"\r\n                  type=\"file\"\r\n                  #fileUploadInput\r\n                  [readonly]=\"!isEditable\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div *ngIf=\"fileSrcCollection && fileSrcCollection.length > 0\" class=\"row  d-flex  file-row\">\r\n          <app-view-attached-files [attachedFileCollection]=\"attachedFileCollection\" [isEditable]=\"isEditable\" (deletedFileIndex)=\"handleDeleteFileAttached($event)\"></app-view-attached-files>\r\n        </div>\r\n        <div *ngIf=\"fileSrcCollection && fileSrcCollection.length > 1\" class=\"row  d-flex mb-sm-3\"></div>\r\n        <div *ngIf=\"fileSrcCollection && fileSrcCollection.length > 1\" class=\"row  d-flex mb-sm-3\"></div>\r\n        <div *ngIf=\"fileSrcCollection && fileSrcCollection.length > 1\" class=\"row  d-flex mb-sm-3\"></div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"!extendedWorkOrder.workOrderAssets || extendedWorkOrder.workOrderAssets.length === 0 || !isAssetAvailable\">\r\n        <div class=\"col-sm-6 mb-2 mb-sm-3\">\r\n          <div class=\"row d-flex align-items-center\">\r\n            <label class=\"col-4\">Asset</label>\r\n            <div class=\"col-8\">\r\n              <div class=\"form-group\">\r\n                <div class=\"asset-alert-msgs\">\r\n                  <div\r\n                    class=\"alert alert-danger arrow-alert\"\r\n                    *ngIf=\"!isAssetAvailable\"\r\n                  >\r\n                  You must specify an asset\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n              <input type=\"text\" readonly  [value]=\"\" class=\"readonly form-control\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-6 mb-2 mb-sm-3\">\r\n          <div class=\"row d-flex align-items-center\">\r\n            <label class=\"col-4\">Location</label>\r\n            <div class=\"col-8  d-flex align-items-center\">\r\n              <input type=\"text\" class=\"form-control readonly\"  [value]=\"\" readonly/>\r\n              <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15.002\" height=\"19.003\" viewBox=\"0 0 14.002 18.003\" class=\"del-icon opacity-50\">\r\n                  <g id=\"wrench\" transform=\"translate(0.001 0)\">\r\n                    <path id=\"Path_1563\" data-name=\"Path 1563\" d=\"M12.333,3.933,1.267,3.8c-.133.133-.4.133-.533.267A.8.8,0,0,0,.6,4.6L1.8,16.2c0,.4.267.533.667.533h8.267A.61.61,0,0,0,11.4,16.2L12.867,4.6a.8.8,0,0,0-.133-.533,1.343,1.343,0,0,0-.4-.134Zm-2,11.6h-7.2L2.067,5.267h9.467Z\" transform=\"translate(0.2 1.267)\"/>\r\n                    <path id=\"Path_1564\" data-name=\"Path 1564\" d=\"M13.333,3.2H10.667A3.739,3.739,0,0,0,6.933,0a3.607,3.607,0,0,0-3.6,3.2H.667A.63.63,0,0,0,0,3.867a.63.63,0,0,0,.667.667H13.333A.63.63,0,0,0,14,3.867a.63.63,0,0,0-.667-.667Zm-6.4-1.867A2.442,2.442,0,0,1,9.333,3.2H4.667A2.407,2.407,0,0,1,6.933,1.333Z\"/>\r\n                    <path id=\"Path_1565\" data-name=\"Path 1565\" d=\"M5.367,13.467a.63.63,0,0,0,.667-.667V6.667A.63.63,0,0,0,5.367,6a.63.63,0,0,0-.667.667v6.267C4.7,13.2,5.1,13.467,5.367,13.467Z\" transform=\"translate(1.567 2)\"/>\r\n                    <path id=\"Path_1566\" data-name=\"Path 1566\" d=\"M3.9,13.5a.714.714,0,0,0,.667-.667L4.033,6.567A.714.714,0,0,0,3.367,5.9a.845.845,0,0,0-.667.8l.533,6.267A.886.886,0,0,0,3.9,13.5Z\" transform=\"translate(0.9 1.967)\"/>\r\n                    <path id=\"Path_1567\" data-name=\"Path 1567\" d=\"M6.942,13.475a.63.63,0,0,0,.667-.667l.533-6.267c.133-.267-.133-.533-.533-.533-.4-.133-.667.133-.667.533l-.533,6.267c-.134.4.133.667.533.667Z\" transform=\"translate(2.125 1.991)\"/>\r\n                  </g>\r\n                </svg>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let workOrderAsset of extendedWorkOrder.workOrderAssets,let i = index\">\r\n        <div *ngIf=\"!workOrderAsset.isDelete\" class=\"row\" >\r\n        <div class=\"col-sm-6 mb-2 mb-sm-3\">\r\n          <div class=\"row  d-flex align-items-center\">\r\n            <label class=\"col-4\">Asset</label>\r\n            <div class=\"col-8\">\r\n              <input type=\"text\" readonly  [value]=\"workOrderAsset.assetId + ' - ' + workOrderAsset.name\" class=\"readonly form-control\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-sm-6 mb-2 mb-sm-3\">\r\n          <div class=\"row d-flex align-items-center\">\r\n            <label class=\"col-4\">Location</label>\r\n            <div class=\"col-8  d-flex align-items-center\">\r\n              <input type=\"text\" class=\"form-control readonly location-input\"  [value]=\"workOrderAsset.location\" readonly/>\r\n              <button class=\"delete-btn\" (click)=\"handleDeleteItem(i)\"  [disabled]=\"!isEditable\">\r\n                  <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15.002\" height=\"19.003\" viewBox=\"0 0 14.002 18.003\" class=\"del-icon\">\r\n                    <g id=\"wrench\" transform=\"translate(0.001 0)\">\r\n                      <path id=\"Path_1563\" data-name=\"Path 1563\" d=\"M12.333,3.933,1.267,3.8c-.133.133-.4.133-.533.267A.8.8,0,0,0,.6,4.6L1.8,16.2c0,.4.267.533.667.533h8.267A.61.61,0,0,0,11.4,16.2L12.867,4.6a.8.8,0,0,0-.133-.533,1.343,1.343,0,0,0-.4-.134Zm-2,11.6h-7.2L2.067,5.267h9.467Z\" transform=\"translate(0.2 1.267)\"/>\r\n                      <path id=\"Path_1564\" data-name=\"Path 1564\" d=\"M13.333,3.2H10.667A3.739,3.739,0,0,0,6.933,0a3.607,3.607,0,0,0-3.6,3.2H.667A.63.63,0,0,0,0,3.867a.63.63,0,0,0,.667.667H13.333A.63.63,0,0,0,14,3.867a.63.63,0,0,0-.667-.667Zm-6.4-1.867A2.442,2.442,0,0,1,9.333,3.2H4.667A2.407,2.407,0,0,1,6.933,1.333Z\"/>\r\n                      <path id=\"Path_1565\" data-name=\"Path 1565\" d=\"M5.367,13.467a.63.63,0,0,0,.667-.667V6.667A.63.63,0,0,0,5.367,6a.63.63,0,0,0-.667.667v6.267C4.7,13.2,5.1,13.467,5.367,13.467Z\" transform=\"translate(1.567 2)\"/>\r\n                      <path id=\"Path_1566\" data-name=\"Path 1566\" d=\"M3.9,13.5a.714.714,0,0,0,.667-.667L4.033,6.567A.714.714,0,0,0,3.367,5.9a.845.845,0,0,0-.667.8l.533,6.267A.886.886,0,0,0,3.9,13.5Z\" transform=\"translate(0.9 1.967)\"/>\r\n                      <path id=\"Path_1567\" data-name=\"Path 1567\" d=\"M6.942,13.475a.63.63,0,0,0,.667-.667l.533-6.267c.133-.267-.133-.533-.533-.533-.4-.133-.667.133-.667.533l-.533,6.267c-.134.4.133.667.533.667Z\" transform=\"translate(2.125 1.991)\"/>\r\n                    </g>\r\n                  </svg>\r\n                </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"mb-2 mb-sm-3\">\r\n        <button class=\"btn btn-link  p-0 add-asset\" [disabled]=\"!isEditable\" (click)=\"handlePickAssets()\">Add Asset</button>\r\n      </div>\r\n    </div>\r\n      <div class=\"row mb-sm-4 mb-2 service-details-text\">\r\n        <div class=\"col-sm-2 col-4\">\r\n          <label>Service Details</label>\r\n        </div>\r\n        <div class=\"col-sm-10 col-8\">\r\n          <textarea [readOnly]=\"!isEditable\" class=\"form-control\" formControlName=\"serviceDetails\" rows=\"8\" maxlength=\"4000\"></textarea>\r\n        </div>\r\n      </div>\r\n  </form>\r\n  <div class=\"core-info mt-4\">\r\n    <table >\r\n      <tbody>\r\n        <tr>\r\n          <div  *ngFor=\"let workOrderChecklist of extendedWorkOrder.workOrderChecklists\" >\r\n            <app-accordion\r\n              [titleDetails]=\"'Checklist  ' + workOrderChecklist .numberWithPrefix + ' - ' + workOrderChecklist .name\"\r\n            >\r\n            <div  *ngFor=\"let task of workOrderChecklist.task; let first = first, let last = last\">\r\n              <app-checklist-task-item [taskItem]=\"task\"  [firstItem]=\"first\"  class=\"addtask-expanded\" [isTaskEditable]=\"!isEditable\"\r\n              (taskSelected) = \"handleSelectedChecklistTask($event)\" [ngClass]=\"{'last-item': last}\">\r\n              </app-checklist-task-item>\r\n            </div>\r\n            </app-accordion>\r\n          </div>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div class=\"core-info mt-4\">\r\n    <div class=\"mb-2 mb-sm-3\">\r\n      <button class=\"btn btn-link  p-0 add-checklist\" >Add Checklist</button>\r\n    </div>\r\n  </div>\r\n  <div class=\"core-info mt-4\">\r\n  <app-accordion\r\n      [titleDetails]=\"'Order Service History'\"\r\n    >\r\n    <div class=\"row pl-10\">\r\n      <div class=\"col-sm-12 service-history\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <td >User ID</td>\r\n              <td >Date</td>\r\n              <td >Details</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr *ngFor=\"let workOrderServiceDetail of workOrderServiceDetails\">\r\n              <td >{{getUserName(workOrderServiceDetail.userId)}}</td>\r\n              <td >{{standardFormattedDate(workOrderServiceDetail.createdTimestampUtc, true)}}</td>\r\n              <td>\r\n                <span *ngIf=\"workOrderServiceDetail.serviceDetail.length > textMaxLength\">{{workOrderServiceDetail.serviceDetail.substring(0,textMaxLength-10)}}... <a (click) = \"handleViewMoreClick(workOrderServiceDetail)\" class=\"clickView\">View More</a></span>\r\n                <span *ngIf=\"workOrderServiceDetail.serviceDetail.length <= textMaxLength\">{{workOrderServiceDetail.serviceDetail}}</span>\r\n             </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  </app-accordion>\r\n  <app-modal\r\n    *ngIf=\"detailsModalVisible\"\r\n    (modalShouldClose)=\"handleDetailsModalClose()\"\r\n    (contextmenu)=\"disableRightClick($event)\"\r\n    >\r\n      <header class=\"row\">\r\n        <div class=\"col-8\">\r\n         <strong>Service Details{{' (#'+ extendedWorkOrder.number  +')'}}</strong>\r\n        </div>\r\n        <div class=\"col-4 text-end\">\r\n         {{getUserName(selectedWorkOrderServiceDetails.userId)}}\r\n        </div>\r\n      </header>\r\n      <div class=\"col-12 modal-details mb-2\">\r\n        <div class=\"row\">\r\n          <div class=\"col float-start\">\r\n           {{standardFormattedDate(selectedWorkOrderServiceDetails.createdTimestampUtc, true)}}\r\n          </div>\r\n          <div class=\"col text-end\">\r\n            <span *ngIf=\"isShowEditIcon\" (click)=\"enableServiceTextarea = !enableServiceTextarea; isShowEditIcon = false\">\r\n          <svg id=\"edit-button-svgrepo-com\"  xmlns=\"http://www.w3.org/2000/svg\" width=\"15.583\" height=\"14.969\" viewBox=\"0 0 15.583 14.969\">\r\n            <g id=\"Group_3267\" data-name=\"Group 3267\">\r\n              <path id=\"Path_1568\" data-name=\"Path 1568\" d=\"M12.274,86.27a.384.384,0,0,0-.384.384v7.02a1.347,1.347,0,0,1-1.346,1.345H2.114A1.347,1.347,0,0,1,.769,93.674v-8.43A1.347,1.347,0,0,1,2.114,83.9h8.43a.384.384,0,1,0,0-.769H2.114A2.117,2.117,0,0,0,0,85.244v8.43a2.117,2.117,0,0,0,2.114,2.114h8.43a2.117,2.117,0,0,0,2.114-2.114v-7.02A.384.384,0,0,0,12.274,86.27Z\" transform=\"translate(0 -80.82)\" fill=\"#424244\"/>\r\n              <path id=\"Path_1569\" data-name=\"Path 1569\" d=\"M196.426,10.1a1.19,1.19,0,0,0-1.681,0l-6.585,6.585a.892.892,0,0,0-.134.17l-.912,2.049a.384.384,0,0,0,.508.508l2.049-.912a.9.9,0,0,0,.17-.134l6.585-6.585a1.188,1.188,0,0,0,0-1.681Zm-.544,1.137L189.3,17.823l0,0-1.07.476.476-1.07,0,0,6.585-6.585a.429.429,0,0,1,.593,0,.419.419,0,0,1,0,.593Z\" transform=\"translate(-181.191 -9.753)\" fill=\"#424244\"/>\r\n            </g>\r\n          </svg>\r\n        </span>\r\n          </div>\r\n        </div>\r\n        <textarea class=\"modal-details-textarea\" [class.modal-details-textarea-focus] = \"enableServiceTextarea\" [(ngModel)]=\"selectedWorkOrderServiceDetails.serviceDetail\" [readOnly]=\"!enableServiceTextarea\"  row=\"8\"\r\n        (input)=\"handleTextAreaInput()\" maxlength=\"4000\" >\r\n        </textarea>\r\n      </div>\r\n      <div class=\"modal-details-footer\">\r\n        <ng-container  *ngIf=\"enableServiceTextarea\">\r\n        <button [disabled]=\"isSubmitDisabled\"\r\n        class=\"btn btn-primary mt-4 handlesServicesSaveBtn\"\r\n        (click)=\"handleServiceSaveButton()\"\r\n      >\r\n      <span>Save</span>\r\n      </button>\r\n    </ng-container>\r\n      </div>\r\n\r\n\r\n  </app-modal>\r\n  </div>\r\n  <app-modal\r\n    *ngIf=\"addAssetsModalVisible\"\r\n    (modalShouldClose)=\"handleDetailsModalClose()\"\r\n    (contextmenu)=\"disableRightClick($event)\"\r\n    >\r\n      <app-pick-assets\r\n        (addedAssets)=\"handleAddedWorkOrderAssets($event)\"\r\n        [existingAssets]=\"this.extendedWorkOrder.workOrderAssets\"\r\n        >\r\n      </app-pick-assets>\r\n  </app-modal>\r\n  <footer>\r\n    <div *ngIf=\"form\" class=\"form-actions\" [class.visible]=\"!isUpdatingWorkOrder && showSaveButton\">\r\n      <button\r\n        class=\"btn btn-primary btn-block col-12\"\r\n        (click)=\"updateWorkOrder()\"\r\n      >\r\n      <span>Save all changes</span>\r\n      </button>\r\n    </div>\r\n  </footer>\r\n</article>\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport {\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  QueryList,\r\n  ViewChild,\r\n  ViewChildren\r\n} from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { debounceTime, filter, map } from 'rxjs/operators';\r\nimport {\r\n  AuthenticationService,\r\n  IExtendedWorkOrder,\r\n  ISkuStock,\r\n  ISpares,\r\n  IWorkOrderSpares,\r\n  PermissionGroup,\r\n  Role,\r\n  SkuService,\r\n  SparesGroup,\r\n  Toast,\r\n  ToastService,\r\n  UserProfile,\r\n  WorkOrdersPermissions,\r\n  WorkordersService,\r\n  WorkorderStatus\r\n} from 'src/app/services';\r\nimport { stringCamelize } from 'src/utils/stringUtils';\r\nimport { WorkOrderWizard } from '../work-order.wizard';\r\n\r\n@Component({\r\n  selector: 'app-pick-workorder-spares',\r\n  templateUrl: './pick-workorder-spares.component.html',\r\n  styleUrls: ['./pick-workorder-spares.component.scss']\r\n})\r\nexport class PickWorkOrderSparesComponent implements OnInit {\r\n  public wordOrderNumber: string;\r\n  public searchForm: FormGroup;\r\n  public searchSparesSubscription: Subscription;\r\n  public allSpareGroupOption = '';\r\n  public sparesGroupOptions: Array<any> = [];\r\n  public sparesGroups: Array<SparesGroup> = [];\r\n  public WorkOrderStatus = WorkorderStatus;\r\n  public isLoading: Boolean = true;\r\n  public workOrderSpares: IWorkOrderSpares;\r\n  public showSaveButton = false;\r\n  public isUpdatingSpares = false;\r\n  @ViewChild('searchInput')\r\n  public searchInputElement: ElementRef;\r\n  public isSparesSelected = false;\r\n  @ViewChildren('searchResult')\r\n  public searchResultElements: QueryList<ElementRef>;\r\n  public searchResultsVisible = false;\r\n  public searchResults: ISkuStock[] = [];\r\n  public isSearching = false;\r\n  public isEditable: boolean;\r\n  public extendedWorkOrder: IExtendedWorkOrder;\r\n  public isGettingUserRights = true;\r\n  public isQtyFormInvalid = false;\r\n  public workOrderStatus: string;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private skuService: SkuService,\r\n    private workOrderService: WorkordersService,\r\n    private toastService: ToastService,\r\n    private authenticationService: AuthenticationService,\r\n    private workOrderWizard: WorkOrderWizard\r\n  ) {\r\n    this.workOrderStatus = this.workOrderWizard.workOrder.status.toString();\r\n    this.wordOrderNumber = this.workOrderWizard.workOrder.number.toString();\r\n    this.viewWorkOrderForId();\r\n    this.getSpares(this.wordOrderNumber);\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.getSearchGroupOptions();\r\n  }\r\n\r\n  public viewWorkOrderForId() {\r\n    const workOrderNumber = this.workOrderWizard.workOrder.number.toString();\r\n    this.workOrderService\r\n      .viewWorkOrderForId(workOrderNumber)\r\n      .subscribe(extendedWorkOrder => {\r\n        this.extendedWorkOrder = extendedWorkOrder;\r\n        this.checkUserEditRights();\r\n      });\r\n  }\r\n  public searchSpares() {\r\n    this.searchSparesSubscription &&\r\n      !this.searchSparesSubscription.closed &&\r\n      this.searchSparesSubscription.unsubscribe();\r\n    const textValue = this.searchForm.get('text').value;\r\n    if (this.isSparesSelected === false) {\r\n      this.isSearching = true;\r\n      this.searchResultsVisible = true;\r\n      this.searchSparesSubscription = this.skuService\r\n        .getSkuStockForSpares(\r\n          this.searchForm.get('sparesGroup').value,\r\n          textValue\r\n        )\r\n        .subscribe((skus: ISkuStock[]) => {\r\n          this.searchResults = skus;\r\n          this.isSearching = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  public getSearchGroupOptions() {\r\n    this.skuService.getSparesGroups().subscribe((data: Array<SparesGroup>) => {\r\n      this.sparesGroups = data;\r\n      this.sparesGroups.map((sparesGroup: SparesGroup) => {\r\n        this.sparesGroupOptions.push({\r\n          label: stringCamelize(sparesGroup.name),\r\n          value: sparesGroup.groupId + '~' + sparesGroup.subGroupId\r\n        });\r\n      });\r\n      this.isLoading = false;\r\n    });\r\n  }\r\n\r\n  public handleDeleteSparesSku(isSkuDeleted: boolean, skuIndex: number) {\r\n    this.showSaveButton = true;\r\n    if (isSkuDeleted) {\r\n      this.workOrderSpares.spareSkus.splice(skuIndex, 1);\r\n    }\r\n  }\r\n\r\n  public getSpares(wordOrderId: string) {\r\n    this.workOrderService\r\n      .getWorkOrderSpares(wordOrderId)\r\n      .subscribe(workOrderSpares => {\r\n        const spareSkus: ISpares[] = [];\r\n        workOrderSpares.spareSkus.forEach(sparesSku => {\r\n          if (sparesSku) {\r\n            const inStock = sparesSku.sku.quantities.inStock;\r\n            const qty = sparesSku.quantity;\r\n\r\n            sparesSku.sku.quantities.inStock = inStock + qty;\r\n            spareSkus.push(sparesSku);\r\n          }\r\n        });\r\n\r\n        this.workOrderSpares = {\r\n          siteId: workOrderSpares.siteId,\r\n          workOrderNumber: workOrderSpares.workOrderNumber,\r\n          spareSkus: spareSkus\r\n        };\r\n      });\r\n  }\r\n\r\n  public handleSkuQtyChange(skuQty: number, skuIndex: number) {\r\n    this.workOrderSpares.spareSkus[skuIndex].quantity = skuQty;\r\n    this.workOrderSpares.spareSkus.forEach(spareSku => {\r\n      if (spareSku.quantity > spareSku.sku.quantities.inStock) {\r\n        this.showSaveButton = false;\r\n        return;\r\n      } else {\r\n        this.showSaveButton = true;\r\n      }\r\n    });\r\n  }\r\n\r\n  public handleUpdateSpares() {\r\n    this.isUpdatingSpares = true;\r\n    this.workOrderService.updateWorkOrderSpares(this.workOrderSpares).subscribe(\r\n      workOrderSpares => {\r\n        this.workOrderSpares = workOrderSpares;\r\n        this.isUpdatingSpares = false;\r\n        this.showSaveButton = false;\r\n        this.toastService.showToast(\r\n          new Toast('Updated spares for this work order.')\r\n        );\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        this.toastService.showErrorToast('Unable to update spares.');\r\n        this.isUpdatingSpares = false;\r\n        this.showSaveButton = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  public clearSearchForm() {\r\n    this.searchForm.get('text').setValue('');\r\n    this.searchForm.get('spares').setValue(null);\r\n    this.searchResultsVisible = false;\r\n  }\r\n\r\n  public handleSearchKeyUp(event) {\r\n    this.isSparesSelected = false;\r\n    switch (event.key) {\r\n      case 'ArrowDown':\r\n        const resultButtons = this.searchResultElements.toArray();\r\n        resultButtons.length > 0 && resultButtons[0].nativeElement.focus();\r\n        break;\r\n      case 'Escape':\r\n        this.clearSearchForm();\r\n        break;\r\n    }\r\n  }\r\n\r\n  public sparesNameIsInSearchResults(searchText: string) {\r\n    let result = false;\r\n    for (const spares of this.searchResults) {\r\n      if (spares.id + ' - ' + spares.description === searchText) {\r\n        result = true;\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  public handleSearchBlur() {\r\n    setTimeout(() => {\r\n      const searchValue = this.searchForm.get('text').value;\r\n      const activeElement: HTMLElement = document.activeElement as HTMLElement;\r\n      if (\r\n        this.sparesNameIsInSearchResults(searchValue) ||\r\n        activeElement.dataset.sparesname\r\n      ) {\r\n        return;\r\n      }\r\n      this.clearSearchForm();\r\n    }, 0);\r\n  }\r\n\r\n  public handleSearchResultKeyUp(event) {\r\n    switch (event.key) {\r\n      case 'ArrowUp':\r\n        const firstResultButton = this.searchResultElements.toArray()[0]\r\n          .nativeElement;\r\n        if (event.target === firstResultButton) {\r\n          this.searchInputElement.nativeElement.focus();\r\n        } else {\r\n          event.target.previousSibling.focus();\r\n        }\r\n        break;\r\n      case 'ArrowDown':\r\n        event.target.nextSibling && event.target.nextSibling.focus();\r\n        break;\r\n      case 'Escape':\r\n        this.clearSearchForm();\r\n        break;\r\n    }\r\n  }\r\n\r\n  public handleSearchResultClick(spares: ISkuStock) {\r\n    if (\r\n      this.workOrderSpares.spareSkus.filter(spare => spare.sku.id === spares.id)\r\n        .length !== 0\r\n    ) {\r\n      this.toastService.showErrorToast(\r\n        `Item ${spares.id} Spare already selected`\r\n      );\r\n      this.clearSearchForm();\r\n      this.searchResultsVisible = false;\r\n      this.isSparesSelected = true;\r\n      return;\r\n    }\r\n\r\n    if (spares.quantities.inStock === 0) {\r\n      this.toastService.showErrorToast(`Item ${spares.id} does not have stock`);\r\n      this.clearSearchForm();\r\n      this.searchResultsVisible = false;\r\n      this.isSparesSelected = true;\r\n      return;\r\n    }\r\n\r\n    this.workOrderSpares.spareSkus.push({\r\n      sku: spares,\r\n      quantity: spares.quantities.inStock > 0 ? 1 : 0\r\n    });\r\n    this.clearSearchForm();\r\n    this.searchResultsVisible = false;\r\n    this.isSparesSelected = true;\r\n    this.showSaveButton = true;\r\n  }\r\n\r\n  private checkUserEditRights() {\r\n    this.isGettingUserRights = true;\r\n    const userRole$: Observable<UserProfile> = this.authenticationService.currentUserProfile$.pipe(\r\n      map(userProfile => userProfile)\r\n    );\r\n\r\n    userRole$.subscribe(userProfile => {\r\n      this.authenticationService\r\n        .currentUserHasPermission({\r\n          [PermissionGroup.WorkOrders]: [WorkOrdersPermissions.CanEditWorkOrder]\r\n        })\r\n        .subscribe(hasPermission => {\r\n          if (userProfile.userRole.groupName !== Role.Technician) {\r\n            this.isEditable =\r\n              hasPermission &&\r\n              Number(this.workOrderStatus) !== WorkorderStatus.Closed;\r\n          } else {\r\n            this.isEditable =\r\n              hasPermission &&\r\n              Number(this.workOrderStatus) !== WorkorderStatus.Closed &&\r\n              Number(this.workOrderStatus) !== WorkorderStatus.Complete;\r\n          }\r\n          this.isGettingUserRights = false;\r\n        });\r\n    });\r\n\r\n    this.searchForm = this.formBuilder.group({\r\n      text: new FormControl({ value: '', disabled: !this.isEditable }),\r\n      spares: null,\r\n      sparesGroup: new FormControl({\r\n        value: this.allSpareGroupOption,\r\n        disabled: !this.isEditable\r\n      })\r\n    });\r\n    this.searchForm\r\n      .get('text')\r\n      .valueChanges.pipe(\r\n        debounceTime(700),\r\n        filter(textValue => textValue.length >= 3),\r\n        filter(textValue => !this.sparesNameIsInSearchResults(textValue))\r\n      )\r\n      .subscribe(() => this.searchSpares());\r\n  }\r\n\r\n  public handleInValidQty(isQtyFormInvalid: boolean) {\r\n    this.isQtyFormInvalid = isQtyFormInvalid;\r\n  }\r\n}\r\n","<app-section-header\r\n  [customCurrentPageTitle]=\"'Pick Spares'\"\r\n></app-section-header>\r\n<h1>\r\n  Picking spares for WO{{ this.wordOrderNumber }}\r\n  <span\r\n    *ngIf=\"\r\n      workOrderSpares &&\r\n      workOrderSpares.spareSkus &&\r\n      workOrderSpares.spareSkus.length > 0\r\n    \"\r\n    >({{ workOrderSpares.spareSkus.length }} item<span\r\n      *ngIf=\"workOrderSpares.spareSkus.length > 1\"\r\n      >s</span\r\n    >)</span\r\n  >\r\n</h1>\r\n<div class=\"spinner\" *ngIf=\"isLoading || isGettingUserRights\"></div>\r\n<div *ngIf=\"!isLoading && !isGettingUserRights\">\r\n  <form [formGroup]=\"searchForm\" class=\"search-form\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6\">\r\n        <div class=\"form-group\">\r\n          <div class=\"find-as-you-type input-with-search-wrapper\">\r\n            <input\r\n              type=\"text\"\r\n              formControlName=\"text\"\r\n              class=\"form-control form-control--search-prefix\"\r\n              placeholder=\"Search spares by id or name\"\r\n              (blur)=\"handleSearchBlur()\"\r\n              (keyup)=\"handleSearchKeyUp($event)\"\r\n            />\r\n            <input formControlName=\"spares\" type=\"hidden\" />\r\n            <div *ngIf=\"searchResultsVisible\">\r\n              <div *ngIf=\"!isSearching\" class=\"find-as-you-type__results\">\r\n                <button\r\n                  class=\"select-spares-btn\"\r\n                  #searchResult\r\n                  *ngFor=\"let spares of searchResults\"\r\n                  (keyup)=\"handleSearchResultKeyUp($event)\"\r\n                  (click)=\"handleSearchResultClick(spares)\"\r\n                  [attr.data-sparesname]=\"spares.sparesGroupName\"\r\n                >\r\n                  {{ spares.id }} - {{ spares.description }}\r\n                </button>\r\n              </div>\r\n\r\n              <div\r\n                *ngIf=\"searchResults.length === 0 && !isSearching\"\r\n                class=\"find-as-you-type__no-results mt-2\"\r\n              >\r\n                No spares found\r\n              </div>\r\n              <div\r\n                *ngIf=\"isSearching\"\r\n                class=\"find-as-you-type__spinner-container\"\r\n              >\r\n                <div class=\"spinner\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6\">\r\n        <select class=\"custom-select\" formControlName=\"sparesGroup\">\r\n          <option [value]=\"allSpareGroupOption\" default>All Spare Group</option>\r\n          <option\r\n            *ngFor=\"let sparesGroupOption of sparesGroupOptions\"\r\n            [value]=\"sparesGroupOption.value\"\r\n          >\r\n            {{ sparesGroupOption.label }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n\r\n    <div\r\n      *ngIf=\"\r\n        !workOrderSpares ||\r\n        !workOrderSpares.spareSkus ||\r\n        workOrderSpares.spareSkus.length === 0\r\n      \"\r\n      class=\"text-center mt-5\"\r\n    >\r\n      No spares added to this work order.\r\n    </div>\r\n    <div\r\n      *ngIf=\"\r\n        workOrderSpares &&\r\n        workOrderSpares.spareSkus &&\r\n        workOrderSpares.spareSkus.length > 0\r\n      \"\r\n    >\r\n      <table>\r\n        <thead>\r\n          <th>Name</th>\r\n          <th>UOM</th>\r\n          <th>Quantity</th>\r\n          <th></th>\r\n        </thead>\r\n        <tbody>\r\n          <app-spares-skus\r\n            *ngFor=\"\r\n              let sparesSku of this.workOrderSpares.spareSkus;\r\n              let skuIndex = index\r\n            \"\r\n            [sparesSku]=\"sparesSku\"\r\n            (isSkuDeleted)=\"handleDeleteSparesSku($event, skuIndex)\"\r\n            (handlesQtyChange)=\"handleSkuQtyChange($event, skuIndex)\"\r\n            [isEditable]=\"isEditable\"\r\n            (isQtyInValid)=\"handleInValidQty($event)\"\r\n          ></app-spares-skus>\r\n          <tr class=\"non-sku-row\">\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n            <td></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </form>\r\n</div>\r\n<article>\r\n  <footer *ngIf=\"showSaveButton\">\r\n    <div class=\"form-actions\" [class.visible]=\"showSaveButton\">\r\n      <button\r\n        class=\"btn btn-primary btn-block col-12\"\r\n        (click)=\"handleUpdateSpares()\"\r\n        [disabled]=\"isQtyFormInvalid\"\r\n      >\r\n        <span *ngIf=\"!isUpdatingSpares\">Save picked list</span>\r\n        <div *ngIf=\"isUpdatingSpares\" class=\"spinner light\"></div>\r\n      </button>\r\n    </div>\r\n  </footer>\r\n</article>\r\n","import { Injectable } from '@angular/core';\r\nimport { Workorder } from '../services';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class WorkOrderWizard {\r\n  public workOrder: Workorder;\r\n\r\n  constructor() {}\r\n\r\n  public reset() {\r\n    this.workOrder = undefined;\r\n  }\r\n}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport {\r\n  standardFormattedDate,\r\n  standardFormattedDateNoYear\r\n} from 'src/utils/dateUtils';\r\nimport { WorkordersService } from '../services/workorder/workorder.service';\r\nimport {\r\n  Workorder,\r\n  WorkorderStatus\r\n} from '../services/workorder/workorder.types';\r\nimport { Router } from '@angular/router';\r\nimport {\r\n  AuthenticationService,\r\n  PermissionGroup,\r\n  ToastService,\r\n  WorkOrdersPermissions\r\n} from '../services';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { SearchFilterService } from '../services/search-filter/search-filter.service';\r\nimport { WorkOrderWizard } from './work-order.wizard';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-work-orders',\r\n  templateUrl: './work-orders.component.html',\r\n  styleUrls: ['./work-orders.component.scss']\r\n})\r\nexport class WorkOrdersComponent implements OnInit, OnDestroy {\r\n  public searchForm: FormGroup;\r\n  public isLoadingWorkorders: boolean;\r\n  public offset = 0;\r\n  public take = 10;\r\n  public shouldGetNextWorkorders = true;\r\n  public workorders: Workorder[] = [];\r\n  public standardFormattedDate = standardFormattedDate;\r\n  public standardFormattedDateNoYear = standardFormattedDateNoYear;\r\n  public WorkorderStatus = WorkorderStatus;\r\n  public canCreateWorkOrder: boolean;\r\n\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private workorderService: WorkordersService,\r\n    private router: Router,\r\n    private authenticationService: AuthenticationService,\r\n    private searchFilterService: SearchFilterService,\r\n    private workOrderWizard: WorkOrderWizard,\r\n    private toastService: ToastService\r\n  ) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.setPermissionBooleans();\r\n    this.searchForm = this.formBuilder.group({\r\n      text: this.searchFilterService.searchWOTextValue\r\n    });\r\n    this.initiateFreshSearchSettings();\r\n    this.formChangeEvent();\r\n    this.loadNextWorkorders();\r\n  }\r\n\r\n  public formChangeEvent() {\r\n    this.searchForm\r\n      .get('text')\r\n      .valueChanges.pipe(\r\n        debounceTime(700),\r\n        filter(textValue => textValue.length >= 3 || textValue.length === 0)\r\n      )\r\n      .subscribe(() => {\r\n        this.submitSearch();\r\n      });\r\n  }\r\n\r\n  public initiateFreshSearchSettings(): void {\r\n    this.workorders = [];\r\n    this.workOrderWizard.reset();\r\n    this.offset = 0;\r\n    this.shouldGetNextWorkorders = true;\r\n  }\r\n\r\n  public loadNextWorkorders(): void {\r\n    this.isLoadingWorkorders = true;\r\n    this.workorderService\r\n      .listWorkorders({\r\n        offset: this.offset,\r\n        take: this.take,\r\n        text: this.searchForm.value.text\r\n      })\r\n      .subscribe((workorderList: Workorder[]) => {\r\n        this.searchFilterService.searchWOTextValueCache = this.searchForm.value.text;\r\n        this.workorders.push(...workorderList);\r\n        this.offset += this.take;\r\n        if (workorderList.length < this.take) {\r\n          this.shouldGetNextWorkorders = false;\r\n        }\r\n        this.isLoadingWorkorders = false;\r\n      });\r\n  }\r\n\r\n  public submitSearch() {\r\n    this.initiateFreshSearchSettings();\r\n    this.loadNextWorkorders();\r\n  }\r\n\r\n  public handleSelectedWorkorderClick(\r\n    workOrderNumber: string,\r\n    workOrder: Workorder\r\n  ) {\r\n    this.workOrderWizard.workOrder = workOrder;\r\n    if (this.workOrderWizard.workOrder) {\r\n      this.router.navigate(['work-orders', 'WO' + workOrderNumber]);\r\n    }\r\n  }\r\n\r\n  public createWorkOrder() {\r\n    this.router.navigate(['work-orders', 'create-work-order']);\r\n  }\r\n\r\n  private setPermissionBooleans() {\r\n    this.authenticationService\r\n      .currentUserHasPermission({\r\n        [PermissionGroup.WorkOrders]: [WorkOrdersPermissions.CanCreateWorkOrder]\r\n      })\r\n      .subscribe(hasPermission => (this.canCreateWorkOrder = hasPermission));\r\n  }\r\n\r\n  public ngOnDestroy() {\r\n    this.searchFilterService.initiateWOSearchFilter();\r\n  }\r\n\r\n  public getUserName(userDetails: string) {\r\n    if (userDetails && userDetails.includes('-')) {\r\n      return userDetails.split('-')[1];\r\n    } else {\r\n      return userDetails;\r\n    }\r\n  }\r\n\r\n  public getWorkOrderCSV() {\r\n    this.workorderService.getWorkorderCSV().subscribe(\r\n      workOrder => {\r\n        const MIME_TYPE = 'text/csv';\r\n        const blob = new Blob([workOrder], { type: MIME_TYPE });\r\n        const date = new Date(Date.now());\r\n        const curDate = date.toLocaleString('en-IN', {\r\n          year: 'numeric',\r\n          month: 'numeric',\r\n          day: 'numeric'\r\n        });\r\n        const a = window.document.createElement('a');\r\n        const fileName = 'workorder';\r\n        a.href = window.URL.createObjectURL(blob);\r\n        a.download = `${fileName}-${curDate}.csv`;\r\n        document.body.appendChild(a);\r\n        a.click();\r\n        document.body.removeChild(a);\r\n      },\r\n      (err: HttpErrorResponse) => {\r\n        this.toastService.showErrorToast(\r\n          'Unable to download the work orders CSV file.'\r\n        );\r\n        return;\r\n      }\r\n    );\r\n  }\r\n}\r\n","<app-section-header [customCurrentPageTitle]=\"'Work Orders'\"></app-section-header>\r\n<h1>Work Orders</h1>\r\n  <form [formGroup]=\"searchForm\" class=\"search-filter-form \">\r\n        <div class=\"input-with-search-wrapper\">\r\n          <input\r\n            type=\"text\"\r\n            formControlName=\"text\"\r\n            class=\"form-control form-control--search-prefix\"\r\n            placeholder=\"Search by work order id, title or asset name\"\r\n          />\r\n        </div>\r\n      <div class=\"workorder-source-filter\">\r\n        <button [disabled]=\"!canCreateWorkOrder\"  class=\"btn\" (click)=\"createWorkOrder()\" >\r\n          <span>Create Work Order</span>\r\n        </button>\r\n      </div>\r\n       <div>\r\n          <button class=\"btn-download-csv\"  type=\"button\" (click)=\"getWorkOrderCSV()\">\r\n            <svg viewBox=\"0 0 15.375 19.188\"><defs/><g id=\"Group_1558\" data-name=\"Group 1558\" transform=\"translate(-299.063 -288.813)\"><g id=\"Path_783\" class=\"cls-1\" data-name=\"Path 783\"><path d=\"M940.063 237.334v19.188h15.375v-14.313l-4.875-4.875h-10.5z\" class=\"cls-3\" transform=\"translate(-641 51.479)\"/><path d=\"M954.438 255.521v-12.898l-4.29-4.289h-9.085v17.187h13.375m1 1h-15.375v-19.187h10.5l4.875 4.875v14.312z\" class=\"cls-4\" transform=\"translate(-641 51.479)\"/></g><path id=\"Path_784\" d=\"M954.918 242.288h-5.043v-5.079\" class=\"cls-2\" data-name=\"Path 784\" transform=\"translate(-640.959 51.604)\"/><g id=\"Path_785\" class=\"cls-1\" data-name=\"Path 785\"><path d=\"M943.5 245.334h8.563v7.25H943.5z\" class=\"cls-3\" transform=\"translate(-641 51.479)\"/><path d=\"M951.063 251.584v-5.25H944.5v5.25h6.563m1 1H943.5v-7.25h8.563v7.25z\" class=\"cls-4\" transform=\"translate(-641 51.479)\"/></g><path id=\"Path_786\" d=\"M946.5 245.084v7.25\" class=\"cls-2\" data-name=\"Path 786\" transform=\"translate(-641.064 51.729)\"/><path id=\"Path_787\" d=\"M952.063 247.834H944\" class=\"cls-2\" data-name=\"Path 787\" transform=\"translate(-641 51.479)\"/><path id=\"Path_788\" d=\"M951.938 250.4h-8.562\" class=\"cls-2\" data-name=\"Path 788\" transform=\"translate(-640.875 51.479)\"/></g>\r\n            </svg>\r\n            <h2>CSV</h2>\r\n          </button>\r\n        </div>\r\n  </form>\r\n<ul class=\"workorder-list\">\r\n  <li>\r\n      <div>\r\n        <span>id</span>\r\n      </div>\r\n      <div>\r\n       <span>due</span>\r\n      </div>\r\n      <div>\r\n        <span>title</span>\r\n       </div>\r\n      <div>\r\n        <span>status</span>\r\n      </div>\r\n      <div>\r\n        <span>assigned to</span>\r\n      </div>\r\n\r\n  </li>\r\n  <li *ngFor=\"let workorder of workorders; let i = index\"   class=\"status-{{workorder.status ? WorkorderStatus[workorder.status] : 'Open'}}\"\r\n      (click) = \"handleSelectedWorkorderClick(workorder.number, workorder)\"\r\n  >\r\n    <div>\r\n      <span>{{workorder.number}}</span>\r\n    </div>\r\n    <div>\r\n      <span class=\"desktop-view\">{{standardFormattedDate(workorder.dueDate,true)}}</span>\r\n      <span class=\"mobile-view\">{{standardFormattedDateNoYear(workorder.dueDate,true)}}</span>\r\n    </div>\r\n    <div>\r\n      <span>{{workorder.title}}</span>\r\n    </div>\r\n    <div>\r\n      <span>{{WorkorderStatus[workorder.status]}}</span>\r\n    </div>\r\n    <div>\r\n      <span>{{getUserName(workorder.assignedToUser)}}</span>\r\n    </div>\r\n\r\n    <div class=\"row-toggle\">\r\n      <div>\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 8.797 5.194\">\r\n          <path d=\"M8,0l.8.8-4.4,4.4Q2.2,3,0,.8L.8,0C.81-.014,4.394,3.625,4.394,3.625S8.006,0,8,0Z\" />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  </li>\r\n</ul>\r\n\r\n<div *ngIf=\"workorders.length === 0 && !isLoadingWorkorders\">\r\n  No workorders found\r\n</div>\r\n\r\n<div *ngIf=\"shouldGetNextWorkorders && !isLoadingWorkorders\" class=\"text-center\">\r\n  <button class=\"btn btn-link\" (click)=\"loadNextWorkorders()\">Load more</button>\r\n</div>\r\n\r\n<div *ngIf=\"isLoadingWorkorders\">\r\n  <div class=\"spinner\"></div>\r\n</div>\r\n","import { Component, Input, OnInit, Output, EventEmitter } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { ISpares } from 'src/app/services';\r\n\r\n@Component({\r\n  selector: 'app-spares-skus',\r\n  templateUrl: './spares-skus.component.html',\r\n  styleUrls: ['./spares-skus.component.scss']\r\n})\r\nexport class SparesSkusComponent implements OnInit {\r\n  @Input() public sparesSku: ISpares;\r\n  @Input() public isEditable: boolean;\r\n  public qtyForm: FormGroup;\r\n  @Output() public isSkuDeleted = new EventEmitter<boolean>();\r\n  @Output() public handlesQtyChange = new EventEmitter<number>();\r\n  @Output() public isQtyInValid = new EventEmitter<boolean>();\r\n\r\n  constructor(private formBuilder: FormBuilder) {}\r\n\r\n  public ngOnInit(): void {\r\n    this.qtyForm = this.formBuilder.group({\r\n      qty: [\r\n        this.sparesSku.quantity,\r\n        [\r\n          Validators.min(1),\r\n          Validators.max(this.sparesSku.sku.quantities.inStock),\r\n          Validators.required\r\n        ]\r\n      ]\r\n    });\r\n\r\n    this.qtyForm\r\n      .get('qty')\r\n      .valueChanges.pipe(\r\n        debounceTime(700),\r\n        filter(textValue => textValue <= this.sparesSku.sku.quantities.inStock)\r\n      )\r\n      .subscribe((skuQty: number) => {\r\n        this.handlesQtyChange.emit(skuQty);\r\n        this.isQtyInValid.emit(\r\n          this.qtyForm.value.qty > this.sparesSku.sku.quantities.inStock\r\n        );\r\n      });\r\n  }\r\n\r\n  public handleQtyClipboard(event: ClipboardEvent) {\r\n    event.preventDefault();\r\n    return;\r\n  }\r\n\r\n  public disableRightClick(e) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  public handleQtyInputKeyUp(event: KeyboardEvent) {\r\n    this.isQtyInValid.emit(\r\n      this.qtyForm.get('qty').value > this.sparesSku.sku.quantities.inStock\r\n    );\r\n    if (\r\n      event.key === 'Enter' &&\r\n      this.qtyForm.value.qty > 0 &&\r\n      this.qtyForm.value.qty.toString().length > 0 &&\r\n      this.qtyForm.get('qty').value > this.sparesSku.sku.quantities.inStock\r\n    ) {\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  public handleQtyInputKeyDown(event) {\r\n    const qtyStringExceedsMaxLength =\r\n      this.qtyForm.value.qty.toString().length >= 4;\r\n    if (\r\n      this.qtyForm.valid &&\r\n      this.qtyForm.get('qty').value > 0 &&\r\n      this.qtyForm.get('qty').value > this.sparesSku.sku.quantities.inStock &&\r\n      event.key === 'Enter'\r\n    ) {\r\n      return;\r\n    }\r\n    if (event.key === 'Backspace' || event.key === 'Delete') {\r\n      return;\r\n    }\r\n    if (qtyStringExceedsMaxLength || isNaN(event.key) || event.keyCode === 32) {\r\n      event.preventDefault();\r\n    }\r\n\r\n    const currentQty: number = this.qtyForm.get('qty').value;\r\n    this.handlesQtyChange.emit(currentQty);\r\n\r\n    this.isQtyInValid.emit(\r\n      this.qtyForm.get('qty').value > this.sparesSku.sku.quantities.inStock\r\n    );\r\n  }\r\n\r\n  public handleDeleteItem() {\r\n    this.isSkuDeleted.emit(true);\r\n  }\r\n\r\n  public handlesDecreaseQty() {\r\n    let currentQty: number = this.qtyForm.get('qty').value;\r\n    currentQty -= 1;\r\n    if (currentQty <= 0) {\r\n      return;\r\n    }\r\n    this.qtyForm.setValue({ qty: currentQty });\r\n\r\n    this.handlesQtyChange.emit(currentQty);\r\n\r\n    this.isQtyInValid.emit(\r\n      this.qtyForm.get('qty').value > this.sparesSku.sku.quantities.inStock\r\n    );\r\n  }\r\n\r\n  public handlesIncreaseQty() {\r\n    let currentQty: number = Number(this.qtyForm.get('qty').value);\r\n    currentQty += 1;\r\n    if (currentQty > this.sparesSku.sku.quantities.inStock) {\r\n      return;\r\n    }\r\n    this.qtyForm.setValue({ qty: currentQty });\r\n\r\n    this.handlesQtyChange.emit(currentQty);\r\n\r\n    this.isQtyInValid.emit(\r\n      this.qtyForm.get('qty').value > this.sparesSku.sku.quantities.inStock\r\n    );\r\n  }\r\n}\r\n","  <td class=\"spare-name-cell\">\r\n    <span><strong>{{sparesSku.sku.sparesGroupName}}</strong><br/></span>\r\n    <span><strong>ID </strong>{{sparesSku.sku.id}}<br/>\r\n      {{sparesSku.sku.description}}\r\n      </span>\r\n  </td>\r\n  <td class=\"sku-uom-cell mobile-only\">\r\n    <span>{{sparesSku.sku.uom}}</span>\r\n  </td>\r\n\r\n  <td class=\"sku-qty-cell\">\r\n    <form class=\"spares-row\" [formGroup]=\"qtyForm\">\r\n      <button [disabled]=\"!this.isEditable \"\r\n            (click)=\"handlesDecreaseQty()\" class=\"btn-decrease\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"20\"><g data-name=\"Group 3136\" transform=\"translate(-556 -289.5)\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#777\" data-name=\"Ellipse 284\" transform=\"translate(556 292)\"/><text fill=\"#fff\" data-name=\"-\" font-family=\"Kohinoor-Book, Kohinoor\" font-size=\"15\" transform=\"translate(561.5 304.5)\"><tspan x=\"0\" y=\"0\">-</tspan></text></g></svg>\r\n      </button>\r\n\r\n      <input formControlName=\"qty\" type=\"text\" (paste)=\"handleQtyClipboard($event)\"\r\n      (contextmenu)=\"disableRightClick($event)\" (keydown)=\"handleQtyInputKeyDown($event)\" [readOnly]=\"!this.isEditable\"\r\n      (keyup)=\"handleQtyInputKeyUp($event)\" pattern=\"[0-9]*\" inputmode=\"numeric\" ng-pattern=\"[0-9]*\"\r\n      class=\"form-control qty-text-input\" maxlength=\"4\" />\r\n\r\n        <div class=\"alert alert-danger arrow-alert\" *ngIf=\"qtyForm.value.qty > sparesSku.sku.quantities.inStock && qtyForm.dirty && qtyForm.value !== ''\">\r\n          <span>Quantity is greater than instock quantity</span>\r\n        </div>\r\n\r\n      <button [disabled]=\"!this.isEditable\" class=\"btn-increase\"  (click)=\"handlesIncreaseQty()\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"20\"><g data-name=\"Group 3138\" transform=\"translate(-946 -724.2)\"><circle cx=\"8\" cy=\"8\" r=\"8\" fill=\"#777\" data-name=\"Ellipse 285\" transform=\"translate(946 726)\"/><text fill=\"#fff\" data-name=\"+\" font-family=\"Kohinoor-Book, Kohinoor\" font-size=\"15\" transform=\"translate(950 739.2)\"><tspan x=\"0\" y=\"0\">+</tspan></text></g></svg>\r\n      </button>\r\n\r\n    </form>\r\n  </td>\r\n  <td class=\"delete-row-cell\" >\r\n    <button (click)=\"handleDeleteItem()\" class=\"delete-btn\" [disabled]=\"!this.isEditable\">\r\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 14 18\">\r\n        <defs/>\r\n        <path d=\"M12.333 3.933L1.267 3.8c-.133.133-.4.133-.533.267A.8.8 0 0 0 .6 4.6l1.2 11.6c0 .4.267.533.667.533h8.267a.61.61 0 0 0 .666-.533l1.467-11.6a.8.8 0 0 0-.133-.533 1.343 1.343 0 0 0-.401-.134zm-2 11.6h-7.2L2.067 5.267h9.467z\"\r\n          class=\"cls-1\" transform=\"translate(.2 1.267)\" />\r\n        <path d=\"M13.333 3.2h-2.666A3.739 3.739 0 0 0 6.933 0a3.607 3.607 0 0 0-3.6 3.2H.667A.63.63 0 0 0 0 3.867a.63.63 0 0 0 .667.667h12.666A.63.63 0 0 0 14 3.867a.63.63 0 0 0-.667-.667zm-6.4-1.867a2.442 2.442 0 0 1 2.4 1.867H4.667a2.407 2.407 0 0 1 2.266-1.867z\"\r\n          class=\"cls-1\" />\r\n        <path d=\"M5.367 13.467a.63.63 0 0 0 .667-.667V6.667A.63.63 0 0 0 5.367 6a.63.63 0 0 0-.667.667v6.267c0 .266.4.533.667.533z\"\r\n          class=\"cls-1\" transform=\"translate(1.567 2)\" />\r\n        <path d=\"M3.9 13.5a.714.714 0 0 0 .667-.667l-.534-6.266a.714.714 0 0 0-.666-.667.845.845 0 0 0-.667.8l.533 6.267a.886.886 0 0 0 .667.533z\"\r\n          class=\"cls-1\" transform=\"translate(.9 1.967)\" />\r\n        <path d=\"M6.942 13.475a.63.63 0 0 0 .667-.667l.533-6.267c.133-.267-.133-.533-.533-.533-.4-.133-.667.133-.667.533l-.533 6.267c-.134.401.133.667.533.667z\"\r\n          class=\"cls-1\" transform=\"translate(2.125 1.991)\" />\r\n      </svg>\r\n    </button>\r\n  </td>\r\n","export function stringCamelize(str: string) {\r\n  str = str.toLocaleLowerCase();\r\n  return str\r\n    .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, function(word) {\r\n      return word.toUpperCase();\r\n    })\r\n    .replace(/\\s+/g, ' ');\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { WorkOrdersComponent } from './work-orders.component';\r\nimport { ViewWorkorderComponent } from './view-workorder/view-workorder.component';\r\nimport { PickWorkOrderSparesComponent } from './pick-workorder-spares/pick-workorder-spares.component';\r\nimport { CreateWorkOrderComponent } from './create-work-order/create-work-order.component';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: WorkOrdersComponent\r\n  },\r\n  {\r\n    path: 'create-work-order',\r\n    component: CreateWorkOrderComponent\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: ViewWorkorderComponent\r\n  },\r\n  {\r\n    path: ':id/PickSpares',\r\n    component: PickWorkOrderSparesComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class WorkOrdersRoutingModule {}\r\n"],"sourceRoot":"webpack:///"}