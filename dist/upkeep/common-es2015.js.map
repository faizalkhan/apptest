{"version":3,"sources":["./src/utils/formValidators.ts"],"names":[],"mappings":";;;;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0B;AAEnB,SAAS,yBAAyB,CAAC,yBAAmC;IAC3E,OAAO,UAAS,OAAoB;QAClC,MAAM,KAAK,GAAa,OAAO,CAAC,KAAK,CAAC;QACtC,IAAI,KAAK,EAAE;YACT,MAAM,gBAAgB,GAAG,CAAC,CAAS,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YAC3D,MAAM,YAAY,GAAG,CAAC,IAAU,EAAE,EAAE;gBAClC,IAAI,SAAS,GAAG,EAAE,CAAC;gBACnB,IAAI,IAAI,CAAC,IAAI,EAAE;oBACb,SAAS,GAAG,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBACzC;gBACD,OAAO,CACL,CAAC,yBAAyB,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,IAAO,yBAAyB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;oBACnG,yBAAyB,CAAC,QAAQ,CAAC,SAAS,CAAC,CAC9C,CAAC;YACJ,CAAC,CAAC;YACF,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;gBAC1C,OAAO;oBACL,kBAAkB,EAAE,IAAI;iBACzB,CAAC;aACH;YACD,OAAO,IAAI,CAAC;SACb;QACD,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;AACJ,CAAC;AAEM,SAAS,0BAA0B,CAAC,YAAoB;IAC7D,OAAO,UAAS,OAAoB;QAClC,MAAM,KAAK,GAAa,OAAO,CAAC,KAAK,CAAC;QACtC,IAAI,KAAK,EAAE;YACT,MAAM,YAAY,GAAG,CAAC,IAAU,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;YAC9D,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE;gBAC1C,OAAO;oBACL,kBAAkB,EAAE,IAAI;iBACzB,CAAC;aACH;YACD,OAAO,IAAI,CAAC;SACb;QACD,OAAO,IAAI,CAAC;IACd,CAAC,CAAC;AACJ,CAAC;AAEM,SAAS,8BAA8B,CAAC,gBAAwB;IACrE,OAAO,UAAS,OAAoB;QAClC,MAAM,KAAK,GAAa,OAAO,CAAC,KAAK,CAAC;QACtC,IAAI,KAAK,EAAE;YACT,IAAI,KAAK,CAAC,MAAM,GAAG,gBAAgB,EAAE;gBACnC,OAAO,+CAAE,CAAC;oBACR,uBAAuB,EAAE,IAAI;iBAC9B,CAAC,CAAC;aACJ;YACD,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;SACjB;QACD,OAAO,+CAAE,CAAC,IAAI,CAAC,CAAC;IAClB,CAAC,CAAC;AACJ,CAAC;AAEM,SAAS,qBAAqB,CAAC,GAAG,GAAG,CAAC;IAC3C,MAAM,SAAS,GAAgB,CAAC,SAAoB,EAAE,EAAE;QACtD,MAAM,aAAa,GAAG,SAAS,CAAC,QAAQ;aAErC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC;aAE7B,MAAM,CAAC,CAAC,IAAI,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;QAGxD,OAAO,aAAa,IAAI,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;IAC1D,CAAC,CAAC;IAEF,OAAO,SAAS,CAAC;AACnB,CAAC","file":"common-es2015.js","sourcesContent":["import { FormControl, ValidatorFn, FormArray } from '@angular/forms';\r\nimport { of } from 'rxjs';\r\n\r\nexport function fileListFileTypeValidator(mimeTypesOrFileExtensions: string[]) {\r\n  return function(control: FormControl) {\r\n    const files: FileList = control.value;\r\n    if (files) {\r\n      const getFileExtension = (x: string) => x.split('.').pop();\r\n      const isAcceptable = (file: File) => {\r\n        let extension = '';\r\n        if (file.name) {\r\n          extension = getFileExtension(file.name);\r\n        }\r\n        return (\r\n          (mimeTypesOrFileExtensions.includes(file.type) &&    mimeTypesOrFileExtensions.includes(extension)) ||\r\n          mimeTypesOrFileExtensions.includes(extension)\r\n        );\r\n      };\r\n      if (!Array.from(files).every(isAcceptable)) {\r\n        return {\r\n          acceptableFileType: true\r\n        };\r\n      }\r\n      return null;\r\n    }\r\n    return null;\r\n  };\r\n}\r\n\r\nexport function fileListFileSizesValidator(maxSizeBytes: number) {\r\n  return function(control: FormControl) {\r\n    const files: FileList = control.value;\r\n    if (files) {\r\n      const isAcceptable = (file: File) => file.size < maxSizeBytes;\r\n      if (!Array.from(files).every(isAcceptable)) {\r\n        return {\r\n          acceptableFileSize: true\r\n        };\r\n      }\r\n      return null;\r\n    }\r\n    return null;\r\n  };\r\n}\r\n\r\nexport function fileListNumberOfFilesValidator(maxNumberOfFiles: number) {\r\n  return function(control: FormControl) {\r\n    const files: FileList = control.value;\r\n    if (files) {\r\n      if (files.length > maxNumberOfFiles) {\r\n        return of({\r\n          acceptableNumberOfFiles: true\r\n        });\r\n      }\r\n      return of(null);\r\n    }\r\n    return of(null);\r\n  };\r\n}\r\n\r\nexport function minSelectedCheckboxes(min = 1) {\r\n  const validator: ValidatorFn = (formArray: FormArray) => {\r\n    const totalSelected = formArray.controls\r\n\r\n      .map(control => control.value)\r\n\r\n      .reduce((prev, next) => next ? prev + next : prev, 0);\r\n\r\n\r\n    return totalSelected >= min ? null : { required: true };\r\n  };\r\n\r\n  return validator;\r\n}\r\n"],"sourceRoot":"webpack:///"}